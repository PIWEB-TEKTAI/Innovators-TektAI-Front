%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1902.i039.011.P.m004.c30.cloud services isometric icons-13.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: MSI
%%CreationDate: 5/14/2021
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 13 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">1902.i039.011.P.m004.c30.cloud services isometric icons</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2021-05-14T09:36:46+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2021-05-14T09:36:46+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2021-05-14T09:36:46+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9QX100KKkYBmkNEr0FOp&#xA;PyyzHC+fJjKVII6g8MTvLcAKm7ySABR40+zlvhWaAajl4RZOw72M6v8AmI8Z9HTgrsTQzuNh/qr/&#xA;AFzY6fskkXP5PL632rxxmIYRxb7y6fDvZrbXccwoNm8M0r16virsVdirsVdirsVQlzqdvbtxarEd&#xA;aYQLUlRvPMGkWdhJfXM/p28PH1DxZmBZgqgIoZ2JZgNhhlEjmgG+SLsr6yvrZLqyuI7q2kr6c8Lr&#xA;JG3ElTRlJBoQRgMSDRWMhIWDYVsCXYq7FXYq7FXYqpzTpGPFj9lR1OEC0E0hJL28pyjjUAdUavI0&#xA;8OmXDHHqWBmUVa3MdzCJE27Mp6g+GVTgYmmcTarkUuxV2KuxV2KuxVCX2oJbDiN5D28MVY9qn5ga&#xA;To5Ed9I013IvK3sLdRJcSe4QU4r4u5Cjucsx4pTNRFtGfU48UeKZEQu8jec7vzINQF3YLYSWcqCN&#xA;Fl9blHIvJeRCqA4oagVHvk9Rp5YpVLnTRoO0MeqgZwvhsjfyZVlDnJTQvNLLOaNVlFTTioNKDMm6&#xA;App5l57e3N3fahcfWZDJb2khSO3UV5EMRGgQdelT7Z0GOEYQHCN5Dn975xrtVl1GomJknHjnQiOp&#xA;sgbdeVm+gKjdxpNHIOaMqsnK4kZVihBNPimYD7TEALX6K7YnNHGOKR4R9/w/S2R0EtTLgxDj3G/S&#xA;Pf6q/wBiOW5och0DSvUN4F7CpPyGcuX0gJ9gS7FXYq7FXYqo3VykEZLHc/ZxVh13rNoNVFlI4SSS&#xA;P1UZmUAjkE4gE8iansMzcGMgcVH3uNkyx4uGxxd3Xr+pDXGp2ssbrEyzLVkJjaoDKeLDkp6qwI8Q&#xA;R2zl+3faeOkmcMY8U9ufLf8AHz6dXZ6Ls85AJ3QTzyoINPji0a1i4WsSPJGASaVfkxYmrFnZyxZi&#xA;STUnfOlzYRGNhwITJO7JMxW12KuxV2KuxVKfNGuW+h6Ldatdv6dnZxtLPJ1IC9AB3LHYe+ECyiRo&#xA;WGGSeeZY7vQ5pAj2uvtD+iuAdnmWUcmP+R6SEMxcDwy+QxixEmx8j+pwcMtSSDkERCXTfij3b7iV&#xA;+VMydlkk5xpWQgdwGBB679t8YSFc3KIc0ktjcGQANbzMOY6FT44aEx5hQaKaRTJKtVOYzavxV2Ku&#xA;xV2KuJoCfDFXlXnvzDrI1uHSbCYWgmge4ur0KHlVFkVAkIaqqx3qzKfYeGdodKMsjZ2DpO2+1JaT&#xA;GDEXKR+AWeVfJdk0MtzKGUTnnNM7M8sh/mklcl2PzP4Zs8uaOH04w6LQ9mz1o8bUyJB5Dlt+j4Mr&#xA;8u6LY+Xn1C6Fz/ol36bs0lAIxGpH2u4Nc1erzHIeI83pOzdBHSwOOBJiZWypGNaZhl2QKjqEaNau&#xA;xAqg5gnbp74YCyAszQJeW6/pl7ZaJf65b+ncyu0no27SejBUsTW5kLIFRSPiBZd9qjN3m1xiBCI3&#xA;A5n9DyOl7AhPLPNklxCcpHhHKr/i/SHaSdbl/L2dYZbPWvMEDKZbixERtQJrgerDC7BIv3VuNxWt&#xA;dzuRXXGciedl6MYYRjQAiAKGw2/Q9F8uMJbMzk83JKCWgHNFPwvQdOakNTK9TARnQ/s8vgz0eQzx&#xA;gnfz7+4/EbptmO5TsVdirsVdiqTa+JQA4B4UpXtluGIMgGMzQYXrPlTTdXvtK1G5JSfSLkXUTA7N&#xA;xBorqfhNCagmpG9KVzPkLI8nFAA36sO/LXWtf1TT7rTr3SYtMvdNii+qyKpFnLGxZOUartRTGeXF&#xA;uu3wkZxg9lYZM5yGRruP1fM/Hf5Vzdse1OHHW3v6PVdB1BLS7u7W6tmjkjWJvrfIP6iyM/FeH2l4&#xA;Ko9jyr1rnTSx1ERj9Mdh8AOvUutGeN78zv8AaendsyaKVJYxIhqp6ZQ5C/FXYq7FXYqxz8xfLaeZ&#xA;fJmp6GztEL2NQJlUP6bRusiOVP2gGQVA3Pt1yUBuwyEgbC3nemaBfaHqFxqQHJZrK2s5Hik9SOlt&#xA;Esf2OCmMGhruQdidxmy0WGBkb5mq7/P9Dz3bmszwhHgB4BxWRuOe3mOt7VaZ2PmK9sJre3Wt3FMS&#xA;FRnBKsKbK1SwJ5dqj2zMz6aMzyI8wNh73Tdn9pZscTUhMCvQT6jZo8J33F7jcdwZtbzT3YSO4R4Y&#xA;m4seQBcFjQKwBNKnNPIcJNEF7PFlMogyiY33/pTuKJIl4oKDMdyl+KuxV2KuxVxFRQ4q8y816QJP&#xA;zE02OQP9XlsX5OEYrUTA0LAU/H+GbHQ5uASPWnR9r6H8zPFE/QJEy+X6Va8826boOnaXNf3VrHYT&#xA;vP617GWMAjhPFGWnLapWtTT6aYOHJKzIURzvY/a5Yy4cfDCG4P01uNq6j3/YWE+bPPnnfX7ttF8m&#xA;6FdxraM31m5ukaF5CoH7vi5QJXkGoTyPgN8hjzcMroH3s9RpRlhRMh5xNF7R5fkuv0fawXYU3kMK&#xA;LctFUxiQAAryJO/05Rl533uTjFCu5MriP1YJI/51K7+4plQNNhFsRm0u7t5iY5HhYmrn4zWgAG6P&#xA;Hy/2fLM6OsBFSF/jzB+ynW5NBK7hLhv3/oMb/wA61NrC/uXKz3LSxn9gI30fC7yR/wDCZL85CI9M&#xA;d/x3C/tRHQzJ9cuIfH7jIj7GUaRZm0sxEQQSS1CSTv4k7k+OYM5mRsuyhARFBG5Bk7FXYq7FXYq0&#xA;yqylWAZTsQdwRiqU3WjAzq0EKcBQ/ESQN/5SaV8KjLxnlW7VLH3KXl7yxFoum22no/1iKBPTMjl+&#xA;fWpbkWdmYnerNWtd+2QGQ1XX72JwDisDb7vd+NuiZR6ZYx3E1yI+U1wUMrOzPvGvBaBiQvw/y0r3&#xA;yFlt4R3IoAAUAoB0AwMnYq7FXYq7FWnRXQowqrChGKse1Py+ifvLYylmFCAa/F2JzJhnrmHBzaS7&#xA;IJ/akmqflzYa3aGzvrZVHISLKeYHMUJ5LG0Zoabiu+ObUzmK4jX4+a6TQYsUuLgjxd/45edc2Yrp&#xA;3pAJC/7sujuH+JvhYNs3XeneuVeJ3uRLEeh2sffaMytudirsVdirsVdiqA1fTkvYFBFXjPJD3B2N&#xA;R92ThMx5IMbedp+X8dvcSfWLu5nt+KelBLFbTLFLFXjLCJU4ROpZmHFftGte2XDICNzZ892sxrkA&#xA;B5bI/wDRGoy+a7e5Q3J06OzmRkMgMTXEk0TKzqCGeQLGaHjRQSBWuQllPFY7qZgDhrzZ1pts1vAF&#xA;YcelFHYDKSWSKxVoqrdQD88VcEReigfIYq3irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVaKq3UA/PFXBVXoAPlireKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuPTFUnuddET0JjiU&#xA;mimRqVp4ZdDBOXIOLqNdhw14khG+VlH2N21whLJxZTQ+GVEU5INonAl2KuxV2KuxV2KuxVK7vzHp&#xA;1teG0klRZgORVmCmlaV398lGBkaAthPJGIuRoI+K5hlVWVh8W9K75Fmq4q7FXYq7FXYq7FXYq0zB&#xA;QSxoB1JxVqOWOSvBgadcVXYq7FXYq7FXYq7FXYq7FUofU3aYyer6VqGKxhV5F+JozE0ai5lDDtVW&#xA;XGyagR5mvx9yMF+sRVbhgC5PFlBA+nc5RKPc3gosEEVHTIMkHf3L27RuPsNs30b4qwi71jUTfXSx&#xA;RW+oQRzuYzGypLA3I0WVH+ni4zd4sMOEEkxJHwPur7nQ5s8zOQEY5hGW24BifPi+yQ+Sa+WNVmmj&#xA;nQXcM12khaWCNq0QhQux3I2PxZha3GBMACtv1ub2dnOSBMpRkeL+HkOW19ff3sltr6OVgjApL/Ke&#xA;/fY5guxROKuxV2KuxV2KuxV5HbWl9pvmPzBqV3c+s+oXLfVVe4jAitzSkZSdeQFd/h5bdPDN5psR&#xA;MACfTseRP2j7nmNXqoQzHkJ7j6ox5n+bLnyG4Bvl5Ml1mXU9D0WO+gt5LiO2ZfrFtCjSzi3FeRRA&#xA;VqQB7/M9c12UQkSSa6+Tt9PKcYxiI30q9wO/fnXL7iWaQSGSFJCjRl1BMb05KSOjUJFR88xHYL8V&#xA;dirsVdirsVdiqA1C5URVDhXVgFB+Y3phpDH9Xv7qDSrlrIFb2OOSRZOjcwCRTZvnQg75kYsHFzNN&#xA;GbMYRJAuvOvt6JD5W/NLUtXi0q8t7A3Gmag6281SVuLeRZZEmmlI5RrEiRqwDEFuVB8Q4mM8JB2B&#xA;4TdLiziQO44o1xC+Vj8d2z00EEVG4PQ5Q5DsVdirsVdirsVQeq8jaFQ3BGZVlatDwJ+KmWYiAbLG&#xA;Y2SbUZtPikiVV9RwAvox8eJUfGA1R0qK9cyYTlRdfqMUDMXue7bfrv5beSFlmvLiXnIQoU0CjoAR&#xA;XKckSHMxyu7ZVayCS3Rh0oB92UNyD8w3umWOlT32qSmCxtEee4mCs/COJGd24qGbZVPQYQgvLNS1&#xA;Kz1/TrXU4kSKwub6SGHUUQpc/VFT1FA+N1cMpBDHt0AJqNzpDKJ4RO9r25fsPe8p2vIS9Rx7cUY2&#xA;QeLfc0B9ca5A7X0KXeVPN3lC387JaaSPWiNsbe4nhLNGrTSxfvDJLVpCOCg9a7n2yvUA5ajD1GNk&#xA;/Z83I7Ph+WkZ5SI+JwRiN+Y4tgOg3+w7R5PW7EzPfR8V5Rxkl5OtKqQPvzVl6MJ1kUuxV2KuxV2K&#xA;uxV54+qoLeRzcmN3duMfKFUDltl4f36t/MB8VffN7HAbArl7/wDpH9FPMHUxIlUqkSdrjV+76we8&#xA;De/NO7a2kmtq3MrCMqUZOR9MjpvGxaP6AKe2YObLGN3Vef6+bsdPoQK3lf8AWlXl6eIxFeQruAZH&#xA;bSI8Y4inHYrSlPlmFKNO1ibVcil2KuxV2KuxVSuZRFHyIJ7bYqx69uhGXZV/0hXNFJ2FD0rl2LHx&#xA;FhKVMBl8wXt/pyx3XKGe+uHdbduHqLABySM8fhYmhbY7gV6GubzQ4xQn0ra9t3iPaftCUYHAK4r9&#xA;VG/T57bWen60Ekc8CSPan6ta2vpvOxlWNY3YkRncqPHf9nMvNqMcCBMfVe/T8F5/svQ6rUQlLDL6&#xA;JRNWQST1/wA3nv05PZdGt7m20u2hunMlwiASuTUlu+/fOXzyEpkjk+q4IGEBEmyBzRmVNrsVdirs&#xA;VdirHNVnknmdCaKvQew9ssxw4ixlKmLaBrTXOpXmlyRuk+nyly5jKRmNhRFZ2O7lTXp03775/AAS&#xA;L4v0eX9jr8cpGIJiYUT/AJ3S/j57pnJcxpaNPI6RRrKplm5cQERxyZiQO3Uk5KYoH+qfuZ8VkV1I&#xA;Zjp/H6lCyggOivRqVHIVoaVzUg27AijSWa7o91rNncaZdFRYXKPHIUJVuDqVO/XcN2p88siYjm0z&#xA;EyduTHH8paLD5Zg8p6pY/WdFtwIYGX4JKjcvVOBDMak0pXLhXMNHHKO0hte34/HxSGH8pdE0mHRh&#xA;5aljU2+q215qlxcuVkltYGLPG1FfmTsAnwrX6cPiyiKG1+bI4scyCQJcJ28nqtj6Bg5wqFR2YgDb&#xA;oSP4ZjFyQr4EuxV2KuxV2KobUGkW1cx/a708MVYXpmjP9aAnG0YojgoQR/k/CJUoNuJc+FTm6yao&#xA;GPp/T+uvsdDpdDOGQmfIcuVfD0iQ93Ee5B3mrw6n5UbV4vT+ry2kwt4Fl58nRnWvOMbA8R8Q3Xwr&#xA;nM6zs2efUCciPDhHlz3Bv8F32LWQx4wADxT+HMdfd1T/AMj32pTaPpwltmjj+rwrIXLs4dY1Dcmk&#xA;+OoP84rmzyAVbi4ZyJo8htffX3MqyhynYq7FXYq7FVskaSKVcVBxVJb7QnqHtzzUH4kP2qe3jmTg&#xA;yiNgtc4WwKbQfMcE1klzpQuf0hfLDcTCNpZoYnVmkn5qGjQClAXp1zZanW47jwHl8nlOzOxswGQ6&#xA;gRPiWDX1bkHnyrax94TjybolpqNpKLzT4rYxXUx+qSxcvjt5qLKPURD8TjmD1Hj3zXTzWN9y9Dhw&#xA;cNiHojQ29wAHdew+xnNjb3EEKxzS+rxAVTxAoAKduuY8jZtzIAgbojIsnYq7FXYq7FWM+aLf0ZIJ&#xA;UO8jHuVI6VoenfvtmXperVlS5I5Hu2ngieeRLdVIiALUcsR0AG/E98zCIjnQs/c4AlIg1Z8vm6HT&#xA;nvUijhnLTb+tAEISNyKMS7Hcp1UUp45HJkERIHket7tcCZmJhzHPbYfHyZF5Y0+fTNEsdKdf3enW&#xA;0NrFIaVZYYxGGIG1SFzVnm7aN1umuBkh/qFr65nKVkPUncb4b6I4Rd9VNtJsS5fhQnc0xtaCLRFR&#xA;AiCijYDAlvFXYq7FXYq7FXEAih6YqhZNMtXfmAUbxQ0wg0ikBYeUtHsbWO2gQiGIsY1HFQOTFzRU&#xA;VVG7eGCJIWQEjZCbxRJFGsaCiKKAYpXYq7FXYq7FXYq7FXYq7FXUGKuxV2KuxV2KuxV2KrJoIZkK&#xA;SoHU9jhjIjkgi0FHoVjFJyhDRIy8ZY1ZqSeBc1qSOm56ZcdRIjfdxvykbsWO8d6JhsbSF+cUYQ9B&#xA;x2A+QykyJ5uRGAjyFK+Bk7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVI3duH4Fxy8MVVcVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVcSACSaAdScVWCeE9JFPyIwkKvBB3GBXYq7FXYq7FXYq7FXYq7FXYq7FUF&#xA;qt2YIOKmjvtX2wxjZpBNJZBEgoXqZWpv/KTuMyjAU08RTu2djCvM1bxPfMaY3bYnZVyLJ2KuxV2K&#xA;uxV2KtOyopZjQDc4qkd7qju5CGiDtlmPGZMZSpfp2o8WPq1CdzQkfhk5YCOTEZAU3imilXlGwdfE&#xA;GuUkU2WvwK7FXYq7FXYq7FUhv72aRJpQvOK3BJU1oxHQUH45Xq85wYJZQLkBsE44CcxE8lJLuX0J&#xA;PXp6rN+74rxKpQGlDuN69d8o0GTPKEjm6y9O1emh058757ss0YAjh7vtU9G8xQ3ZlMHqBYZmgkEk&#xA;bxVeP7VBIF5L4MNj2zKBB5MZRI5snwodirsVdirsVdiqWatftF+6jNGPU4QLNIJpCWi3zR1E7Rq/&#xA;TepJ9q5eccRt1axIlQtdZRdTfTxexS30K+pNZh1MqpUDkyA1H2x9+QljoWEjILrqyRGDKGHcVyps&#xA;QWoWzySxSBSypWqjf5ZZjnVsZRtjGoeb7OxvVhFrJd3jpygtIwOTAkqGkY/DGnJep3NGoCQRmYME&#xA;pCh/Y6nL2ljxG5cjyHWXuH4He7yV5o1nV9Y1m11FIYktEtpLeGFWBj9Zp1dGdj8dPRHxcV77DpkN&#xA;VphioXdi17L7SOqEzw8PDLh8/izJGJNMwy7YFfgZOxV2KuxV2KpdrM5SAIP2tzhAsoLz3QPNMuse&#xA;ZdTtPq01rZ6UxtZXl4+nJKHqJFanQpT9rbuOmZ+LGADueLupwsmWXELA4K53ve21J/NIh1SCVynp&#xA;25LqVT9g7AE15A7702PhlwxjgPefNxYyzcYJkOGzsI/wnl1ux38v6Kb+X5NQkup3mCi1KJ6dAKl6&#xA;nl2UkD3GYmpEQABzc/TGZjcqvy5J7mI5LsVdirsVdirsVYV5q8wf4etHmMUly9xdR29vaQkB3eeV&#xA;Yl3PRRyFTlu/DfQNdjjEf4ixWTz1qWuJfJ5Xtl+vaNcgyxXlUt7y04yoEWb/AHU8kiHgzUUMtCft&#xA;DLBj443Eg/f8mqWbw5cMwQO/p8+Q+LKNDk1C/vDPdlI2MVtGbWOQSek9XaQOF5IHq9DxkYUAFdqm&#xA;EsUoxBIq2yOaE5ERN0zfKW12KuxV2KuxVRu5jDbvIOoG2KsdiWe9uTU7Lu7HMrHERHEWmRs0x/zb&#xA;qWpHzCujQ3L2ditrFcSPAeEzGQzR8BL1jUCPqtGr3FN6Nbn8DSZM4HFKFbHrcgHCyZZS1WLTg8Iy&#xA;cVy6jhje17fNj+h615N0n8wILNdTtbeJbKaDiW4hppZYZKEmqgn0yfiYE9uuVaLNqMmE+N9XGeHb&#xA;h9PDGtunq4ue/VlDRY8WolLH9EoRBJJJMhKd7ny4fLuewQsKrxPw+2WlzRzVLiQxxM46jpkGx4b5&#xA;21jVNDlfVbexluhMojjkQAxrRmVvVJ5cVo9NxT783WPPwRIqzY+4PKZ+zDnnHJxcMYxl5k+qV89u&#xA;R8/cl35fT/mC3mW71OW+tP0W8ghvVCh3kMdXCqFPqKwMh/vH/arQ5RlhORPHW23u91O20ngY8YOL&#xA;6Zb2buV9Te/47nuWiag11VSN1G5/hmvmKLsYSEhYTXINjsVdirsVdiqXazbPLGCvhTJQlRtEhYY1&#xA;HoLweqbOzSF7mT1LqaNUTk9BR5CKFj956Znxzw5uNLGapjvlzUHmGrUR3ntNTuLIvJyZB6SqWEYf&#xA;sC21e3bLjkjLaJNefef0OsJzQj+8EeK+nKh7+vVk/lueRNW1W5VZ5i7wxzQ8y6o6x/soBRDSnLkR&#xA;2+Wa0wG4vcfj4/C3b+IaiRHY/j4fGv0MvjfmgbiVqK8W2I+eVNy7FXYq7FXYq7FXlX5peWNR1yRh&#xA;A5WSMq0Zj5iSMxyc1eMxlWBIIHIVp3BGbjT8EsPBy3t5nVjLi1ozAcUeHhI61fMDu5X9vRj+kz+Z&#xA;INMk06/uGuZGZpJpAvBp3kCglkCr9j7Kip2UfIZmi0McQ3rnsXRdsdvZNQQIcdSEhKJHfGvjX3/B&#xA;l/kfT9Rh1Rru4UxI+wiOxJdgalTuB8PfK+0ssDj4Ru5fs5pdR48suQcIle39Y866Dbq9Gzn3uHYq&#xA;7FXYq7FWnjSRCjjkrbEHFUDFpf1cyeg9Ec14sKkbdAct8WwAejDg3ea/mF5Zv9blnS1uLjTdSdEh&#xA;W5ADIY4S8i9N1UtKasGBG3yzNxA+GakN/wAU6jUZIfmIiWMmQ5SqwOW/6zzHLqxjyr+TOi6MYLrV&#xA;OGtamHVmRlYWkbDfiA1PU6b8xT2yqAjW7m5cpHLfevwXs+hJqRAkuKCJhUDoajbp0+7bMfLV7N2H&#xA;jP1BOGUMCCKg9RlTekn+FbNCWiJJJJ/efFSprtl0tRIuNi0kIbj7UHpvkXT9PEyWqxwQ3EhlkijR&#xA;VXkQoNAoXrxFa75WJkN0oAmyOlMitrWK3XinXucizVsVdirsVdirsVdirsVS208u6RZRTx2lulv9&#xA;ZlM8rxKqMZWNTJVQPiJ6nJiZDWcMT0R8MZjjVCzPT9pjUn55BmF+KXYq7FXYq7FXYqhLzTYLo8m2&#xA;cd6AjbpsclGZjya8mGExUgCgToDHb1TSta85f1cqZd+Zl5fIOL/J+O7uf+nn/wAUjbLTILY8h8T9&#xA;jQACvWgGUymZc3Kx4owFRFIzItjsVdirsVdirsVdiq1443FHUN8xiqmLK0ChfRTiOg4igw2gABWA&#xA;AAAFAOgwJdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVcCCKg1GKuxVLb6+kSYxJWopsNia5KMbKCaU1a6G4cFv2lBO368mc&#xA;YYCa/TNRuri5eCdAnGMOFo3IAmgq32TWh6ZGQjWx3YwOQn1Con9H9qZ5BudirsVdirsVdirsVYp5&#xA;s8+eXfL+oW1lqmox2lxdsiW8LE8mLnipIUMQpbbk1BhAQSmI1Kf0w1W41pWu1euKozT75p2KNuQK&#xA;174Eo7FXYq7FXYq7FXYqpyzxxirGmKoX9ISMxEcRb+Uk0GWDH1LAyVLO+E7NFIvpzJ1TqCPEYzx1&#xA;uOSxlaKytm7FXYq7FXYq7FUj8zalPZQ84k9QoFb068eVW4kV8cv02MTmIlp1GQwgZAXTG9J1C+ju&#xA;HuDc3MyzGjQyp6ax9ySw2brsE2ObTUYomPCIxBHd1/Hm6DRyy48pnLJOcT0lGhH48j5cHNktpqk3&#xA;1pIpFZGalVYHcE0r3zUzxkC3fYs8ZEgXfn3fj4p3lTel10IhfGSWiKqAqx2FBUkn5ZfAbbc2qcgD&#xA;ulMWvaZdaw2mRSTRSwxrcepxVElUk1jXl8Zp1Ow+fXL/AApxFmO3e4ZzY8khET4ZDeuRI+I5e5LY&#xA;9Uk07zRrV0gje2uUs/TjVqv60ayLK0i8QVqnpAbkUFc5rtntrHoSIyiTOQsd3c7fSaaWblyDLtOv&#xA;4ru3jcfDI6BmTwJFTTM/SZjlxQyEVxRB+YthkjwyI7ii8yGDsVdirsVdirsVfPX54x3L/mJM9uzx&#xA;vD5caZpY4vV/dx3LeqDXZAYy3xfs9t8lw8Q4a2kflw+of7KIHxaMpoiX839PpPQ9JE/q5vWdOa7h&#xA;jij1OS3OoAkSwwV9MgluJUPVt1Q9fA4xBLdKgdk0siFuYBQgnnRduPE7ih6/fiQoKcZFLsVdirsV&#xA;dirsVYxe6g3rPEn75lYqaHY8TQ75bHEeZ2cWepF1EcRX2+oRPb8HoOhUN06/qy0RIKBnifI9xS/z&#xA;Vc65Z2EOoaLB9bu7SQSSWayqjSwgnkhZvY/7fTJHhMTd+Vd7I8fFHh4ee993l58uezK7G4aeLkwA&#xA;YfaoaivtWmYbkonFXYq7FXYq7FWD/mBqCRatpOn85BLfrN6UaKGV/QAJDHcj7YIoMzNFXiAn8fj3&#xA;hxNYTwED7vx/uZKVlxFBtvtvQdVoev8AT7+mZ2VoE4iIEiN+9ExXCxzqpHFVYgGtAHZlopBINTUU&#xA;FPwoMx80DKNpwzjjlwgbb79Lvlz5np+AzNfsjNa7FJ9evfRjuFXZjbuC221R7hh+By/ALlH+sHF1&#xA;O0ZH+gfx1+4vPTptlqHmXSb25iEtzaNW3kZWQAgE/CBcyI/WuyEDr2zcZ8Fxu/p878v5orpud+jo&#xA;tBqDx0RZlQuqO2/PxJ2Oew23tA2Vn50svOWp2d7a28mgXz3F3p2oxjkY5HYMI51HAtse/wAg3hx2&#xA;v9n8Opz+LMkfd+w8v1Xu9Zg10scOEU9C8tW94jr6sglpQ8wOIoFUNtv1YE9e+bKOOGOIjAVENPFI&#xA;m5c2T4pdirsVdirsVcSB1NMVec+f/K+h+YLq7cW3q6vc6dc6baaj6riKEyKTEJ41ajoJTyB4NQj5&#xA;ZkwwiUb5SH2+5x5ZvVQ3B+x475rsfzL8tTy2mouNT0XTiseialIkawiT0vWSTi6kNIsULR8mJIJI&#xA;DVO7GRBPeVnEEC7od33bfoerfkVfarfeVFk1aaSe8t72SJ5JRJzFYkZlYys7t+8dt/uAFMc+IQoA&#xA;3t9vcx0+Y5LJHDvQ93e9SzGcp2KuxV2KuxVB6tOYrRirhGNOpANMIFokQBZYzYyWRvpGvFMULN9h&#xA;vsSHpVydx/qn8eubA4zwjhNn7nV/mseOZscN9en7PjSaa5qGjWFlBLdrxglngtYgijZ7iRYk6dBy&#xA;YV9sxYiV+bk5OCcbPIfZ8VKG0s7+ZJ7YBzGWWOZl3AI+Iox6qfbDI5Mdxur6MsOTHnHHHeuRr7u8&#xA;e5kEMKQxLGnRR/mcx3KX4q7FXYq7FXYqx/zLpUt1dWtyvExwfaVo1eoJqaHZkPgyn78ytPnELBHx&#xA;7nHz4TOt9uo6FjuoaXc/WtPezDPFC7CZeXEhWCAdKVHwnYDrTsM2WHURMZXzLgZ9KTKG1xF2oSaV&#xA;exebLCDgClxEbl5fTI4CAryHqKKVq9OPIA8un2uVEtWOHh9/9v4/VSNCfE4tqFVt/sfL515c76Qv&#xA;2R8s1Tt0v1LS3uZBLHJwIFGUdT9PbJxnXRqnjMjzpK49De2naW3tY45WFDJGgBI+Y3y2WpnIVIkh&#xA;rjpccTcQInyCpFoV1O4N0QqA1oOuDxa5I8Ay+o7DuT6GGOFAkagAbZQ5S/FXYq7FXYq7FVG5tILl&#xA;Akwqo3pXCDSDEEUUn1Hy6rgNAC3EdKjme3VjlsMxBcbJpokcv1oaPTNT9MQzRLMjVqHUMBUFTswo&#xA;agkZM5YnouPHOI33R+l6M9s5crHCjSvcPHEKc5pDVnc9ySchLJGqAbhE3unGUtjsVdirsVdiqlPa&#xA;W85VpU5FfsmpFPuwgkMZRB5oW80mCYUjjVSwC9AFVR7AfFXw/Vl2PMQ4+bTCXIfj9P45JNqfkWz1&#xA;D6vDLIWtLa5gu4oHLlPUgkEi1RSoPxKDueP+TlktVIjul39fx9vm1YOz4Y5HrEiuG9vl+B5BkcFt&#xA;HFuN26Fj4eA8MxTK3OAVcCXYq7FXYq7FXYq7FUDdaVDLVo/3b+3Q5KMiOSCLSmXSr9pwSCSoKo9K&#xA;8Q3UK3YGm+XDOO7dhwHv2ZGi8UVfAAfdmO2P/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:8a38b355-b6f3-7e4d-b9b9-b4981484e1aa</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:8a38b355-b6f3-7e4d-b9b9-b4981484e1aa</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:aee635d8-45d7-4437-8529-24944e6b9b5d</stRef:instanceID>
            <stRef:documentID>xmp.did:e364abeb-f0c8-f14b-8b07-3863a4e623d8</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3a20f972-edde-0b45-bb2e-054a8dc7c649</stEvt:instanceID>
                  <stEvt:when>2018-10-13T13:53:22+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:607c96f9-d64a-4647-8504-f40dcd221e76</stEvt:instanceID>
                  <stEvt:when>2019-02-14T16:12:15+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bbb7c4e4-d81f-d542-bd66-7effe91496cd</stEvt:instanceID>
                  <stEvt:when>2019-05-21T21:51:01+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fa7c9a25-dbf5-ba4d-a84d-a63b28918a46</stEvt:instanceID>
                  <stEvt:when>2019-05-30T20:57:07+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e364abeb-f0c8-f14b-8b07-3863a4e623d8</stEvt:instanceID>
                  <stEvt:when>2021-05-12T19:30:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8a38b355-b6f3-7e4d-b9b9-b4981484e1aa</stEvt:instanceID>
                  <stEvt:when>2021-05-14T09:36:46+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
199.934 418.819 mo
159.899 418.819 119.865 410.001 89.3201 392.365 cv
29.8289 358.017 28.27 302.887 84.6458 267.451 cv
84.6458 271.921 li
86.0348 271.921 li
86.0348 266.97 li
85.4157 266.97 li
86.6889 266.181 87.9889 265.404 89.3201 264.635 cv
90.6773 263.851 92.0567 263.083 93.4506 262.335 cv
93.4506 280.933 li
90.7915 282.912 88.3169 284.952 86.0348 287.037 cv
86.0348 286.776 li
84.6458 286.776 li
84.6458 288.334 li
58.8709 312.953 58.8709 344.047 84.6458 368.666 cv
84.6458 369.624 li
85.2775 369.263 li
90.6727 374.312 97.1613 379.082 104.744 383.46 cv
131.03 398.637 165.482 406.225 199.934 406.225 cv
234.386 406.225 268.838 398.637 295.125 383.46 cv
308.553 375.707 318.553 366.721 325.121 357.136 cv
334.086 356.95 342.701 355.346 350.752 352.538 cv
343.803 367.127 330.403 380.902 310.548 392.365 cv
280.003 410.001 239.968 418.819 199.934 418.819 cv
84.6458 276.873 mo
84.6458 281.824 li
86.0348 281.824 li
86.0348 276.873 li
84.6458 276.873 li
94.8402 279.916 mo
94.8402 261.597 li
103.305 257.157 112.413 253.347 121.975 250.17 cv
122.07 250.445 122.174 250.717 122.286 250.99 cv
122.268 257.204 li
121.176 259.876 120.885 262.638 121.394 265.36 cv
121.393 265.36 li
121.234 264.507 121.153 263.65 121.15 262.794 cv
121.15 262.716 li
121.15 262.742 121.15 262.768 121.15 262.794 cv
121.151 265.461 li
115.408 267.86 109.916 270.554 104.744 273.54 cv
101.204 275.584 97.903 277.713 94.8402 279.916 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
199.934 406.225 mo
165.482 406.225 131.03 398.637 104.744 383.46 cv
97.1613 379.082 90.6727 374.312 85.2775 369.263 cv
87.7961 367.824 li
87.107 366.618 li
86.0348 367.23 li
86.0348 365.996 li
84.6458 365.996 li
84.6458 368.666 li
58.8709 344.047 58.8709 312.953 84.6458 288.334 cv
84.6458 291.726 li
86.0348 291.726 li
86.0348 287.037 li
88.3169 284.952 90.7915 282.912 93.4506 280.933 cv
93.4506 306.954 li
85.0183 320.877 85.0183 336.123 93.4506 350.047 cv
93.4506 362.992 li
91.4433 364.14 li
92.1323 365.346 li
93.4506 364.592 li
93.4506 372.796 li
106.726 365.209 li
110.625 368.502 115.104 371.632 120.167 374.555 cv
142.194 387.273 171.064 393.631 199.934 393.631 cv
228.804 393.631 257.674 387.273 279.701 374.555 cv
287.829 369.862 294.458 364.631 299.587 359.06 cv
299.655 359.178 li
303.51 356.939 li
302.813 355.737 li
302.11 356.145 li
302.499 355.666 302.876 355.185 303.244 354.702 cv
309.687 356.303 316.429 357.154 323.368 357.154 cv
323.953 357.154 324.539 357.148 325.121 357.136 cv
318.553 366.721 308.553 375.707 295.125 383.46 cv
268.838 398.637 234.386 406.225 199.934 406.225 cv
84.6458 356.093 mo
84.6458 361.045 li
86.0348 361.045 li
86.0348 356.093 li
84.6458 356.093 li
84.6458 346.191 mo
84.6458 351.142 li
86.0348 351.142 li
86.0348 346.191 li
84.6458 346.191 li
84.6458 336.288 mo
84.6458 341.24 li
86.0348 341.24 li
86.0348 336.288 li
84.6458 336.288 li
84.6458 326.385 mo
84.6458 331.337 li
86.0348 331.337 li
86.0348 326.385 li
84.6458 326.385 li
84.6458 316.483 mo
84.6458 321.434 li
86.0348 321.434 li
86.0348 316.483 li
84.6458 316.483 li
84.6458 306.58 mo
84.6458 311.531 li
86.0348 311.531 li
86.0348 306.58 li
84.6458 306.58 li
84.6458 296.678 mo
84.6458 301.629 li
86.0348 301.629 li
86.0348 296.678 li
84.6458 296.678 li
94.8402 370.402 mo
94.8402 363.798 li
96.4692 362.867 li
95.7795 361.661 li
94.8402 362.198 li
94.8402 352.216 li
96.4174 354.55 98.2374 356.842 100.298 359.079 cv
100.116 359.183 li
100.805 360.39 li
101.278 360.119 li
102.626 361.52 104.068 362.895 105.609 364.247 cv
94.8402 370.402 li
94.8402 304.784 mo
94.8402 279.916 li
97.903 277.713 101.204 275.584 104.744 273.54 cv
109.916 270.554 115.408 267.86 121.151 265.461 cv
121.151 272.094 li
121.146 273.987 121.524 275.881 122.286 277.734 cv
122.276 281.258 li
121.566 281.648 120.864 282.043 120.167 282.445 cv
108.783 289.018 100.341 296.646 94.8402 304.784 cv
105.209 274.293 mo
101.896 276.205 li
101.896 280.029 li
105.209 278.117 li
105.209 274.293 li
122.083 267.837 mo
122.083 267.836 li
122.083 267.837 li
122.07 267.803 mo
122.07 267.801 122.069 267.8 122.069 267.798 cv
122.069 267.8 122.07 267.801 122.07 267.803 cv
122.058 267.768 mo
122.057 267.766 122.056 267.763 122.055 267.76 cv
122.056 267.763 122.057 267.765 122.058 267.768 cv
122.045 267.734 mo
122.044 267.731 122.042 267.726 122.041 267.722 cv
122.042 267.726 122.044 267.731 122.045 267.734 cv
122.033 267.7 mo
122.031 267.695 122.029 267.69 122.027 267.685 cv
122.029 267.69 122.031 267.695 122.033 267.7 cv
122.021 267.666 mo
122.019 267.66 122.016 267.654 122.014 267.648 cv
122.016 267.654 122.019 267.66 122.021 267.666 cv
122.008 267.632 mo
122.006 267.625 122.003 267.618 122.001 267.611 cv
122.004 267.618 122.006 267.624 122.008 267.632 cv
121.996 267.597 mo
121.993 267.589 121.991 267.581 121.988 267.573 cv
121.991 267.581 121.993 267.589 121.996 267.597 cv
121.984 267.564 mo
121.981 267.555 121.978 267.545 121.975 267.536 cv
121.978 267.545 121.981 267.555 121.984 267.564 cv
121.972 267.529 mo
121.969 267.519 121.965 267.509 121.962 267.499 cv
121.965 267.509 121.969 267.519 121.972 267.529 cv
121.961 267.495 mo
121.716 266.788 121.527 266.075 121.393 265.36 cv
121.394 265.36 li
121.527 266.075 121.716 266.788 121.961 267.495 cv
.92792 .928581 .929243 rgb
f
199.934 393.631 mo
171.064 393.631 142.194 387.273 120.167 374.555 cv
115.104 371.632 110.625 368.502 106.726 365.209 cv
122.552 356.165 li
126.175 359.536 130.522 362.723 135.591 365.65 cv
153.359 375.909 176.646 381.038 199.934 381.038 cv
210.173 381.038 220.413 380.046 230.183 378.063 cv
229.632 379.01 li
233.623 381.333 li
234.322 380.133 li
230.615 377.975 li
242.904 375.44 254.437 371.332 264.277 365.65 cv
271.509 361.475 277.267 356.774 281.555 351.758 cv
286.794 348.697 li
289.018 349.788 291.299 350.784 293.63 351.677 cv
290.573 353.485 li
291.28 354.681 li
295.307 352.299 li
297.897 353.227 300.543 354.03 303.244 354.702 cv
302.876 355.185 302.499 355.666 302.11 356.145 cv
298.958 357.977 li
299.587 359.06 li
294.458 364.631 287.829 369.862 279.701 374.555 cv
257.674 387.273 228.804 393.631 199.934 393.631 cv
238.211 382.397 mo
237.511 383.598 li
239.963 385.026 li
242.406 383.581 li
241.699 382.385 li
239.957 383.415 li
238.211 382.397 li
250.586 377.131 mo
246.143 379.758 li
246.849 380.953 li
251.293 378.326 li
250.586 377.131 li
268.485 373.64 mo
267.776 374.835 li
270.218 376.283 li
272.672 374.857 li
271.975 373.655 li
270.225 374.672 li
268.485 373.64 li
259.472 371.876 mo
255.028 374.503 li
255.735 375.699 li
260.178 373.072 li
259.472 371.876 li
279.684 369.176 mo
275.829 371.416 li
276.528 372.617 li
280.382 370.377 li
279.684 369.176 li
260.17 368.706 mo
259.461 369.9 li
263.619 372.367 li
264.328 371.172 li
260.17 368.706 li
268.358 366.622 mo
263.915 369.249 li
264.622 370.444 li
269.065 367.817 li
268.358 366.622 li
287.393 364.696 mo
283.539 366.936 li
284.237 368.138 li
288.091 365.897 li
287.393 364.696 li
277.244 361.366 mo
272.8 363.994 li
273.507 365.19 li
277.95 362.562 li
277.244 361.366 li
295.103 360.217 mo
291.248 362.457 li
291.945 363.658 li
295.801 361.418 li
295.103 360.217 li
286.131 356.112 mo
281.688 358.739 li
282.394 359.935 li
286.838 357.308 li
286.131 356.112 li
105.609 364.247 mo
104.068 362.895 102.626 361.52 101.278 360.119 cv
105.142 357.911 li
104.453 356.705 li
100.298 359.079 li
98.2374 356.842 96.4174 354.55 94.8402 352.216 cv
94.8402 304.784 li
100.341 296.646 108.783 289.018 120.167 282.445 cv
120.864 282.043 121.566 281.648 122.276 281.258 cv
122.27 283.375 li
120.783 287.01 120.778 290.808 122.253 294.449 cv
121.523 292.648 121.155 290.808 121.15 288.968 cv
121.15 288.891 li
121.15 288.916 121.15 288.943 121.15 288.968 cv
121.151 298.269 li
121.148 299.437 121.29 300.604 121.579 301.762 cv
104.748 318.176 104.723 338.738 121.503 355.164 cv
105.609 364.247 li
113.125 351.749 mo
108.789 354.227 li
109.478 355.433 li
113.815 352.955 li
113.125 351.749 li
93.4506 350.047 mo
85.0183 336.123 85.0183 320.877 93.4506 306.954 cv
93.4506 350.047 li
283.906 348.775 mo
284.18 348.397 284.446 348.016 284.704 347.635 cv
284.906 347.741 285.112 347.848 285.314 347.952 cv
283.906 348.775 li
122.459 294.934 mo
122.459 294.934 122.458 294.933 122.458 294.933 cv
122.459 294.934 li
122.443 294.899 mo
122.443 294.898 122.442 294.897 122.442 294.896 cv
122.442 294.897 122.443 294.899 122.443 294.899 cv
122.428 294.865 mo
122.427 294.862 122.426 294.86 122.425 294.858 cv
122.426 294.861 122.427 294.862 122.428 294.865 cv
122.413 294.83 mo
122.412 294.827 122.41 294.824 122.409 294.821 cv
122.41 294.824 122.411 294.827 122.413 294.83 cv
122.398 294.796 mo
122.396 294.791 122.395 294.787 122.393 294.783 cv
122.394 294.787 122.396 294.792 122.398 294.796 cv
122.383 294.761 mo
122.381 294.756 122.379 294.751 122.377 294.746 cv
122.379 294.751 122.381 294.756 122.383 294.761 cv
122.368 294.726 mo
122.366 294.721 122.363 294.715 122.361 294.709 cv
122.363 294.715 122.366 294.721 122.368 294.726 cv
122.353 294.692 mo
122.351 294.685 122.348 294.679 122.345 294.672 cv
122.348 294.679 122.351 294.685 122.353 294.692 cv
122.339 294.657 mo
122.336 294.65 122.333 294.642 122.33 294.636 cv
122.333 294.643 122.336 294.649 122.339 294.657 cv
122.324 294.622 mo
122.321 294.614 122.317 294.606 122.314 294.598 cv
122.318 294.606 122.321 294.614 122.324 294.622 cv
122.31 294.588 mo
122.306 294.579 122.303 294.57 122.299 294.562 cv
122.303 294.57 122.306 294.579 122.31 294.588 cv
122.295 294.553 mo
122.291 294.543 122.288 294.534 122.284 294.525 cv
122.288 294.534 122.291 294.543 122.295 294.553 cv
122.281 294.518 mo
122.277 294.508 122.273 294.498 122.269 294.488 cv
122.273 294.498 122.277 294.508 122.281 294.518 cv
122.267 294.484 mo
122.263 294.473 122.258 294.461 122.254 294.451 cv
122.258 294.462 122.262 294.473 122.267 294.484 cv
.881046 .884967 .887582 rgb
f
199.934 381.038 mo
176.646 381.038 153.359 375.909 135.591 365.65 cv
130.522 362.723 126.175 359.536 122.552 356.165 cv
138.594 346.997 li
140.418 349.011 142.56 350.955 145.019 352.802 cv
144.384 353.015 143.926 353.616 143.926 354.323 cv
143.926 355.208 144.644 355.927 145.529 355.927 cv
146.415 355.927 147.132 355.208 147.132 354.323 cv
147.132 354.32 147.132 354.316 147.132 354.313 cv
148.357 355.146 149.652 355.958 151.014 356.745 cv
164.523 364.544 182.228 368.444 199.934 368.444 cv
209.969 368.444 220.003 367.192 229.274 364.686 cv
244.093 373.241 li
244.442 373.443 li
255.017 367.264 li
255.303 367.433 li
255.608 366.919 li
281.555 351.758 li
277.267 356.774 271.509 361.475 264.277 365.65 cv
254.437 371.332 242.904 375.44 230.615 377.975 cv
230.331 377.809 li
230.183 378.063 li
220.413 380.046 210.173 381.038 199.934 381.038 cv
222.347 373.165 mo
221.649 374.365 li
225.64 376.687 li
226.338 375.487 li
222.347 373.165 li
214.362 368.523 mo
213.664 369.724 li
217.656 372.044 li
218.354 370.843 li
214.362 368.523 li
138.684 354.285 mo
135.372 356.197 li
135.372 360.022 li
138.685 358.11 li
138.684 354.285 li
244.438 371.837 mo
231.144 364.161 li
235.279 362.954 239.25 361.491 242.982 359.774 cv
242.829 360.032 li
246.987 362.498 li
247.697 361.304 li
244.174 359.213 li
245.781 358.44 247.345 357.616 248.854 356.745 cv
259.065 350.849 265.416 343.57 267.909 335.952 cv
272.986 340.501 278.62 344.432 284.704 347.635 cv
284.446 348.016 284.18 348.397 283.906 348.775 cv
255.023 365.652 li
251.854 363.771 li
251.145 364.966 li
253.651 366.453 li
244.438 371.837 li
121.503 355.164 mo
104.723 338.738 104.748 318.176 121.579 301.762 cv
121.758 302.482 121.994 303.198 122.286 303.908 cv
122.27 309.638 li
120.696 313.484 120.782 317.514 122.525 321.346 cv
121.614 319.343 121.156 317.287 121.15 315.231 cv
121.15 315.154 li
121.15 315.179 121.15 315.205 121.15 315.231 cv
121.151 324.532 li
121.134 330.448 124.868 336.375 132.343 341.011 cv
132.343 341.011 li
132.656 341.205 132.976 341.397 133.302 341.586 cv
133.302 341.586 li
133.303 341.587 133.304 341.587 133.305 341.588 cv
133.305 341.588 li
133.318 341.596 133.332 341.604 133.346 341.612 cv
133.346 341.612 li
133.349 341.613 133.351 341.615 133.354 341.616 cv
133.354 341.616 li
133.369 341.625 133.384 341.634 133.399 341.643 cv
133.399 341.643 li
133.399 341.643 li
133.987 341.982 134.589 342.31 135.203 342.625 cv
135.932 343.741 136.754 344.846 137.663 345.929 cv
121.503 355.164 li
121.798 346.792 mo
117.461 349.27 li
118.15 350.476 li
122.487 347.998 li
121.798 346.792 li
130.471 341.835 mo
126.135 344.314 li
126.824 345.52 li
131.16 343.042 li
130.471 341.835 li
115.008 333.135 mo
111.696 335.047 li
111.696 338.872 li
115.008 336.959 li
115.008 333.135 li
122.637 321.586 mo
122.636 321.584 122.636 321.583 122.635 321.581 cv
122.636 321.583 122.636 321.584 122.637 321.586 cv
122.621 321.552 mo
122.619 321.548 122.618 321.545 122.616 321.541 cv
122.618 321.545 122.619 321.548 122.621 321.552 cv
122.605 321.517 mo
122.602 321.512 122.6 321.507 122.597 321.502 cv
122.6 321.507 122.602 321.512 122.605 321.517 cv
122.589 321.483 mo
122.586 321.476 122.582 321.47 122.58 321.463 cv
122.582 321.469 122.586 321.477 122.589 321.483 cv
122.573 321.448 mo
122.569 321.44 122.565 321.432 122.561 321.424 cv
122.565 321.432 122.569 321.44 122.573 321.448 cv
122.557 321.414 mo
122.552 321.405 122.548 321.395 122.544 321.386 cv
122.548 321.395 122.552 321.405 122.557 321.414 cv
122.541 321.38 mo
122.536 321.369 122.531 321.357 122.526 321.346 cv
122.531 321.357 122.536 321.369 122.541 321.38 cv
.85827 .866144 .874018 rgb
f
199.934 368.444 mo
182.228 368.444 164.523 364.544 151.014 356.745 cv
149.652 355.958 148.357 355.146 147.132 354.313 cv
147.127 353.432 146.411 352.719 145.529 352.719 cv
145.35 352.719 145.179 352.749 145.019 352.802 cv
142.56 350.955 140.418 349.011 138.594 346.997 cv
141.546 345.31 li
142.601 345.673 143.681 346.008 144.776 346.313 cv
144.776 346.313 li
144.779 346.314 144.782 346.315 144.785 346.316 cv
144.785 346.316 li
144.801 346.32 144.817 346.324 144.833 346.329 cv
144.833 346.329 li
144.846 346.332 144.859 346.336 144.873 346.34 cv
144.873 346.34 li
144.879 346.341 144.883 346.343 144.889 346.344 cv
144.889 346.344 li
150.534 347.902 156.654 348.681 162.77 348.681 cv
163.081 348.681 163.394 348.679 163.705 348.675 cv
163.705 348.675 li
165.022 348.658 166.339 348.604 167.649 348.515 cv
174.134 352.006 181.904 354.252 190.04 355.251 cv
189.707 355.825 li
193.702 358.139 li
194.398 356.937 li
191.83 355.45 li
194.51 355.717 197.221 355.851 199.934 355.851 cv
204.104 355.851 208.275 355.534 212.329 354.903 cv
229.274 364.686 li
220.003 367.192 209.969 368.444 199.934 368.444 cv
206.377 363.885 mo
205.68 365.086 li
209.673 367.404 li
210.37 366.203 li
206.377 363.885 li
198.39 359.249 mo
197.693 360.451 li
201.687 362.769 li
202.384 361.567 li
198.39 359.249 li
231.144 364.161 mo
214.474 354.536 li
218.984 353.699 223.319 352.462 227.314 350.825 cv
230.356 352.63 li
231.066 351.435 li
228.895 350.147 li
230.47 349.443 231.985 348.674 233.43 347.84 cv
237.619 345.421 240.861 342.661 243.152 339.716 cv
261.208 329.223 li
263.312 331.591 265.551 333.839 267.909 335.952 cv
265.416 343.57 259.065 350.849 248.854 356.745 cv
247.345 357.616 245.781 358.44 244.174 359.213 cv
243.539 358.837 li
242.982 359.774 li
239.25 361.491 235.279 362.954 231.144 364.161 cv
235.223 353.903 mo
234.513 355.097 li
238.671 357.564 li
239.381 356.37 li
235.223 353.903 li
137.663 345.929 mo
136.754 344.846 135.932 343.741 135.203 342.625 cv
136.681 343.384 138.228 344.071 139.835 344.688 cv
137.663 345.929 li
.861438 .871895 .887582 rgb
f
199.934 355.851 mo
197.221 355.851 194.51 355.717 191.83 355.45 cv
190.403 354.623 li
190.04 355.251 li
181.904 354.252 174.134 352.006 167.649 348.515 cv
170.262 348.337 172.851 348.014 175.378 347.548 cv
177.714 348.894 li
178.409 347.691 li
177.439 347.132 li
182.214 346.087 186.719 344.512 190.686 342.407 cv
212.329 354.903 li
208.275 355.534 204.104 355.851 199.934 355.851 cv
182.408 349.999 mo
181.714 351.202 li
185.711 353.512 li
186.407 352.31 li
182.408 349.999 li
214.474 354.536 mo
194.315 342.898 li
196.163 343.137 198.049 343.257 199.934 343.257 cv
203.997 343.257 208.058 342.701 211.749 341.59 cv
213.724 342.762 li
214.434 341.567 li
213.498 341.011 li
215.099 340.431 216.613 339.739 218.007 338.935 cv
220.347 337.583 222.138 336.035 223.381 334.383 cv
237.903 342.767 li
243.152 339.716 li
240.861 342.661 237.619 345.421 233.43 347.84 cv
231.985 348.674 230.47 349.443 228.895 350.147 cv
226.908 348.968 li
226.198 350.163 li
227.314 350.825 li
223.319 352.462 218.984 353.699 214.474 354.536 cv
218.592 344.034 mo
217.882 345.228 li
222.041 347.696 li
222.75 346.501 li
218.592 344.034 li
.88589 .905452 .928274 rgb
f
199.934 343.257 mo
198.049 343.257 196.163 343.137 194.315 342.898 cv
192.101 341.62 li
200.098 336.96 204.102 330.868 204.119 324.768 cv
204.119 323.262 li
223.381 334.383 li
222.138 336.035 220.347 337.583 218.007 338.935 cv
216.613 339.739 215.099 340.431 213.498 341.011 cv
210.276 339.099 li
209.567 340.294 li
211.749 341.59 li
208.058 342.701 203.997 343.257 199.934 343.257 cv
218.246 333.218 mo
214.933 335.13 li
214.934 338.955 li
218.246 337.042 li
218.246 333.218 li
201.96 334.165 mo
201.251 335.359 li
205.409 337.827 li
206.118 336.633 li
201.96 334.165 li
192.062 332.265 mo
192.737 331.872 193.383 331.47 194.002 331.058 cv
194.002 331.058 li
193.384 331.47 192.737 331.872 192.062 332.265 cv
195.252 330.184 mo
195.252 330.184 li
198.542 327.772 200.917 325.077 202.376 322.256 cv
202.376 322.256 li
200.917 325.077 198.543 327.772 195.252 330.184 cv
.937255 .964706 .996078 rgb
f
350.752 352.538 mo
353.4 346.979 355.112 341.302 355.886 335.591 cv
377.948 323.913 392.981 300.723 392.981 274.023 cv
392.981 240.904 369.855 213.187 338.868 206.142 cv
338.613 205.611 338.07 205.244 337.442 205.244 cv
337.046 205.244 336.685 205.39 336.408 205.63 cv
332.805 204.947 329.103 204.541 325.327 204.437 cv
325.291 191.684 li
323.011 193.001 li
325.291 191.684 li
323.936 190.895 li
369.584 191.203 406.498 228.302 406.498 274.023 cv
406.498 310.34 383.21 341.218 350.752 352.538 cv
304.233 193.32 mo
304.234 193.106 li
304.441 193.057 304.646 193.01 304.853 192.963 cv
304.233 193.32 li
322.771 191.396 mo
321.928 190.906 li
322.408 190.898 322.886 190.893 323.368 190.893 cv
323.457 190.893 323.551 190.894 323.64 190.894 cv
322.771 191.396 li
1 1 1 rgb
f
325.121 357.136 mo
328.253 352.566 330.604 347.86 332.176 343.085 cv
340.648 342.015 348.646 339.423 355.886 335.591 cv
355.112 341.302 353.4 346.979 350.752 352.538 cv
342.701 355.346 334.086 356.95 325.121 357.136 cv
f
323.368 357.154 mo
316.429 357.154 309.687 356.303 303.244 354.702 cv
305.686 351.49 307.657 348.188 309.157 344.829 cv
310.056 345.341 li
310.744 344.134 li
309.707 343.544 li
309.865 343.16 310.017 342.772 310.162 342.386 cv
314.437 343.207 318.853 343.637 323.368 343.637 cv
326.352 343.637 329.29 343.45 332.176 343.085 cv
330.604 347.86 328.253 352.566 325.121 357.136 cv
324.539 357.148 323.953 357.154 323.368 357.154 cv
310.521 351.257 mo
306.666 353.498 li
307.365 354.699 li
311.22 352.459 li
310.521 351.257 li
315.058 346.59 mo
314.371 347.798 li
315.434 348.403 li
314.376 349.018 li
315.075 350.219 li
318.22 348.391 li
315.058 346.59 li
.92792 .928581 .929243 rgb
f
303.244 354.702 mo
300.543 354.03 297.897 353.227 295.307 352.299 cv
295.723 352.053 li
295.016 350.857 li
293.63 351.677 li
291.299 350.784 289.018 349.788 286.794 348.697 cv
294.664 344.098 li
295.264 344.455 li
295.907 343.372 li
301.182 340.29 li
301.427 340.428 li
301.58 340.159 li
304.368 341.077 307.231 341.823 310.162 342.386 cv
310.017 342.772 309.865 343.16 309.707 343.544 cv
306.429 341.677 li
305.742 342.885 li
309.157 344.829 li
307.657 348.188 305.686 351.49 303.244 354.702 cv
300.17 345.752 mo
299.46 346.947 li
300.543 347.589 li
299.459 348.23 li
300.166 349.426 li
303.269 347.592 li
300.17 345.752 li
285.314 347.952 mo
285.112 347.848 284.906 347.741 284.704 347.635 cv
287.417 343.622 289.244 339.453 290.183 335.234 cv
293.237 336.893 296.431 338.331 299.739 339.524 cv
294.67 342.486 li
291.776 340.768 li
291.067 341.963 li
293.298 343.288 li
285.314 347.952 li
.881046 .884967 .887582 rgb
f
284.704 347.635 mo
278.62 344.432 272.986 340.501 267.909 335.952 cv
268.669 333.632 269.07 331.281 269.113 328.928 cv
270.083 329.504 li
270.792 328.309 li
269.086 327.296 li
269.043 326.462 268.954 325.63 268.821 324.799 cv
271.371 323.317 li
275.538 325.689 li
275.941 324.982 li
280.221 328.968 285.003 332.42 290.183 335.234 cv
289.244 339.453 287.417 343.622 284.704 347.635 cv
283.383 335.784 mo
282.673 336.979 li
286.87 339.471 li
287.58 338.276 li
283.383 335.784 li
274.989 330.801 mo
274.28 331.995 li
278.476 334.487 li
279.186 333.293 li
274.989 330.801 li
274.258 323.362 mo
272.761 322.51 li
273.181 322.266 li
273.536 322.636 273.894 323 274.258 323.362 cv
.85827 .866144 .874018 rgb
f
267.909 335.952 mo
265.551 333.839 263.312 331.591 261.208 329.223 cv
266.346 326.237 li
265.886 327.012 li
269.113 328.928 li
269.07 331.281 268.669 333.632 267.909 335.952 cv
269.086 327.296 mo
266.83 325.956 li
268.821 324.799 li
268.954 325.63 269.043 326.462 269.086 327.296 cv
.861438 .871895 .887582 rgb
f
355.886 335.591 mo
356.594 330.37 356.518 325.114 355.659 319.899 cv
370.058 309.745 379.464 292.982 379.464 274.023 cv
379.464 243.709 355.422 219.012 325.364 217.962 cv
325.327 204.437 li
329.103 204.541 332.805 204.947 336.408 205.63 cv
336.073 205.92 335.861 206.348 335.861 206.826 cv
335.861 207.699 336.568 208.407 337.442 208.407 cv
338.315 208.407 339.023 207.699 339.023 206.826 cv
339.023 206.581 338.967 206.349 338.868 206.142 cv
369.855 213.187 392.981 240.904 392.981 274.023 cv
392.981 300.723 377.948 323.913 355.886 335.591 cv
.92792 .928581 .929243 rgb
f
332.176 343.085 mo
333.707 338.435 334.498 333.723 334.551 329.005 cv
342.283 327.441 349.437 324.288 355.659 319.899 cv
356.518 325.114 356.594 330.37 355.886 335.591 cv
348.646 339.423 340.648 342.015 332.176 343.085 cv
f
323.368 343.637 mo
318.853 343.637 314.437 343.207 310.162 342.386 cv
311.806 338.016 312.664 333.566 312.737 329.114 cv
316.178 329.774 319.733 330.12 323.368 330.12 cv
327.197 330.12 330.937 329.736 334.551 329.005 cv
334.498 333.723 333.707 338.435 332.176 343.085 cv
329.29 343.45 326.352 343.637 323.368 343.637 cv
.870004 .871219 .872434 rgb
f
310.162 342.386 mo
307.231 341.823 304.368 341.077 301.58 340.159 cv
301.667 340.006 li
308.098 336.249 li
290.851 326.313 li
290.666 323.728 290.151 321.15 289.309 318.601 cv
296.073 323.777 304.048 327.448 312.737 329.114 cv
312.664 333.566 311.806 338.016 310.162 342.386 cv
299.739 339.524 mo
296.431 338.331 293.237 336.893 290.183 335.234 cv
290.264 334.873 290.337 334.514 290.404 334.153 cv
292.797 335.515 li
293.485 334.308 li
290.641 332.689 li
290.858 331.115 290.953 329.536 290.924 327.959 cv
305.329 336.258 li
301.174 338.685 li
297.8 336.765 li
297.111 337.972 li
299.788 339.496 li
299.739 339.524 li
.835202 .838708 .842215 rgb
f
290.183 335.234 mo
285.003 332.42 280.221 328.968 275.941 324.982 cv
276.226 324.482 li
274.258 323.362 li
273.894 323 273.536 322.636 273.181 322.266 cv
277.094 319.992 li
290.924 327.959 li
290.953 329.536 290.858 331.115 290.641 332.689 cv
289.171 331.851 li
288.482 333.059 li
290.404 334.153 li
290.337 334.514 290.264 334.873 290.183 335.234 cv
280.54 326.938 mo
279.852 328.146 li
284.167 330.603 li
284.855 329.395 li
280.54 326.938 li
290.851 326.313 mo
278.48 319.186 li
285.297 315.225 li
286.58 316.411 287.919 317.537 289.309 318.601 cv
290.151 321.15 290.666 323.728 290.851 326.313 cv
.828143 .835017 .844183 rgb
f
355.659 319.899 mo
354.89 315.227 353.493 310.587 351.467 306.016 cv
360.344 298.213 365.948 286.772 365.948 274.023 cv
365.948 251.189 347.974 232.553 325.402 231.491 cv
325.364 217.962 li
355.422 219.012 379.464 243.709 379.464 274.023 cv
379.464 292.982 370.058 309.745 355.659 319.899 cv
337.442 224.031 mo
336.556 224.031 335.838 224.75 335.838 225.635 cv
335.838 226.521 336.556 227.238 337.442 227.238 cv
338.327 227.238 339.045 226.521 339.045 225.635 cv
339.045 224.75 338.327 224.031 337.442 224.031 cv
.881046 .884967 .887582 rgb
f
334.551 329.005 mo
334.601 324.516 333.981 320.019 332.691 315.58 cv
339.78 313.996 346.198 310.647 351.467 306.016 cv
353.493 310.587 354.89 315.227 355.659 319.899 cv
349.437 324.288 342.283 327.441 334.551 329.005 cv
f
323.368 330.12 mo
319.733 330.12 316.178 329.774 312.737 329.114 cv
312.816 324.213 311.945 319.312 310.12 314.502 cv
314.289 315.866 318.743 316.604 323.368 316.604 cv
326.57 316.604 329.691 316.25 332.691 315.58 cv
333.981 320.019 334.601 324.516 334.551 329.005 cv
330.937 329.736 327.197 330.12 323.368 330.12 cv
.833449 .836955 .840461 rgb
f
312.737 329.114 mo
304.048 327.448 296.073 323.777 289.309 318.601 cv
288.797 317.053 288.165 315.518 287.41 313.996 cv
297.712 308.01 li
301.422 310.815 305.604 313.026 310.12 314.502 cv
311.945 319.312 312.816 324.213 312.737 329.114 cv
.812195 .818747 .823114 rgb
f
289.309 318.601 mo
287.919 317.537 286.58 316.411 285.297 315.225 cv
287.41 313.996 li
288.165 315.518 288.797 317.053 289.309 318.601 cv
.814379 .822222 .830065 rgb
f
351.467 306.016 mo
349.654 301.927 347.337 297.896 344.517 293.957 cv
349.423 288.754 352.431 281.739 352.431 274.023 cv
352.431 271.61 352.137 269.266 351.583 267.024 cv
354.639 265.26 li
354.639 261.435 li
351.327 263.348 li
351.327 266.06 li
347.865 253.88 336.658 244.96 323.368 244.96 cv
315.96 244.96 309.199 247.732 304.066 252.294 cv
304.086 245.403 li
325.406 233.093 li
325.402 231.491 li
347.974 232.553 365.948 251.189 365.948 274.023 cv
365.948 286.772 360.344 298.213 351.467 306.016 cv
.85827 .866144 .874018 rgb
f
332.691 315.58 mo
331.441 311.272 329.56 307.015 327.048 302.856 cv
333.901 301.989 340.011 298.737 344.517 293.957 cv
347.337 297.896 349.654 301.927 351.467 306.016 cv
346.198 310.647 339.78 313.996 332.691 315.58 cv
f
323.368 316.604 mo
318.743 316.604 314.289 315.866 310.12 314.502 cv
308.662 310.661 306.594 306.876 303.922 303.209 cv
303.943 295.643 li
309.091 300.271 315.9 303.087 323.368 303.087 cv
324.615 303.087 325.842 303.008 327.048 302.856 cv
329.56 307.015 331.441 311.272 332.691 315.58 cv
329.691 316.25 326.57 316.604 323.368 316.604 cv
.825852 .835017 .844183 rgb
f
310.12 314.502 mo
305.604 313.026 301.422 310.815 297.712 308.01 cv
303.919 304.403 li
303.922 303.209 li
306.594 306.876 308.662 310.661 310.12 314.502 cv
.814379 .822222 .83268 rgb
f
344.517 293.957 mo
341.975 290.406 339.019 286.924 335.658 283.546 cv
337.699 280.915 338.914 277.611 338.914 274.023 cv
338.914 265.437 331.953 258.477 323.368 258.477 cv
318.231 258.477 313.677 260.968 310.846 264.807 cv
310.745 264.749 310.649 264.693 310.548 264.635 cv
308.423 263.408 306.255 262.226 304.041 261.084 cv
304.066 252.294 li
309.199 247.732 315.96 244.96 323.368 244.96 cv
336.658 244.96 347.865 253.88 351.327 266.06 cv
351.327 267.172 li
351.583 267.024 li
352.137 269.266 352.431 271.61 352.431 274.023 cv
352.431 281.739 349.423 288.754 344.517 293.957 cv
.861438 .871895 .887582 rgb
f
327.048 302.856 mo
321.955 294.421 314.267 286.389 303.99 279.179 cv
304.041 261.084 li
306.255 262.226 308.423 263.408 310.548 264.635 cv
310.649 264.693 310.745 264.749 310.846 264.807 cv
308.944 267.386 307.821 270.573 307.821 274.023 cv
307.821 282.61 314.782 289.57 323.368 289.57 cv
328.366 289.57 332.813 287.211 335.658 283.546 cv
339.019 286.924 341.975 290.406 344.517 293.957 cv
340.011 298.737 333.901 301.989 327.048 302.856 cv
f
323.368 303.087 mo
315.9 303.087 309.091 300.271 303.943 295.643 cv
303.99 279.179 li
314.267 286.389 321.955 294.421 327.048 302.856 cv
325.842 303.008 324.615 303.087 323.368 303.087 cv
.841538 .852857 .864175 rgb
f
335.658 283.546 mo
332.564 280.437 329.129 277.416 325.343 274.493 cv
325.379 274.342 325.397 274.185 325.397 274.023 cv
325.397 272.902 324.488 271.993 323.368 271.993 cv
323 271.993 322.656 272.091 322.358 272.262 cv
318.802 269.688 314.96 267.195 310.846 264.807 cv
313.677 260.968 318.231 258.477 323.368 258.477 cv
331.953 258.477 338.914 265.437 338.914 274.023 cv
338.914 277.611 337.699 280.915 335.658 283.546 cv
.88589 .905452 .928274 rgb
f
323.368 289.57 mo
314.782 289.57 307.821 282.61 307.821 274.023 cv
307.821 270.573 308.944 267.386 310.846 264.807 cv
314.96 267.195 318.802 269.688 322.358 272.262 cv
321.748 272.612 321.338 273.27 321.338 274.023 cv
321.338 275.145 322.247 276.053 323.368 276.053 cv
324.327 276.053 325.131 275.388 325.343 274.493 cv
329.129 277.416 332.564 280.437 335.658 283.546 cv
332.813 287.211 328.366 289.57 323.368 289.57 cv
f
325.343 274.493 mo
324.37 273.742 323.377 272.999 322.358 272.262 cv
322.656 272.091 323 271.993 323.368 271.993 cv
324.488 271.993 325.397 272.902 325.397 274.023 cv
325.397 274.185 325.379 274.342 325.343 274.493 cv
.937255 .964706 .996078 rgb
f
323.368 276.053 mo
322.247 276.053 321.338 275.145 321.338 274.023 cv
321.338 273.27 321.748 272.612 322.358 272.262 cv
323.377 272.999 324.37 273.742 325.343 274.493 cv
325.131 275.388 324.327 276.053 323.368 276.053 cv
f
93.4506 372.796 mo
93.4506 364.592 li
94.8402 363.798 li
94.8402 370.402 li
105.609 364.247 li
105.975 364.569 106.349 364.891 106.726 365.209 cv
93.4506 372.796 li
.380392 .827451 .964706 rgb
f
106.726 365.209 mo
106.349 364.891 105.975 364.569 105.609 364.247 cv
121.503 355.164 li
121.846 355.499 122.195 355.833 122.552 356.165 cv
106.726 365.209 li
.462745 .85098 .968627 rgb
f
122.552 356.165 mo
122.195 355.833 121.846 355.499 121.503 355.164 cv
137.663 345.929 li
137.964 346.288 138.273 346.642 138.594 346.997 cv
122.552 356.165 li
.560784 .878431 .976471 rgb
f
138.594 346.997 mo
138.273 346.642 137.964 346.288 137.663 345.929 cv
139.835 344.688 li
140.398 344.904 140.969 345.111 141.546 345.31 cv
138.594 346.997 li
.678431 .913725 .980392 rgb
f
93.4506 262.335 mo
93.4506 232.655 li
93.7921 232.453 li
98.0243 229.955 li
98.6665 230.037 99.3275 230.079 100.004 230.079 cv
100.189 230.079 100.375 230.076 100.562 230.07 cv
94.8402 233.448 li
94.8402 261.597 li
94.373 261.842 93.9139 262.086 93.4506 262.335 cv
.313725 .807843 .960784 rgb
f
93.4506 280.933 mo
93.4506 262.335 li
93.9139 262.086 94.373 261.842 94.8402 261.597 cv
94.8402 279.916 li
94.371 280.253 93.9086 280.592 93.4506 280.933 cv
f
93.4506 362.992 mo
93.4506 350.047 li
93.8905 350.773 94.3544 351.497 94.8402 352.216 cv
94.8402 362.198 li
93.4506 362.992 li
93.4506 306.954 mo
93.4506 280.933 li
93.9086 280.592 94.371 280.253 94.8402 279.916 cv
94.8402 304.784 li
94.3544 305.503 93.8905 306.227 93.4506 306.954 cv
.380392 .827451 .964706 rgb
f
94.8402 352.216 mo
94.3544 351.497 93.8905 350.773 93.4506 350.047 cv
93.4506 306.954 li
93.8905 306.227 94.3544 305.503 94.8402 304.784 cv
94.8402 352.216 li
.462745 .85098 .968627 rgb
f
86.0348 232.311 mo
84.6458 232.311 li
84.6458 229.481 li
87.0906 228.054 li
87.7905 229.254 li
86.0348 230.278 li
86.0348 232.311 li
.313725 .807843 .960784 rgb
f
86.0348 361.045 mo
84.6458 361.045 li
84.6458 356.093 li
86.0348 356.093 li
86.0348 361.045 li
86.0348 351.142 mo
84.6458 351.142 li
84.6458 346.191 li
86.0348 346.191 li
86.0348 351.142 li
86.0348 341.24 mo
84.6458 341.24 li
84.6458 336.288 li
86.0348 336.288 li
86.0348 341.24 li
86.0348 331.337 mo
84.6458 331.337 li
84.6458 326.385 li
86.0348 326.385 li
86.0348 331.337 li
86.0348 321.434 mo
84.6458 321.434 li
84.6458 316.483 li
86.0348 316.483 li
86.0348 321.434 li
86.0348 311.531 mo
84.6458 311.531 li
84.6458 306.58 li
86.0348 306.58 li
86.0348 311.531 li
86.0348 301.629 mo
84.6458 301.629 li
84.6458 296.678 li
86.0348 296.678 li
86.0348 301.629 li
.380392 .827451 .964706 rgb
f
84.6458 288.334 mo
84.6458 286.776 li
86.0348 286.776 li
86.0348 287.037 li
85.5626 287.468 85.1019 287.899 84.6458 288.334 cv
.313725 .807843 .960784 rgb
f
86.0348 291.726 mo
84.6458 291.726 li
84.6458 288.334 li
85.1019 287.899 85.5626 287.468 86.0348 287.037 cv
86.0348 291.726 li
.380392 .827451 .964706 rgb
f
86.0348 281.824 mo
84.6458 281.824 li
84.6458 276.873 li
86.0348 276.873 li
86.0348 281.824 li
.313725 .807843 .960784 rgb
f
84.6458 267.451 mo
84.6458 266.97 li
85.4157 266.97 li
85.159 267.129 84.9002 267.291 84.6458 267.451 cv
f
86.0348 271.921 mo
84.6458 271.921 li
84.6458 267.451 li
84.9002 267.291 85.159 267.129 85.4157 266.97 cv
86.0348 266.97 li
86.0348 271.921 li
f
86.0348 262.019 mo
84.6458 262.019 li
84.6458 257.067 li
86.0348 257.067 li
86.0348 262.019 li
86.0348 252.116 mo
84.6458 252.116 li
84.6458 247.165 li
86.0348 247.165 li
86.0348 252.116 li
86.0348 242.213 mo
84.6458 242.213 li
84.6458 237.262 li
86.0348 237.262 li
86.0348 242.213 li
f
84.6458 369.624 mo
84.6458 368.666 li
84.8547 368.866 85.0652 369.064 85.2775 369.263 cv
84.6458 369.624 li
f
85.2775 369.263 mo
85.0652 369.064 84.8547 368.866 84.6458 368.666 cv
84.6458 365.996 li
86.0348 365.996 li
86.0348 367.23 li
87.107 366.618 li
87.7961 367.824 li
85.2775 369.263 li
.380392 .827451 .964706 rgb
f
92.1323 365.346 mo
91.4433 364.14 li
93.4506 362.992 li
94.8402 362.198 li
95.7795 361.661 li
96.4692 362.867 li
94.8402 363.798 li
93.4506 364.592 li
92.1323 365.346 li
100.805 360.39 mo
100.116 359.183 li
100.298 359.079 li
100.619 359.427 100.946 359.774 101.278 360.119 cv
100.805 360.39 li
f
101.278 360.119 mo
100.946 359.774 100.619 359.427 100.298 359.079 cv
104.453 356.705 li
105.142 357.911 li
101.278 360.119 li
109.478 355.433 mo
108.789 354.227 li
113.125 351.749 li
113.815 352.955 li
109.478 355.433 li
.462745 .85098 .968627 rgb
f
118.15 350.476 mo
117.461 349.27 li
121.798 346.792 li
122.487 347.998 li
118.15 350.476 li
126.824 345.52 mo
126.135 344.314 li
130.471 341.835 li
131.16 343.042 li
126.824 345.52 li
.560784 .878431 .976471 rgb
f
266.219 136.142 mo
266.188 135.94 266.17 135.712 266.17 135.447 cv
266.17 135.233 266.182 134.994 266.21 134.726 cv
266.211 134.752 266.214 134.777 266.219 134.798 cv
266.219 136.142 li
.313725 .807843 .960784 rgb
f
276.034 158.245 mo
274.645 157.443 li
274.645 155.986 li
276.034 155.986 li
276.034 158.245 li
276.034 151.264 mo
274.645 151.264 li
274.645 146.542 li
276.034 146.542 li
276.034 151.264 li
276.034 141.82 mo
274.645 141.82 li
274.645 137.097 li
276.034 137.097 li
276.034 141.82 li
276.034 132.375 mo
274.645 132.375 li
274.645 127.653 li
276.034 127.653 li
276.034 132.375 li
276.034 122.931 mo
274.645 122.931 li
274.645 118.208 li
276.034 118.208 li
276.034 122.931 li
f
244.442 373.443 mo
244.093 373.241 li
229.274 364.686 li
229.901 364.517 230.524 364.342 231.144 364.161 cv
244.438 371.837 li
253.651 366.453 li
255.017 367.264 li
244.442 373.443 li
.560784 .878431 .976471 rgb
f
229.274 364.686 mo
212.329 354.903 li
213.048 354.79 213.762 354.668 214.474 354.536 cv
231.144 364.161 li
230.524 364.342 229.901 364.517 229.274 364.686 cv
.678431 .913725 .980392 rgb
f
212.329 354.903 mo
190.686 342.407 li
190.751 342.372 190.814 342.338 190.879 342.304 cv
192.004 342.549 193.151 342.747 194.315 342.898 cv
214.474 354.536 li
213.762 354.668 213.048 354.79 212.329 354.903 cv
.807843 .94902 .988235 rgb
f
194.315 342.898 mo
193.151 342.747 192.004 342.549 190.879 342.304 cv
191.279 342.089 191.674 341.868 192.062 341.643 cv
192.075 341.635 192.088 341.627 192.101 341.62 cv
194.315 342.898 li
.956863 .992157 1 rgb
f
281.555 351.758 mo
282.395 350.776 283.179 349.78 283.906 348.775 cv
285.314 347.952 li
285.806 348.206 286.297 348.453 286.794 348.697 cv
281.555 351.758 li
.462745 .85098 .968627 rgb
f
255.608 366.919 mo
256.012 366.238 li
255.023 365.652 li
283.906 348.775 li
283.179 349.78 282.395 350.776 281.555 351.758 cv
255.608 366.919 li
.560784 .878431 .976471 rgb
f
286.794 348.697 mo
286.297 348.453 285.806 348.206 285.314 347.952 cv
293.298 343.288 li
294.664 344.098 li
286.794 348.697 li
295.907 343.372 mo
295.973 343.26 li
294.67 342.486 li
299.739 339.524 li
299.828 339.557 299.917 339.589 300.007 339.621 cv
301.182 340.29 li
295.907 343.372 li
.462745 .85098 .968627 rgb
f
300.007 339.621 mo
299.917 339.589 299.828 339.557 299.739 339.524 cv
299.788 339.496 li
300.007 339.621 li
.505882 .862745 .972549 rgb
f
301.667 340.006 mo
302.115 339.22 li
301.174 338.685 li
305.329 336.258 li
290.924 327.959 li
290.915 327.411 290.89 326.861 290.851 326.313 cv
308.098 336.249 li
301.667 340.006 li
f
290.924 327.959 mo
277.094 319.992 li
278.48 319.186 li
290.851 326.313 li
290.89 326.861 290.915 327.411 290.924 327.959 cv
.596078 .886274 .976471 rgb
f
233.623 381.333 mo
229.632 379.01 li
230.183 378.063 li
230.327 378.034 230.471 378.004 230.615 377.975 cv
234.322 380.133 li
233.623 381.333 li
.462745 .85098 .968627 rgb
f
230.183 378.063 mo
230.331 377.809 li
230.615 377.975 li
230.471 378.004 230.327 378.034 230.183 378.063 cv
225.64 376.687 mo
221.649 374.365 li
222.347 373.165 li
226.338 375.487 li
225.64 376.687 li
217.656 372.044 mo
213.664 369.724 li
214.362 368.523 li
218.354 370.843 li
217.656 372.044 li
.560784 .878431 .976471 rgb
f
209.673 367.404 mo
205.68 365.086 li
206.377 363.885 li
210.37 366.203 li
209.673 367.404 li
201.687 362.769 mo
197.693 360.451 li
198.39 359.249 li
202.384 361.567 li
201.687 362.769 li
193.702 358.139 mo
189.707 355.825 li
190.04 355.251 li
190.634 355.324 191.232 355.39 191.83 355.45 cv
194.398 356.937 li
193.702 358.139 li
.678431 .913725 .980392 rgb
f
191.83 355.45 mo
191.232 355.39 190.634 355.324 190.04 355.251 cv
190.403 354.623 li
191.83 355.45 li
185.711 353.512 mo
181.714 351.202 li
182.408 349.999 li
186.407 352.31 li
185.711 353.512 li
177.714 348.894 mo
175.378 347.548 li
176.07 347.42 176.757 347.282 177.439 347.132 cv
178.409 347.691 li
177.714 348.894 li
.807843 .94902 .988235 rgb
f
239.963 385.026 mo
237.511 383.598 li
238.211 382.397 li
239.957 383.415 li
241.699 382.385 li
242.406 383.581 li
239.963 385.026 li
.462745 .85098 .968627 rgb
f
246.849 380.953 mo
246.143 379.758 li
250.586 377.131 li
251.293 378.326 li
246.849 380.953 li
255.735 375.699 mo
255.028 374.503 li
259.472 371.876 li
260.178 373.072 li
255.735 375.699 li
264.622 370.444 mo
263.915 369.249 li
268.358 366.622 li
269.065 367.817 li
264.622 370.444 li
273.507 365.19 mo
272.8 363.994 li
277.244 361.366 li
277.95 362.562 li
273.507 365.19 li
282.394 359.935 mo
281.688 358.739 li
286.131 356.112 li
286.838 357.308 li
282.394 359.935 li
291.28 354.681 mo
290.573 353.485 li
293.63 351.677 li
294.186 351.89 294.746 352.098 295.307 352.299 cv
291.28 354.681 li
f
295.307 352.299 mo
294.746 352.098 294.186 351.89 293.63 351.677 cv
295.016 350.857 li
295.723 352.053 li
295.307 352.299 li
f
300.166 349.426 mo
299.459 348.23 li
300.543 347.589 li
299.46 346.947 li
300.17 345.752 li
303.269 347.592 li
300.166 349.426 li
f
295.264 344.455 mo
294.664 344.098 li
293.298 343.288 li
291.067 341.963 li
291.776 340.768 li
294.67 342.486 li
295.973 343.26 li
295.907 343.372 li
295.264 344.455 li
f
286.87 339.471 mo
282.673 336.979 li
283.383 335.784 li
287.58 338.276 li
286.87 339.471 li
278.476 334.487 mo
274.28 331.995 li
274.989 330.801 li
279.186 333.293 li
278.476 334.487 li
270.083 329.504 mo
269.113 328.928 li
269.123 328.384 269.114 327.84 269.086 327.296 cv
270.792 328.309 li
270.083 329.504 li
.560784 .878431 .976471 rgb
f
269.113 328.928 mo
265.886 327.012 li
266.346 326.237 li
266.83 325.956 li
269.086 327.296 li
269.114 327.84 269.123 328.384 269.113 328.928 cv
.678431 .913725 .980392 rgb
f
263.619 372.367 mo
259.461 369.9 li
260.17 368.706 li
264.328 371.172 li
263.619 372.367 li
.462745 .85098 .968627 rgb
f
255.303 367.433 mo
255.017 367.264 li
253.651 366.453 li
251.145 364.966 li
251.854 363.771 li
255.023 365.652 li
256.012 366.238 li
255.608 366.919 li
255.303 367.433 li
246.987 362.498 mo
242.829 360.032 li
242.982 359.774 li
243.383 359.59 243.778 359.404 244.174 359.213 cv
247.697 361.304 li
246.987 362.498 li
.560784 .878431 .976471 rgb
f
242.982 359.774 mo
243.539 358.837 li
244.174 359.213 li
243.778 359.404 243.383 359.59 242.982 359.774 cv
238.671 357.564 mo
234.513 355.097 li
235.223 353.903 li
239.381 356.37 li
238.671 357.564 li
230.356 352.63 mo
227.314 350.825 li
227.846 350.606 228.375 350.38 228.895 350.147 cv
231.066 351.435 li
230.356 352.63 li
.678431 .913725 .980392 rgb
f
227.314 350.825 mo
226.198 350.163 li
226.908 348.968 li
228.895 350.147 li
228.375 350.38 227.846 350.606 227.314 350.825 cv
222.041 347.696 mo
217.882 345.228 li
218.592 344.034 li
222.75 346.501 li
222.041 347.696 li
213.724 342.762 mo
211.749 341.59 li
212.342 341.411 212.926 341.218 213.498 341.011 cv
214.434 341.567 li
213.724 342.762 li
.807843 .94902 .988235 rgb
f
211.749 341.59 mo
209.567 340.294 li
210.276 339.099 li
213.498 341.011 li
212.926 341.218 212.342 341.411 211.749 341.59 cv
205.409 337.827 mo
201.251 335.359 li
201.96 334.165 li
206.118 336.633 li
205.409 337.827 li
194.002 331.058 mo
194.002 331.058 li
194.432 330.771 194.849 330.48 195.252 330.184 cv
195.252 330.184 li
194.849 330.48 194.432 330.771 194.002 331.058 cv
.956863 .992157 1 rgb
f
270.218 376.283 mo
267.776 374.835 li
268.485 373.64 li
270.225 374.672 li
271.975 373.655 li
272.672 374.857 li
270.218 376.283 li
.462745 .85098 .968627 rgb
f
276.528 372.617 mo
275.829 371.416 li
279.684 369.176 li
280.382 370.377 li
276.528 372.617 li
284.237 368.138 mo
283.539 366.936 li
287.393 364.696 li
288.091 365.897 li
284.237 368.138 li
291.945 363.658 mo
291.248 362.457 li
295.103 360.217 li
295.801 361.418 li
291.945 363.658 li
f
299.655 359.178 mo
299.587 359.06 li
300.472 358.099 301.313 357.126 302.11 356.145 cv
302.813 355.737 li
303.51 356.939 li
299.655 359.178 li
.380392 .827451 .964706 rgb
f
299.587 359.06 mo
298.958 357.977 li
302.11 356.145 li
301.313 357.126 300.472 358.099 299.587 359.06 cv
.462745 .85098 .968627 rgb
f
307.365 354.699 mo
306.666 353.498 li
310.521 351.257 li
311.22 352.459 li
307.365 354.699 li
.380392 .827451 .964706 rgb
f
315.075 350.219 mo
314.376 349.018 li
315.434 348.403 li
314.371 347.798 li
315.058 346.59 li
318.22 348.391 li
315.075 350.219 li
f
310.056 345.341 mo
309.157 344.829 li
309.348 344.401 309.531 343.974 309.707 343.544 cv
310.744 344.134 li
310.056 345.341 li
f
309.157 344.829 mo
305.742 342.885 li
306.429 341.677 li
309.707 343.544 li
309.531 343.974 309.348 344.401 309.157 344.829 cv
301.427 340.428 mo
301.182 340.29 li
300.007 339.621 li
300.528 339.806 301.054 339.986 301.58 340.159 cv
301.427 340.428 li
.462745 .85098 .968627 rgb
f
301.58 340.159 mo
301.054 339.986 300.528 339.806 300.007 339.621 cv
299.788 339.496 li
297.111 337.972 li
297.8 336.765 li
301.174 338.685 li
302.115 339.22 li
301.667 340.006 li
301.58 340.159 li
292.797 335.515 mo
290.404 334.153 li
290.495 333.664 290.574 333.178 290.641 332.689 cv
293.485 334.308 li
292.797 335.515 li
.505882 .862745 .972549 rgb
f
290.404 334.153 mo
288.482 333.059 li
289.171 331.851 li
290.641 332.689 li
290.574 333.178 290.495 333.664 290.404 334.153 cv
284.167 330.603 mo
279.852 328.146 li
280.54 326.938 li
284.855 329.395 li
284.167 330.603 li
.596078 .886274 .976471 rgb
f
275.538 325.689 mo
271.371 323.317 li
272.761 322.51 li
274.258 323.362 li
274.81 323.911 275.371 324.452 275.941 324.982 cv
275.538 325.689 li
.560784 .878431 .976471 rgb
f
275.941 324.982 mo
275.371 324.452 274.81 323.911 274.258 323.362 cv
276.226 324.482 li
275.941 324.982 li
.596078 .886274 .976471 rgb
f
202.236 105.748 mo
216.636 114.116 li
211.828 111.322 205.17 111.716 197.821 115.959 cv
196.252 116.865 194.717 117.909 193.224 119.075 cv
178.824 110.706 li
180.317 109.54 181.852 108.496 183.421 107.59 cv
190.77 103.347 197.428 102.954 202.236 105.748 cv
.803922 .862745 .984314 rgb
f
gsave
202.236 105.748 mo
216.636 114.116 li
211.828 111.322 205.17 111.716 197.821 115.959 cv
196.252 116.865 194.717 117.909 193.224 119.075 cv
178.824 110.706 li
180.317 109.54 181.852 108.496 183.421 107.59 cv
190.77 103.347 197.428 102.954 202.236 105.748 cv
clp
193.224 119.075 mo
178.824 110.706 li
180.317 109.54 181.852 108.496 183.421 107.59 cv
186.225 105.971 188.93 104.913 191.468 104.378 cv
205.869 112.747 li
203.329 113.281 200.625 114.34 197.821 115.959 cv
196.252 116.865 194.717 117.909 193.224 119.075 cv
f
205.869 112.747 mo
191.468 104.378 li
195.368 103.556 198.879 103.97 201.768 105.488 cv
216.168 113.857 li
213.28 112.339 209.769 111.925 205.869 112.747 cv
f
216.168 113.857 mo
201.768 105.488 li
201.925 105.571 202.082 105.658 202.236 105.748 cv
216.636 114.116 li
216.482 114.026 216.326 113.94 216.168 113.857 cv
f
grestore
168.477 95.7088 mo
182.877 104.077 li
175.667 99.8872 165.683 100.477 154.663 106.839 cv
140.262 98.4702 li
151.282 92.1081 161.267 91.5185 168.477 95.7088 cv
f
gsave
168.477 95.7088 mo
182.877 104.077 li
175.667 99.8872 165.683 100.477 154.663 106.839 cv
140.262 98.4702 li
151.282 92.1081 161.267 91.5185 168.477 95.7088 cv
clp
154.663 106.839 mo
140.262 98.4702 li
144.464 96.0447 148.515 94.4583 152.319 93.6553 cv
166.72 102.024 li
162.916 102.826 158.864 104.413 154.663 106.839 cv
f
166.72 102.024 mo
152.319 93.6553 li
158.172 92.4207 163.441 93.0425 167.774 95.3201 cv
182.175 103.689 li
177.841 101.411 172.573 100.789 166.72 102.024 cv
f
182.175 103.689 mo
167.774 95.3201 li
168.011 95.4448 168.245 95.5742 168.477 95.7088 cv
182.877 104.077 li
182.646 103.943 182.411 103.813 182.175 103.689 cv
f
grestore
116.297 163.489 mo
101.896 155.12 li
106.161 132.839 121.702 109.186 140.262 98.4702 cv
154.663 106.839 li
136.103 117.554 120.562 141.207 116.297 163.489 cv
f
gsave
116.297 163.489 mo
101.896 155.12 li
106.161 132.839 121.702 109.186 140.262 98.4702 cv
154.663 106.839 li
136.103 117.554 120.562 141.207 116.297 163.489 cv
clp
116.297 163.489 mo
101.896 155.12 li
103.058 149.055 105.054 142.889 107.719 136.909 cv
122.119 145.278 li
119.454 151.257 117.458 157.424 116.297 163.489 cv
f
122.119 145.278 mo
107.719 136.909 li
111.165 129.177 115.73 121.758 121.054 115.274 cv
135.454 123.643 li
130.131 130.126 125.566 137.546 122.119 145.278 cv
f
135.454 123.643 mo
121.054 115.274 li
126.738 108.352 133.287 102.498 140.262 98.4702 cv
154.663 106.839 li
147.688 110.866 141.138 116.721 135.454 123.643 cv
f
grestore
93.0537 228.295 mo
78.6539 219.926 li
73.907 217.167 70.9638 211.302 70.9402 202.965 cv
70.8926 186.184 82.6926 165.746 97.2967 157.314 cv
98.8653 156.408 100.402 155.679 101.896 155.12 cv
116.297 163.489 li
114.802 164.048 113.266 164.777 111.697 165.683 cv
97.0931 174.115 85.293 194.553 85.3403 211.334 cv
85.3643 219.67 88.3074 225.536 93.0537 228.295 cv
f
gsave
93.0537 228.295 mo
78.6539 219.926 li
73.907 217.167 70.9638 211.302 70.9402 202.965 cv
70.8926 186.184 82.6926 165.746 97.2967 157.314 cv
98.8653 156.408 100.402 155.679 101.896 155.12 cv
116.297 163.489 li
114.802 164.048 113.266 164.777 111.697 165.683 cv
97.0931 174.115 85.293 194.553 85.3403 211.334 cv
85.3643 219.67 88.3074 225.536 93.0537 228.295 cv
clp
93.0537 228.295 mo
78.6539 219.926 li
73.907 217.167 70.9638 211.302 70.9402 202.965 cv
70.9219 196.536 72.6428 189.57 75.5942 182.947 cv
89.9946 191.316 li
87.0432 197.938 85.3225 204.905 85.3403 211.334 cv
85.3643 219.67 88.3074 225.536 93.0537 228.295 cv
f
89.9946 191.316 mo
75.5942 182.947 li
77.8936 177.788 80.9397 172.838 84.4915 168.514 cv
98.892 176.883 li
95.3401 181.207 92.2941 186.157 89.9946 191.316 cv
f
98.892 176.883 mo
84.4915 168.514 li
88.2814 163.9 92.6471 159.999 97.2967 157.314 cv
98.8653 156.408 100.402 155.679 101.896 155.12 cv
116.297 163.489 li
114.802 164.048 113.266 164.777 111.697 165.683 cv
107.047 168.368 102.682 172.269 98.892 176.883 cv
f
grestore
154.663 106.839 mo
173.222 96.1235 188.847 101.783 193.224 119.075 cv
194.717 117.909 196.252 116.865 197.821 115.959 cv
212.425 107.527 224.302 114.296 224.35 131.077 cv
224.394 146.802 214.037 165.734 200.719 174.996 cv
111.869 226.452 li
97.2651 234.884 85.3883 228.115 85.3403 211.334 cv
85.293 194.553 97.0931 174.115 111.697 165.683 cv
113.266 164.777 114.802 164.048 116.297 163.489 cv
120.562 141.207 136.103 117.554 154.663 106.839 cv
.901961 .945098 .996078 rgb
f
304.287 174.557 mo
303.919 304.403 li
237.903 342.767 li
238.271 212.922 li
304.287 174.557 li
.803922 .862745 .984314 rgb
f
242.779 215.524 mo
242.441 334.908 li
299.411 301.8 li
299.749 182.416 li
242.779 215.524 li
240.346 338.536 mo
240.698 214.323 li
301.844 178.789 li
301.492 303.002 li
240.346 338.536 li
.854902 .909804 .992157 rgb
f
238.271 212.922 mo
237.903 342.767 li
171.454 304.404 li
171.823 174.558 li
238.271 212.922 li
f
304.287 174.557 mo
238.271 212.922 li
171.823 174.558 li
237.839 136.193 li
304.287 174.557 li
.937255 .964706 .996078 rgb
f
217.98 168.298 mo
216.521 169.139 li
194.911 181.573 li
184.36 175.321 li
182.901 174.46 li
205.969 161.185 li
217.98 168.298 li
.854902 .909804 .992157 rgb
f
216.521 169.139 mo
194.911 181.573 li
184.36 175.321 li
205.969 162.887 li
216.521 169.139 li
.0823529 .85098 .992157 rgb
f
248.82 217.48 mo
248.82 218.534 248.08 219.815 247.168 220.342 cv
246.255 220.869 245.515 220.442 245.515 219.388 cv
245.515 218.334 246.255 217.053 247.168 216.526 cv
248.08 215.999 248.82 216.426 248.82 217.48 cv
f
256.061 213.3 mo
256.061 214.354 255.321 215.635 254.409 216.162 cv
253.495 216.688 252.756 216.261 252.756 215.207 cv
252.756 214.154 253.495 212.873 254.408 212.346 cv
255.321 211.819 256.061 212.246 256.061 213.3 cv
f
263.301 209.119 mo
263.301 210.173 262.561 211.455 261.649 211.981 cv
260.736 212.508 259.997 212.081 259.997 211.027 cv
259.997 209.974 260.736 208.692 261.649 208.165 cv
262.561 207.639 263.301 208.066 263.301 209.119 cv
f
204.119 315.39 mo
204.119 324.768 li
204.102 330.878 200.085 336.98 192.062 341.643 cv
175.914 351.027 149.653 351.027 133.399 341.643 cv
125.219 336.92 121.133 330.721 121.151 324.532 cv
121.15 315.154 li
121.133 321.343 125.219 327.542 133.399 332.265 cv
149.653 341.649 175.914 341.649 192.062 332.265 cv
200.085 327.602 204.102 321.5 204.119 315.39 cv
.831373 .886275 .988235 rgb
f
gsave
204.119 315.39 mo
204.119 324.768 li
204.102 330.878 200.085 336.98 192.062 341.643 cv
175.914 351.027 149.653 351.027 133.399 341.643 cv
125.219 336.92 121.133 330.721 121.151 324.532 cv
121.15 315.154 li
121.133 321.343 125.219 327.542 133.399 332.265 cv
149.653 341.649 175.914 341.649 192.062 332.265 cv
200.085 327.602 204.102 321.5 204.119 315.39 cv
clp
204.119 315.39 mo
204.119 324.768 li
204.102 330.878 200.085 336.98 192.062 341.643 cv
188.882 343.49 185.311 344.975 181.501 346.094 cv
181.501 336.716 li
185.311 335.596 188.882 334.112 192.062 332.265 cv
200.085 327.602 204.102 321.5 204.119 315.39 cv
cp
.745098 .807843 .976471 rgb
f
181.501 336.716 mo
181.501 346.094 li
175.92 347.735 169.827 348.596 163.705 348.675 cv
163.705 339.297 li
169.827 339.217 175.92 338.357 181.501 336.716 cv
cp
.803922 .862745 .984314 rgb
f
163.705 339.297 mo
163.705 348.675 li
152.781 348.816 141.765 346.472 133.399 341.643 cv
132.99 341.407 132.592 341.167 132.204 340.924 cv
132.204 331.546 li
132.592 331.789 132.99 332.029 133.399 332.265 cv
141.765 337.094 152.781 339.438 163.705 339.297 cv
.854902 .909804 .992157 rgb
f
132.204 331.546 mo
132.204 340.924 li
127.864 338.206 124.8 335.05 123.017 331.716 cv
123.017 322.338 li
124.8 325.672 127.864 328.828 132.204 331.546 cv
cp
.803922 .862745 .984314 rgb
f
123.017 322.338 mo
123.017 331.716 li
121.766 329.379 121.144 326.955 121.151 324.531 cv
121.151 315.154 li
121.144 317.576 121.766 320.001 123.017 322.338 cv
cp
f
grestore
191.874 298.282 mo
208.128 307.667 208.21 322.88 192.062 332.265 cv
175.914 341.649 149.653 341.649 133.399 332.265 cv
117.145 322.881 117.056 307.667 133.204 298.283 cv
149.353 288.899 175.621 288.898 191.874 298.282 cv
.901961 .945098 .996078 rgb
f
202.969 299.169 mo
202.93 312.698 li
202.913 318.639 199.008 324.571 191.207 329.105 cv
175.507 338.229 149.974 338.229 134.171 329.105 cv
126.218 324.513 122.245 318.486 122.262 312.468 cv
122.3 298.938 li
122.283 304.956 126.256 310.984 134.209 315.575 cv
150.012 324.699 175.545 324.699 191.245 315.575 cv
199.047 311.042 202.952 305.11 202.969 299.169 cv
.0784314 .6 .988235 rgb
f
gsave
202.969 299.169 mo
202.93 312.698 li
202.913 318.639 199.008 324.571 191.207 329.105 cv
175.507 338.229 149.974 338.229 134.171 329.105 cv
126.218 324.513 122.245 318.486 122.262 312.468 cv
122.3 298.938 li
122.283 304.956 126.256 310.984 134.209 315.575 cv
150.012 324.699 175.545 324.699 191.245 315.575 cv
199.047 311.042 202.952 305.11 202.969 299.169 cv
clp
202.969 299.169 mo
202.93 312.698 li
202.913 318.639 199.008 324.571 191.207 329.105 cv
188.116 330.901 184.643 332.344 180.939 333.433 cv
180.978 319.903 li
184.682 318.814 188.154 317.372 191.245 315.575 cv
199.047 311.042 202.952 305.11 202.969 299.169 cv
cp
f
180.978 319.903 mo
180.939 333.433 li
175.513 335.028 169.589 335.865 163.636 335.942 cv
163.674 322.412 li
169.627 322.335 175.551 321.499 180.978 319.903 cv
cp
.0745098 .717647 .992157 rgb
f
163.674 322.412 mo
163.636 335.942 li
153.015 336.08 142.305 333.801 134.171 329.105 cv
133.773 328.875 133.386 328.643 133.009 328.406 cv
133.047 314.876 li
133.424 315.113 133.812 315.346 134.209 315.575 cv
142.343 320.271 153.054 322.55 163.674 322.412 cv
.0823529 .85098 .992157 rgb
f
133.047 314.876 mo
133.009 328.406 li
128.788 325.763 125.81 322.695 124.076 319.453 cv
124.114 305.924 li
125.849 309.166 128.827 312.234 133.047 314.876 cv
cp
.0745098 .717647 .992157 rgb
f
124.114 305.924 mo
124.076 319.453 li
122.86 317.181 122.255 314.824 122.262 312.468 cv
122.3 298.938 li
122.293 301.295 122.898 303.652 124.114 305.924 cv
cp
f
grestore
191.063 282.535 mo
206.867 291.66 206.946 306.451 191.245 315.575 cv
175.545 324.699 150.012 324.699 134.209 315.575 cv
118.406 306.451 118.319 291.66 134.019 282.536 cv
149.72 273.412 175.26 273.411 191.063 282.535 cv
.0823529 .85098 .992157 rgb
f
204.119 289.127 mo
204.119 298.506 li
204.102 304.616 200.085 310.718 192.062 315.38 cv
175.914 324.765 149.653 324.765 133.399 315.38 cv
125.219 310.658 121.133 304.458 121.151 298.269 cv
121.15 288.891 li
121.133 295.08 125.219 301.28 133.399 306.002 cv
149.653 315.386 175.914 315.386 192.062 306.002 cv
200.085 301.339 204.102 295.237 204.119 289.127 cv
.831373 .886275 .988235 rgb
f
gsave
204.119 289.127 mo
204.119 298.506 li
204.102 304.616 200.085 310.718 192.062 315.38 cv
175.914 324.765 149.653 324.765 133.399 315.38 cv
125.219 310.658 121.133 304.458 121.151 298.269 cv
121.15 288.891 li
121.133 295.08 125.219 301.28 133.399 306.002 cv
149.653 315.386 175.914 315.386 192.062 306.002 cv
200.085 301.339 204.102 295.237 204.119 289.127 cv
clp
204.119 289.127 mo
204.119 298.506 li
204.102 304.616 200.085 310.718 192.062 315.38 cv
188.882 317.228 185.311 318.712 181.501 319.832 cv
181.501 310.453 li
185.311 309.334 188.882 307.849 192.062 306.002 cv
200.085 301.339 204.102 295.238 204.119 289.127 cv
cp
.745098 .807843 .976471 rgb
f
181.501 310.453 mo
181.501 319.832 li
175.92 321.472 169.827 322.333 163.705 322.412 cv
163.705 313.034 li
169.827 312.955 175.92 312.094 181.501 310.453 cv
cp
.803922 .862745 .984314 rgb
f
163.705 313.034 mo
163.705 322.412 li
152.781 322.554 141.765 320.21 133.399 315.38 cv
132.99 315.145 132.592 314.905 132.204 314.662 cv
132.204 305.283 li
132.592 305.527 132.99 305.766 133.399 306.002 cv
141.765 310.832 152.781 313.176 163.705 313.034 cv
.854902 .909804 .992157 rgb
f
132.204 305.283 mo
132.204 314.662 li
127.864 311.944 124.8 308.788 123.017 305.453 cv
123.017 296.075 li
124.8 299.409 127.864 302.565 132.204 305.283 cv
cp
.803922 .862745 .984314 rgb
f
123.017 296.075 mo
123.017 305.453 li
121.766 303.117 121.144 300.692 121.151 298.269 cv
121.151 288.891 li
121.144 291.314 121.766 293.738 123.017 296.075 cv
cp
f
grestore
191.874 272.02 mo
208.128 281.404 208.21 296.618 192.062 306.002 cv
175.914 315.386 149.653 315.386 133.399 306.002 cv
117.145 296.618 117.056 281.405 133.204 272.021 cv
149.353 262.636 175.621 262.636 191.874 272.02 cv
.901961 .945098 .996078 rgb
f
202.969 272.994 mo
202.93 286.523 li
202.913 292.465 199.008 298.397 191.207 302.93 cv
175.507 312.054 149.974 312.054 134.171 302.93 cv
126.218 298.338 122.245 292.311 122.262 286.293 cv
122.3 272.764 li
122.283 278.782 126.256 284.809 134.209 289.401 cv
150.012 298.525 175.545 298.525 191.245 289.401 cv
199.047 284.867 202.952 278.935 202.969 272.994 cv
.0784314 .6 .988235 rgb
f
gsave
202.969 272.994 mo
202.93 286.523 li
202.913 292.465 199.008 298.397 191.207 302.93 cv
175.507 312.054 149.974 312.054 134.171 302.93 cv
126.218 298.338 122.245 292.311 122.262 286.293 cv
122.3 272.764 li
122.283 278.782 126.256 284.809 134.209 289.401 cv
150.012 298.525 175.545 298.525 191.245 289.401 cv
199.047 284.867 202.952 278.935 202.969 272.994 cv
clp
202.969 272.994 mo
202.93 286.523 li
202.913 292.465 199.008 298.397 191.207 302.93 cv
188.116 304.727 184.643 306.169 180.939 307.259 cv
180.978 293.729 li
184.682 292.64 188.154 291.197 191.245 289.401 cv
199.047 284.867 202.952 278.935 202.969 272.994 cv
cp
f
180.978 293.729 mo
180.939 307.259 li
175.513 308.854 169.589 309.69 163.636 309.768 cv
163.674 296.238 li
169.627 296.16 175.551 295.324 180.978 293.729 cv
cp
.0745098 .717647 .992157 rgb
f
163.674 296.238 mo
163.636 309.768 li
153.015 309.906 142.305 307.626 134.171 302.93 cv
133.773 302.701 133.386 302.468 133.009 302.232 cv
133.047 288.702 li
133.424 288.939 133.812 289.172 134.209 289.401 cv
142.343 294.097 153.054 296.376 163.674 296.238 cv
.0823529 .85098 .992157 rgb
f
133.047 288.702 mo
133.009 302.232 li
128.788 299.588 125.81 296.52 124.076 293.278 cv
124.114 279.749 li
125.849 282.991 128.827 286.059 133.047 288.702 cv
cp
.0745098 .717647 .992157 rgb
f
124.114 279.749 mo
124.076 293.278 li
122.86 291.006 122.255 288.649 122.262 286.293 cv
122.3 272.764 li
122.293 275.119 122.898 277.477 124.114 279.749 cv
cp
f
grestore
191.063 256.361 mo
206.867 265.484 206.946 280.276 191.245 289.401 cv
175.545 298.525 150.012 298.525 134.209 289.401 cv
118.406 280.277 118.319 265.485 134.019 256.361 cv
149.72 247.237 175.26 247.237 191.063 256.361 cv
.0823529 .85098 .992157 rgb
f
204.119 262.953 mo
204.119 272.331 li
204.102 278.442 200.085 284.543 192.062 289.205 cv
175.914 298.59 149.653 298.59 133.399 289.206 cv
125.219 284.483 121.133 278.284 121.151 272.094 cv
121.15 262.716 li
121.133 268.906 125.219 275.105 133.399 279.827 cv
149.653 289.211 175.914 289.211 192.062 279.827 cv
200.085 275.165 204.102 269.063 204.119 262.953 cv
.831373 .886275 .988235 rgb
f
gsave
204.119 262.953 mo
204.119 272.331 li
204.102 278.442 200.085 284.543 192.062 289.205 cv
175.914 298.59 149.653 298.59 133.399 289.206 cv
125.219 284.483 121.133 278.284 121.151 272.094 cv
121.15 262.716 li
121.133 268.906 125.219 275.105 133.399 279.827 cv
149.653 289.211 175.914 289.211 192.062 279.827 cv
200.085 275.165 204.102 269.063 204.119 262.953 cv
clp
204.119 262.953 mo
204.119 272.331 li
204.102 278.442 200.085 284.543 192.062 289.205 cv
188.882 291.053 185.311 292.537 181.501 293.657 cv
181.501 284.279 li
185.311 283.158 188.882 281.675 192.062 279.827 cv
200.085 275.165 204.102 269.063 204.119 262.953 cv
cp
.745098 .807843 .976471 rgb
f
181.501 284.279 mo
181.501 293.657 li
175.92 295.298 169.827 296.158 163.705 296.238 cv
163.705 286.859 li
169.827 286.78 175.92 285.92 181.501 284.279 cv
cp
.803922 .862745 .984314 rgb
f
163.705 286.859 mo
163.705 296.238 li
152.781 296.38 141.765 294.035 133.399 289.206 cv
132.99 288.969 132.592 288.73 132.204 288.487 cv
132.204 279.109 li
132.592 279.352 132.99 279.592 133.399 279.827 cv
141.765 284.657 152.781 287.001 163.705 286.859 cv
cp
.854902 .909804 .992157 rgb
f
132.204 279.109 mo
132.204 288.487 li
127.864 285.769 124.8 282.613 123.017 279.279 cv
123.017 269.901 li
124.8 273.235 127.864 276.391 132.204 279.109 cv
cp
.803922 .862745 .984314 rgb
f
123.017 269.901 mo
123.017 279.279 li
121.766 276.942 121.144 274.518 121.151 272.094 cv
121.151 262.716 li
121.144 265.139 121.766 267.564 123.017 269.901 cv
cp
f
grestore
191.874 245.845 mo
208.128 255.23 208.21 270.443 192.062 279.827 cv
175.914 289.211 149.653 289.211 133.399 279.827 cv
117.145 270.443 117.056 255.231 133.204 245.845 cv
149.353 236.461 175.621 236.461 191.874 245.845 cv
.901961 .945098 .996078 rgb
f
202.969 246.25 mo
202.93 259.78 li
202.913 265.721 199.008 271.653 191.207 276.186 cv
175.507 285.311 149.974 285.311 134.171 276.186 cv
126.218 271.595 122.245 265.567 122.262 259.549 cv
122.3 246.02 li
122.283 252.038 126.256 258.065 134.209 262.657 cv
150.012 271.781 175.545 271.781 191.245 262.657 cv
199.047 258.124 202.952 252.191 202.969 246.25 cv
.0784314 .6 .988235 rgb
f
gsave
202.969 246.25 mo
202.93 259.78 li
202.913 265.721 199.008 271.653 191.207 276.186 cv
175.507 285.311 149.974 285.311 134.171 276.186 cv
126.218 271.595 122.245 265.567 122.262 259.549 cv
122.3 246.02 li
122.283 252.038 126.256 258.065 134.209 262.657 cv
150.012 271.781 175.545 271.781 191.245 262.657 cv
199.047 258.124 202.952 252.191 202.969 246.25 cv
clp
202.969 246.25 mo
202.93 259.78 li
202.913 265.721 199.008 271.653 191.207 276.186 cv
188.116 277.983 184.643 279.426 180.939 280.514 cv
180.978 266.985 li
184.682 265.896 188.154 264.453 191.245 262.657 cv
199.047 258.124 202.952 252.191 202.969 246.25 cv
cp
f
180.978 266.985 mo
180.939 280.514 li
175.513 282.11 169.589 282.947 163.636 283.023 cv
163.674 269.494 li
169.627 269.417 175.551 268.581 180.978 266.985 cv
cp
.0745098 .717647 .992157 rgb
f
163.674 269.494 mo
163.636 283.023 li
153.015 283.161 142.305 280.882 134.171 276.186 cv
133.773 275.957 133.386 275.724 133.009 275.488 cv
133.047 261.958 li
133.424 262.194 133.812 262.427 134.209 262.657 cv
142.343 267.353 153.054 269.632 163.674 269.494 cv
.0823529 .85098 .992157 rgb
f
133.047 261.958 mo
133.009 275.488 li
128.788 272.845 125.81 269.777 124.076 266.535 cv
124.114 253.006 li
125.849 256.247 128.827 259.316 133.047 261.958 cv
cp
.0745098 .717647 .992157 rgb
f
124.114 253.006 mo
124.076 266.535 li
122.86 264.263 122.255 261.906 122.262 259.55 cv
122.3 246.02 li
122.293 248.376 122.898 250.734 124.114 253.006 cv
cp
f
grestore
191.063 229.617 mo
206.867 238.741 206.946 253.533 191.245 262.657 cv
175.545 271.781 150.012 271.781 134.209 262.657 cv
118.406 253.533 118.319 238.742 134.019 229.617 cv
149.72 220.493 175.26 220.493 191.063 229.617 cv
.0823529 .85098 .992157 rgb
f
204.119 236.209 mo
204.119 245.587 li
204.102 251.698 200.085 257.799 192.062 262.462 cv
175.914 271.846 149.653 271.846 133.399 262.462 cv
125.219 257.74 121.133 251.54 121.151 245.351 cv
121.15 235.973 li
121.133 242.162 125.219 248.361 133.399 253.084 cv
149.653 262.468 175.914 262.468 192.062 253.084 cv
200.085 248.421 204.102 242.32 204.119 236.209 cv
.831373 .886275 .988235 rgb
f
gsave
204.119 236.209 mo
204.119 245.587 li
204.102 251.698 200.085 257.799 192.062 262.462 cv
175.914 271.846 149.653 271.846 133.399 262.462 cv
125.219 257.74 121.133 251.54 121.151 245.351 cv
121.15 235.973 li
121.133 242.162 125.219 248.361 133.399 253.084 cv
149.653 262.468 175.914 262.468 192.062 253.084 cv
200.085 248.421 204.102 242.32 204.119 236.209 cv
clp
204.119 236.209 mo
204.119 245.587 li
204.102 251.698 200.085 257.799 192.062 262.462 cv
188.882 264.309 185.311 265.794 181.501 266.913 cv
181.501 257.535 li
185.311 256.415 188.882 254.931 192.062 253.084 cv
200.085 248.421 204.102 242.32 204.119 236.209 cv
cp
.745098 .807843 .976471 rgb
f
181.501 257.535 mo
181.501 266.913 li
175.92 268.554 169.827 269.415 163.705 269.494 cv
163.705 260.116 li
169.827 260.036 175.92 259.176 181.501 257.535 cv
cp
.803922 .862745 .984314 rgb
f
163.705 260.116 mo
163.705 269.494 li
152.781 269.636 141.765 267.292 133.399 262.462 cv
132.99 262.226 132.592 261.987 132.204 261.743 cv
132.204 252.365 li
132.592 252.608 132.99 252.848 133.399 253.084 cv
141.765 257.914 152.781 260.258 163.705 260.116 cv
.854902 .909804 .992157 rgb
f
132.204 252.365 mo
132.204 261.743 li
127.864 259.025 124.8 255.869 123.017 252.535 cv
123.017 243.157 li
124.8 246.491 127.864 249.647 132.204 252.365 cv
cp
.803922 .862745 .984314 rgb
f
123.017 243.157 mo
123.017 252.535 li
121.766 250.198 121.144 247.774 121.151 245.351 cv
121.151 235.973 li
121.144 238.396 121.766 240.82 123.017 243.157 cv
cp
f
grestore
191.874 219.101 mo
208.128 228.486 208.21 243.699 192.062 253.084 cv
175.914 262.468 149.653 262.468 133.399 253.084 cv
117.145 243.7 117.056 228.486 133.204 219.102 cv
149.353 209.718 175.621 209.717 191.874 219.101 cv
.901961 .945098 .996078 rgb
f
188.198 223.05 mo
202.409 230.254 202.481 241.932 188.363 249.135 cv
174.245 256.339 151.285 256.339 137.074 249.135 cv
122.864 241.932 122.786 230.254 136.904 223.05 cv
151.022 215.847 173.988 215.847 188.198 223.05 cv
.854902 .909804 .992157 rgb
f
196.714 237.558 mo
196.72 241.145 193.667 244.977 188.34 248.076 cv
181.737 251.909 172.418 254.112 162.768 254.112 cv
152.971 254.112 143.857 251.96 137.1 248.063 cv
131.677 244.932 128.566 241.049 128.559 237.416 cv
128.559 237.19 128.572 236.958 128.598 236.727 cv
128.572 236.502 128.559 236.25 128.559 236.024 cv
128.553 232.43 131.605 228.598 136.926 225.506 cv
143.528 221.674 152.849 219.471 162.498 219.471 cv
172.301 219.471 181.416 221.615 188.173 225.519 cv
193.596 228.649 196.707 232.527 196.714 236.16 cv
196.714 236.385 196.701 236.617 196.675 236.849 cv
196.701 237.074 196.714 237.332 196.714 237.558 cv
189.782 222.73 mo
182.55 218.549 172.855 216.25 162.498 216.25 cv
152.295 216.25 142.382 218.608 135.31 222.723 cv
128.965 226.408 125.332 231.258 125.339 236.024 cv
125.339 236.256 125.351 236.488 125.371 236.72 cv
125.705 241.313 129.357 245.918 135.49 249.461 cv
142.73 253.635 152.417 255.934 162.768 255.934 cv
172.971 255.934 182.884 253.577 189.957 249.461 cv
195.992 245.963 199.58 241.397 199.902 236.856 cv
199.927 236.623 199.934 236.385 199.934 236.154 cv
199.927 231.342 196.224 226.446 189.782 222.73 cv
.596078 .643137 .878431 rgb
f
188.34 248.076 mo
181.737 251.909 172.418 254.112 162.768 254.112 cv
152.971 254.112 143.857 251.96 137.1 248.063 cv
131.677 244.932 128.566 241.049 128.559 237.416 cv
128.559 237.19 128.572 236.958 128.598 236.727 cv
128.572 236.502 128.559 236.25 128.559 236.024 cv
128.553 232.43 131.605 228.598 136.926 225.506 cv
143.528 221.674 152.849 219.471 162.498 219.471 cv
172.301 219.471 181.416 221.615 188.173 225.519 cv
193.596 228.649 196.707 232.527 196.714 236.16 cv
196.714 236.385 196.701 236.617 196.675 236.849 cv
196.701 237.074 196.714 237.332 196.714 237.558 cv
196.72 241.145 193.667 244.977 188.34 248.076 cv
189.782 224.121 mo
182.55 219.947 172.855 217.648 162.498 217.648 cv
152.295 217.648 142.382 220.006 135.31 224.115 cv
129.274 227.619 125.693 232.186 125.371 236.72 cv
125.705 241.313 129.357 245.918 135.49 249.461 cv
142.73 253.635 152.417 255.934 162.768 255.934 cv
172.971 255.934 182.884 253.577 189.957 249.461 cv
195.992 245.963 199.58 241.397 199.902 236.856 cv
199.567 232.269 195.915 227.664 189.782 224.121 cv
.0823529 .85098 .992157 rgb
f
141.723 162.038 mo
141.428 162.208 141.129 162.326 140.833 162.383 cv
139.374 162.658 138.588 161.286 139.08 159.316 cv
141.328 150.299 146.741 141.34 153.557 135.351 cv
163.53 126.591 173.754 126.413 177.871 134.927 cv
178.487 136.201 177.842 138.472 176.431 139.998 cv
175.019 141.524 173.375 141.729 172.759 140.455 cv
169.747 134.226 162.264 134.36 154.965 140.771 cv
149.975 145.154 146.013 151.714 144.366 158.317 cv
143.974 159.888 142.888 161.365 141.723 162.038 cv
.803922 .862745 .984314 rgb
f
135.372 160.224 mo
142.503 169.891 li
149.277 151.959 li
135.372 160.224 li
f
159.449 181.711 mo
151.791 186.132 144.47 185.438 140.868 179.42 cv
140.165 178.245 140.705 175.992 142.075 174.388 cv
143.445 172.785 145.126 172.438 145.83 173.614 cv
149.057 179.005 156.368 178.553 163.215 172.539 cv
168.299 168.073 172.289 161.4 173.888 154.689 cv
174.356 152.724 175.926 150.883 177.393 150.577 cv
178.861 150.271 179.67 151.614 179.202 153.579 cv
177.018 162.744 171.568 171.858 164.623 177.959 cv
162.907 179.466 161.169 180.718 159.449 181.711 cv
f
182.877 153.367 mo
176.807 142.426 li
169.007 160.22 li
182.877 153.367 li
f
242.419 241.95 mo
242.526 293.535 li
301.433 259.525 li
301.326 207.94 li
242.419 241.95 li
.0627451 .0980392 .105882 rgb
f
339.272 261.081 mo
341.154 259.988 li
341.046 286.289 li
339.164 287.382 li
339.272 261.081 li
cp
.0588235 .462745 .760784 rgb
f
294.931 235.457 mo
296.813 234.364 li
341.154 259.988 li
339.272 261.081 li
294.931 235.457 li
cp
.215686 .25098 .290196 rgb
f
339.272 261.081 mo
339.164 287.382 li
294.822 261.758 li
294.931 235.457 li
339.272 261.081 li
cp
.141176 .164706 .192157 rgb
f
269.606 242.975 mo
268.102 242.1 li
300.91 223.159 li
302.414 224.033 li
269.606 242.975 li
1 .831373 .219608 rgb
f
249.161 290.071 mo
247.656 289.197 li
247.519 249.049 li
249.023 249.923 li
249.161 290.071 li
cp
1 .717647 0 rgb
f
249.023 249.923 mo
247.519 249.049 li
265.939 238.414 li
267.444 239.288 li
249.023 249.923 li
1 .831373 .219608 rgb
f
267.444 239.288 mo
269.606 242.975 li
302.414 224.033 li
302.538 259.254 li
249.161 290.071 li
249.023 249.923 li
267.444 239.288 li
.984314 .780392 .054902 rgb
f
254.193 290.781 mo
250.181 288.45 li
250.068 256.909 li
254.079 259.241 li
254.193 290.781 li
cp
.831373 .886275 .988235 rgb
f
254.079 259.241 mo
250.067 256.909 li
301.091 227.458 li
305.103 229.79 li
254.079 259.241 li
.92549 .960784 .996078 rgb
f
305.103 229.79 mo
305.216 261.329 li
254.193 290.781 li
254.079 259.241 li
305.103 229.79 li
cp
.709804 .701961 .768627 rgb
f
249.148 284.904 mo
249.148 286.441 li
249.124 287.073 li
247.656 287.073 li
247.656 288.019 li
254.125 291.751 li
254.134 287.892 li
249.148 284.904 li
cp
.984314 .780392 .054902 rgb
f
254.125 292.93 mo
252.621 292.056 li
252.505 259.883 li
254.01 260.757 li
254.125 292.93 li
cp
1 .717647 0 rgb
f
254.01 260.757 mo
252.505 259.883 li
305.883 229.066 li
307.388 229.94 li
254.01 260.757 li
cp
1 .831373 .219608 rgb
f
307.388 229.94 mo
307.502 262.112 li
254.125 292.93 li
254.01 260.757 li
307.388 229.94 li
cp
.984314 .780392 .054902 rgb
f
254.125 292.93 mo
247.656 289.197 li
247.656 285.188 li
254.134 289.07 li
254.125 292.93 li
cp
1 .717647 0 rgb
f
278.096 247.85 mo
276.592 246.976 li
309.4 228.034 li
310.904 228.908 li
278.096 247.85 li
cp
1 .831373 .219608 rgb
f
257.651 294.946 mo
256.146 294.072 li
256.008 253.924 li
257.513 254.798 li
257.651 294.946 li
cp
1 .717647 0 rgb
f
257.513 254.798 mo
256.008 253.924 li
274.429 243.289 li
275.934 244.163 li
257.513 254.798 li
cp
1 .831373 .219608 rgb
f
275.934 244.163 mo
278.096 247.85 li
310.904 228.908 li
311.028 264.129 li
257.651 294.946 li
257.513 254.798 li
275.934 244.163 li
cp
.984314 .780392 .054902 rgb
f
262.682 295.656 mo
258.67 293.325 li
258.557 261.784 li
262.569 264.116 li
262.682 295.656 li
cp
.831373 .886275 .988235 rgb
f
262.569 264.116 mo
258.557 261.784 li
309.581 232.333 li
313.593 234.665 li
262.569 264.116 li
cp
.92549 .960784 .996078 rgb
f
313.593 234.665 mo
313.706 266.205 li
262.682 295.656 li
262.569 264.116 li
313.593 234.665 li
cp
.709804 .701961 .768627 rgb
f
257.638 289.779 mo
257.638 291.316 li
257.613 291.948 li
256.146 291.948 li
256.146 292.894 li
262.615 296.627 li
262.624 292.767 li
257.638 289.779 li
cp
.984314 .780392 .054902 rgb
f
262.615 297.805 mo
261.11 296.931 li
260.995 264.759 li
262.5 265.633 li
262.615 297.805 li
cp
1 .717647 0 rgb
f
262.5 265.633 mo
260.995 264.759 li
314.373 233.941 li
315.877 234.815 li
262.5 265.633 li
cp
1 .831373 .219608 rgb
f
315.877 234.815 mo
315.992 266.988 li
262.615 297.805 li
262.5 265.633 li
315.877 234.815 li
cp
.952941 .670588 .0196078 rgb
f
262.615 297.805 mo
256.146 294.072 li
256.146 290.064 li
262.624 293.945 li
262.615 297.805 li
cp
1 .717647 0 rgb
f
287.511 204.718 mo
286.006 203.844 li
318.814 184.902 li
320.318 185.776 li
287.511 204.718 li
1 .831373 .219608 rgb
f
267.065 261.052 mo
265.56 260.178 li
265.422 210.792 li
266.927 211.666 li
267.065 261.052 li
1 .717647 0 rgb
f
266.927 211.666 mo
265.422 210.792 li
283.844 200.157 li
285.348 201.031 li
266.927 211.666 li
1 .831373 .219608 rgb
f
285.348 201.031 mo
287.511 204.718 li
320.318 185.776 li
320.442 230.235 li
267.065 261.052 li
266.927 211.666 li
285.348 201.031 li
.984314 .780392 .054902 rgb
f
272.096 261.762 mo
268.084 259.431 li
267.971 218.653 li
271.983 220.984 li
272.096 261.762 li
.831373 .886275 .988235 rgb
f
271.983 220.984 mo
267.971 218.653 li
318.995 189.201 li
323.007 191.533 li
271.983 220.984 li
.92549 .960784 .996078 rgb
f
323.007 191.533 mo
323.12 232.311 li
272.096 261.762 li
271.983 220.984 li
323.007 191.533 li
.709804 .701961 .768627 rgb
f
267.053 255.885 mo
267.053 257.422 li
267.027 258.053 li
265.56 258.053 li
265.56 259 li
272.029 262.733 li
272.038 258.873 li
267.053 255.885 li
cp
.984314 .780392 .054902 rgb
f
272.029 263.911 mo
270.524 263.037 li
270.409 221.627 li
271.914 222.501 li
272.029 263.911 li
1 .717647 0 rgb
f
271.914 222.501 mo
270.409 221.627 li
323.787 190.809 li
325.291 191.684 li
271.914 222.501 li
1 .831373 .219608 rgb
f
325.291 191.684 mo
325.406 233.093 li
272.029 263.911 li
271.914 222.501 li
325.291 191.684 li
.984314 .780392 .054902 rgb
f
272.029 263.911 mo
265.56 260.178 li
265.56 256.17 li
272.038 260.051 li
272.029 263.911 li
cp
1 .717647 0 rgb
f
296.588 258.775 mo
295.084 257.901 li
327.892 238.96 li
329.396 239.834 li
296.588 258.775 li
cp
1 .831373 .219608 rgb
f
276.143 305.872 mo
274.638 304.997 li
274.501 264.85 li
276.005 265.724 li
276.143 305.872 li
cp
1 .717647 0 rgb
f
276.005 265.724 mo
274.501 264.85 li
292.921 254.214 li
294.426 255.089 li
276.005 265.724 li
cp
1 .831373 .219608 rgb
f
294.426 255.089 mo
296.588 258.775 li
329.396 239.834 li
329.52 275.054 li
276.143 305.872 li
276.005 265.724 li
294.426 255.089 li
cp
.984314 .780392 .054902 rgb
f
281.175 306.582 mo
277.163 304.251 li
277.05 272.71 li
281.061 275.041 li
281.175 306.582 li
cp
.831373 .886275 .988235 rgb
f
281.061 275.041 mo
277.05 272.71 li
328.073 243.259 li
332.085 245.59 li
281.061 275.041 li
cp
.92549 .960784 .996078 rgb
f
332.085 245.59 mo
332.198 277.13 li
281.175 306.582 li
281.061 275.041 li
332.085 245.59 li
cp
.709804 .701961 .768627 rgb
f
276.13 300.705 mo
276.13 302.242 li
276.106 302.874 li
274.638 302.874 li
274.638 303.819 li
281.107 307.552 li
281.116 303.693 li
276.13 300.705 li
cp
.984314 .780392 .054902 rgb
f
281.107 308.73 mo
279.603 307.856 li
279.488 275.684 li
280.992 276.559 li
281.107 308.73 li
cp
1 .717647 0 rgb
f
280.992 276.559 mo
279.488 275.684 li
332.865 244.866 li
334.369 245.741 li
280.992 276.559 li
cp
1 .831373 .219608 rgb
f
334.369 245.741 mo
334.484 277.913 li
281.107 308.73 li
280.992 276.559 li
334.369 245.741 li
cp
.984314 .780392 .054902 rgb
f
281.107 308.73 mo
274.638 304.997 li
274.638 300.99 li
281.116 304.871 li
281.107 308.73 li
cp
1 .717647 0 rgb
f
289.311 289.928 mo
291.193 288.834 li
291.085 315.136 li
289.202 316.229 li
289.311 289.928 li
cp
.0588235 .462745 .760784 rgb
f
244.97 264.304 mo
246.852 263.21 li
291.193 288.834 li
289.311 289.928 li
244.97 264.304 li
cp
.215686 .25098 .290196 rgb
f
289.311 289.928 mo
289.202 316.229 li
244.861 290.605 li
244.97 264.304 li
289.311 289.928 li
cp
.141176 .164706 .192157 rgb
f
289.979 283.946 mo
288.204 282.914 li
288.307 316.848 li
290.081 317.879 li
289.979 283.946 li
cp
.854902 .909804 .992157 rgb
f
341.312 254.336 mo
339.538 253.305 li
288.204 282.914 li
289.979 283.946 li
341.312 254.336 li
cp
.937255 .964706 .996078 rgb
f
289.979 283.946 mo
290.081 317.879 li
341.415 288.269 li
341.312 254.336 li
289.979 283.946 li
cp
.776471 .835294 .980392 rgb
f
322.721 268.791 mo
316.231 272.538 li
324.158 276.339 li
324.158 267.958 li
322.721 268.791 li
cp
.831373 .886275 .988235 rgb
f
311.927 275.021 mo
311.927 283.411 li
324.158 276.339 li
316.231 272.538 li
311.927 275.021 li
cp
.945098 .945098 .945098 rgb
f
322.721 268.791 mo
322.721 275.65 li
311.927 281.881 li
311.927 275.021 li
322.721 268.791 li
cp
.0627451 .0980392 .105882 rgb
f
257.522 151.289 mo
258.418 149.205 259.264 146.455 260.44 143.033 cv
260.756 142.112 260.937 141.127 260.95 140.147 cv
260.964 139.157 260.652 138.32 260.188 137.426 cv
259.978 137.021 259.686 136.586 259.23 136.493 cv
258.815 136.408 258.416 136.64 258.089 136.887 cv
256.12 138.377 255.034 140.856 254.581 143.208 cv
254.16 145.395 253.434 147.518 253.03 149.717 cv
252.953 150.136 252.844 150.579 252.854 151.01 cv
252.903 153.053 254.24 154.303 255.617 153.683 cv
256.29 153.38 257.036 152.423 257.522 151.289 cv
1 1 1 rgb
f
266.631 197.29 mo
265.093 198.895 263.731 200.658 262.372 202.417 cv
261.984 202.92 261.528 203.191 261.222 203.751 cv
260.974 204.207 260.711 205.061 260.861 205.585 cv
261.057 206.271 262.59 206.274 263.165 206.244 cv
263.97 206.202 264.684 205.995 265.379 205.598 cv
266.056 205.211 266.406 204.691 266.68 203.964 cv
266.927 203.311 267.145 202.603 267.678 202.153 cv
268.178 201.731 268.926 201.56 269.21 200.971 cv
269.355 200.67 269.342 200.318 269.307 199.985 cv
269.24 199.359 268.989 198.76 268.921 198.145 cv
268.872 197.693 268.91 197.184 268.718 196.757 cv
268.554 196.392 268.045 196.218 267.666 196.245 cv
267.244 196.276 266.853 196.511 266.571 196.826 cv
266.631 197.29 li
.141176 .164706 .192157 rgb
f
266.339 196.878 mo
264.822 198.464 263.479 200.206 262.139 201.944 cv
261.756 202.441 261.372 202.944 261.071 203.496 cv
260.826 203.947 260.5 204.556 260.647 205.073 cv
260.841 205.752 262.352 205.754 262.92 205.724 cv
263.714 205.682 264.417 205.478 265.103 205.085 cv
265.771 204.703 266.115 204.189 266.387 203.47 cv
266.63 202.826 266.846 202.127 267.371 201.682 cv
267.864 201.265 268.601 201.095 268.882 200.514 cv
269.025 200.216 269.012 199.868 268.977 199.539 cv
268.911 198.921 268.664 198.33 268.598 197.722 cv
268.549 197.276 268.586 196.773 268.397 196.351 cv
268.236 195.99 267.735 195.819 267.36 195.846 cv
266.944 195.876 266.559 196.108 266.281 196.419 cv
266.339 196.878 li
.0627451 .0980392 .105882 rgb
f
261.584 194.313 mo
259.777 195.61 258.116 197.093 256.458 198.575 cv
255.985 198.998 255.486 199.181 255.084 199.674 cv
254.756 200.077 254.341 200.869 254.393 201.411 cv
254.46 202.123 255.966 202.406 256.538 202.481 cv
257.337 202.587 258.076 202.515 258.832 202.251 cv
259.569 201.996 260.008 201.548 260.411 200.883 cv
260.773 200.287 261.117 199.63 261.724 199.286 cv
262.291 198.962 263.058 198.931 263.445 198.405 cv
263.643 198.135 263.695 197.786 263.721 197.452 cv
263.769 196.824 263.633 196.19 263.68 195.573 cv
263.713 195.12 263.843 194.626 263.733 194.171 cv
263.638 193.782 263.171 193.518 262.793 193.475 cv
262.372 193.428 261.945 193.587 261.61 193.846 cv
261.584 194.313 li
.141176 .164706 .192157 rgb
f
261.373 193.855 mo
259.591 195.136 257.951 196.603 256.316 198.067 cv
255.848 198.485 255.379 198.908 254.982 199.396 cv
254.657 199.794 254.226 200.334 254.277 200.869 cv
254.343 201.572 255.828 201.851 256.392 201.925 cv
257.18 202.029 257.908 201.957 258.654 201.697 cv
259.381 201.444 259.814 201.002 260.212 200.345 cv
260.569 199.755 260.909 199.107 261.508 198.766 cv
262.068 198.447 262.825 198.415 263.206 197.895 cv
263.402 197.628 263.453 197.284 263.479 196.954 cv
263.527 196.334 263.393 195.708 263.438 195.098 cv
263.472 194.65 263.601 194.163 263.492 193.713 cv
263.399 193.329 262.938 193.069 262.566 193.027 cv
262.15 192.98 261.729 193.138 261.399 193.393 cv
261.373 193.855 li
.0627451 .0980392 .105882 rgb
f
256.535 168.765 mo
257.166 172.441 257.089 183.252 260.654 182.161 cv
261.771 181.819 263.658 179.76 263.743 177.295 cv
263.79 175.967 263.65 174.083 263.673 172.754 cv
263.721 170.005 266.064 161.081 260.41 159.59 cv
259.561 159.366 258.203 157.753 257.511 158.368 cv
257.369 158.494 256.927 159.091 256.624 160.361 cv
256.452 161.085 256.385 162.184 256.289 163.151 cv
256.125 164.807 256.186 166.733 256.535 168.765 cv
cp
.141176 .164706 .192157 rgb
f
259.563 195.524 mo
259.726 196.299 260.239 197.138 262.892 196.934 cv
263.612 196.879 263.941 194.764 264.037 194.197 cv
264.452 191.756 263.919 188.897 263.995 186.417 cv
264.117 182.48 263.425 181.337 263.187 179.532 cv
263.089 178.786 263.179 177.959 262.734 177.353 cv
261.656 175.882 259.108 177.18 258.461 178.982 cv
258.193 179.728 258.317 180.063 258.475 180.81 cv
259.153 184.021 259.556 195.49 259.563 195.524 cv
f
262.849 179.227 mo
262.832 180.063 262.878 180.903 262.913 181.739 cv
262.97 183.09 263.041 184.442 263.116 185.792 cv
263.536 193.37 263.457 197.232 264.051 198.824 cv
264.54 200.139 266.269 200.073 267.395 199.725 cv
267.888 199.573 268.358 199.295 268.651 198.871 cv
268.936 198.458 269.03 197.945 269.111 197.45 cv
269.888 192.644 269.763 187.837 268.713 183.086 cv
268.468 181.972 268.151 180.821 267.537 179.847 cv
267.425 179.668 266.998 180.178 266.562 180.688 cv
266.148 181.172 265.725 181.656 265.555 181.552 cv
265.176 181.322 266.067 180.682 265.625 180.707 cv
264.789 180.752 263.977 181.131 263.405 181.74 cv
262.849 179.227 li
.215686 .25098 .290196 rgb
f
269.334 160.041 mo
269.004 159.59 li
267.767 160.189 266.261 160.004 264.809 160.148 cv
261.675 160.458 261.423 161.007 259.391 159.59 cv
258.937 161.74 259.424 163.775 259.397 164.254 cv
259.256 166.722 261.544 166.97 261.609 168.275 cv
261.76 171.298 262.032 177.267 262.431 180.268 cv
262.586 181.435 262.777 182.632 263.38 183.643 cv
264.083 184.821 265.332 185.471 266.697 185.373 cv
267.048 185.346 267.406 185.242 267.672 185.011 cv
268.29 184.472 268.93 184.632 268.867 183.814 cv
268.681 181.43 269.052 178.096 269.611 175.771 cv
270.743 171.069 271.261 165.896 269.334 160.041 cv
f
269.473 154.985 mo
269.373 155.77 269.296 156.571 269.268 157.362 cv
269.306 156.567 269.374 155.774 269.473 154.985 cv
cp
.952941 .662745 .517647 rgb
f
269.268 157.362 mo
269.245 157.844 269.233 158.327 269.233 158.809 cv
269.262 158.796 li
269.249 158.319 269.251 157.84 269.268 157.362 cv
cp
f
269.268 157.362 mo
269.306 156.567 269.374 155.774 269.473 154.985 cv
269.603 153.973 269.778 152.981 270.005 151.994 cv
270.408 150.234 270.873 148.827 271.353 147.086 cv
271.621 146.115 272.207 144.642 272.287 143.949 cv
272.472 142.348 271.546 141.113 269.473 139.71 cv
268.073 138.76 265.276 137.513 262.542 136.658 cv
258.711 135.459 258.174 136.855 257.072 139.91 cv
256.046 142.755 256.343 147.443 256.803 150.471 cv
257.045 152.075 257.195 153.692 257.25 155.312 cv
257.298 156.708 257.139 158.037 256.908 159.404 cv
260.257 161.778 264.829 161.175 268.653 160.247 cv
268.891 160.204 269.117 160.133 269.334 160.041 cv
269.256 159.151 269.236 158.256 269.268 157.362 cv
.956863 .956863 .956863 rgb
f
265.532 146.014 mo
264.778 148.15 265.909 150.287 265.909 152.423 cv
266.011 155.211 265.907 158.02 265.732 160.832 cv
266.731 160.682 267.714 160.475 268.653 160.247 cv
268.891 160.204 269.118 160.133 269.334 160.041 cv
269.256 159.151 269.236 158.256 269.268 157.362 cv
269.306 156.567 269.374 155.774 269.473 154.985 cv
269.603 153.974 269.778 152.981 270.005 151.994 cv
270.408 150.234 270.873 148.827 271.353 147.086 cv
271.621 146.115 272.207 144.642 272.287 143.949 cv
272.398 142.992 272.108 142.165 271.416 141.355 cv
269.131 142.641 266.534 143.41 265.532 146.014 cv
cp
.831373 .886275 .988235 rgb
f
262.475 157.458 mo
262.058 157.811 261.566 158.235 261.156 158.587 cv
260.564 157.657 260.547 157.579 259.997 156.645 cv
259.98 151.105 260.217 145.913 261.541 140.608 cv
262.053 140.972 262.311 141.154 262.829 141.519 cv
262.157 146.594 261.74 151.874 262.475 157.458 cv
cp
.215686 .25098 .290196 rgb
f
260.991 140.482 mo
260.983 140.56 li
260.988 140.716 261.084 140.912 261.137 141.058 cv
261.252 141.375 261.396 141.68 261.568 141.97 cv
261.662 142.129 261.774 142.292 261.945 142.362 cv
262.136 142.441 262.359 142.382 262.539 142.281 cv
262.746 142.165 263.123 141.994 263.076 141.737 cv
263.036 141.512 262.956 141.286 262.883 141.071 cv
262.732 140.63 262.529 140.084 262.121 139.814 cv
261.665 139.511 261.34 139.965 261.098 140.304 cv
260.991 140.482 li
.156863 .188235 .196078 rgb
f
266.776 138.238 mo
266.875 141.331 261.073 141.383 261.156 138.475 cv
261.273 134.422 261.519 133.957 263.429 133.328 cv
263.952 133.156 264.499 133.023 265.052 133.013 cv
267.068 132.976 266.288 133.999 266.211 134.714 cv
265.987 136.832 266.741 137.125 266.776 138.238 cv
.960784 .654902 .513726 rgb
f
266.776 138.238 mo
266.741 137.125 265.987 136.832 266.211 134.714 cv
266.288 133.999 267.068 132.976 265.052 133.013 cv
264.499 133.023 263.952 133.156 263.429 133.328 cv
261.545 133.948 261.279 134.411 261.162 138.31 cv
262.766 138.156 264.185 136.385 265.821 137.437 cv
266.256 137.763 266.549 138.184 266.753 138.648 cv
266.773 138.518 266.781 138.381 266.776 138.238 cv
.933333 .611765 .462745 rgb
f
265.821 137.437 mo
264.185 136.385 262.766 138.156 261.162 138.31 cv
261.156 138.475 li
261.076 141.249 266.35 141.329 266.753 138.648 cv
266.549 138.184 266.256 137.763 265.821 137.437 cv
.960784 .654902 .513726 rgb
f
262.107 140.145 mo
262.004 140.476 261.567 140.591 261.279 140.783 cv
261.152 140.867 260.931 141.031 260.766 140.997 cv
260.599 140.962 260.499 140.74 260.442 140.601 cv
260.032 139.604 259.798 138.515 259.787 137.435 cv
259.783 137.093 259.838 136.711 260.107 136.47 cv
260.348 136.253 260.763 136.207 261.059 136.336 cv
261.376 136.475 261.453 137.099 261.34 137.388 cv
260.935 138.423 261.396 139.615 262.107 140.145 cv
1 1 1 rgb
f
262.062 140.158 mo
262.062 140.158 262.566 140.955 263.181 141.502 cv
263.333 141.638 263.455 141.804 263.659 141.739 cv
264.655 141.42 266.752 139.659 267.17 138.545 cv
267.32 138.142 267.029 137.643 266.799 137.328 cv
266.377 136.794 li
266.336 136.857 266.119 137.655 265.769 138.171 cv
264.964 139.36 263.491 139.964 262.062 140.158 cv
cp
f
260.524 157.313 mo
260.223 157.272 259.352 157.279 259.053 157.339 cv
258.755 157.398 259.585 157.773 259.407 158.019 cv
259.135 158.393 258.611 158.647 258.669 159.106 cv
258.715 159.473 258.771 159.843 258.909 160.185 cv
259.047 160.528 259.274 160.847 259.595 161.029 cv
259.72 161.1 259.86 161.149 260.003 161.148 cv
260.1 161.146 260.196 161.121 260.29 161.096 cv
260.821 160.957 261.351 160.817 261.882 160.678 cv
261.998 160.647 262.115 160.617 262.221 160.562 cv
262.365 160.487 262.483 160.37 262.58 160.242 cv
262.925 159.784 262.995 159.174 262.864 158.626 cv
262.801 158.362 262.689 158.029 262.497 157.828 cv
262.335 157.66 262.036 157.651 261.82 157.593 cv
261.393 157.477 260.962 157.374 260.524 157.313 cv
cp
1 .74902 .635294 rgb
f
261.741 157.479 mo
261.258 157.12 260.776 156.762 260.293 156.404 cv
260.106 156.265 259.917 156.125 259.699 156.046 cv
259.531 155.984 259.351 155.961 259.177 155.917 cv
259.018 155.876 258.862 155.82 258.7 155.793 cv
258.211 155.713 257.725 155.922 257.274 156.125 cv
257.089 156.208 256.899 156.295 256.759 156.441 cv
256.67 156.533 256.604 156.682 256.679 156.788 cv
256.83 156.888 li
256.993 156.958 257.164 157.027 257.341 157.018 cv
257.555 157.008 257.749 156.886 257.961 156.856 cv
258.327 156.805 258.679 157.039 258.907 157.328 cv
259.136 157.618 259.278 157.966 259.478 158.276 cv
259.678 158.586 259.966 158.873 260.331 158.926 cv
260.461 158.945 260.592 158.933 260.722 158.916 cv
261.022 158.876 261.323 158.803 261.58 158.644 cv
261.799 158.509 261.983 158.302 262.063 158.054 cv
262.151 157.776 261.952 157.635 261.741 157.479 cv
cp
f
261.809 160.417 mo
262.392 160.917 263.305 160.848 264.022 160.751 cv
266.184 160.457 275.022 159.75 273.717 156.015 cv
273.518 155.446 272.559 155.257 271.921 155.158 cv
271.128 155.036 264.927 156.149 262.179 157.553 cv
261.816 157.739 261.443 157.958 261.253 158.313 cv
260.951 158.882 261.357 160.028 261.809 160.417 cv
cp
1 1 1 rgb
f
256.747 151.151 mo
249.064 146.697 li
249.434 146.449 li
257.117 150.903 li
256.747 151.151 li
.215686 .25098 .290196 rgb
f
257.117 150.903 mo
260.366 160.82 li
259.744 160.405 li
256.747 151.151 li
257.117 150.903 li
cp
.141176 .164706 .192157 rgb
f
259.997 161.068 mo
252.313 156.614 li
249.064 146.697 li
256.747 151.151 li
259.997 161.068 li
.0627451 .0980392 .105882 rgb
f
259.577 159.378 mo
259.894 159.187 259.663 158.205 259.533 158.047 cv
259.22 157.663 259.28 158.288 258.148 158.271 cv
257.818 158.266 257.481 158.26 257.173 158.144 cv
256.949 158.059 256.692 157.919 256.489 158.046 cv
256.333 158.144 256.301 158.369 256.377 158.539 cv
256.072 158.396 256.015 158.965 256.239 159.234 cv
256.672 159.755 255.905 159.838 256.81 160.532 cv
256.639 160.643 li
256.736 161.626 259.139 161.317 260.115 161.137 cv
261.841 160.82 260.355 159.491 259.577 159.378 cv
cp
1 .74902 .635294 rgb
f
251.519 153.187 mo
250.982 153.449 250.698 152.803 250.931 152.582 cv
251.164 152.364 252.016 152.272 252.202 152.726 cv
252.355 153.096 251.871 153.016 251.519 153.187 cv
f
250.065 150.156 mo
249.736 150.385 249.982 151.006 250.156 151.015 cv
250.255 151.021 250.361 150.94 250.448 150.904 cv
250.66 150.817 250.896 150.794 251.138 150.839 cv
251.236 150.857 251.336 150.885 251.431 150.879 cv
251.525 150.872 251.616 150.824 251.655 150.717 cv
251.81 150.298 251.147 150.061 250.955 150.008 cv
250.44 149.866 250.213 150.052 250.065 150.156 cv
f
250.27 151.771 mo
250.416 151.912 250.508 151.831 250.685 151.75 cv
250.828 151.685 251.028 151.62 251.356 151.673 cv
251.454 151.688 251.555 151.715 251.648 151.706 cv
251.742 151.697 251.832 151.646 251.871 151.538 cv
252.019 151.113 251.356 150.891 251.164 150.842 cv
250.251 150.612 249.79 151.309 250.27 151.771 cv
f
250.59 152.5 mo
250.887 152.623 250.927 152.478 251.493 152.416 cv
252.365 152.319 252.045 151.529 251.009 151.686 cv
250.586 151.767 li
250.261 151.889 250.277 152.368 250.59 152.5 cv
f
274.148 155.305 mo
274.211 153.038 273.982 150.17 273.811 146.555 cv
273.765 145.582 273.57 144.6 273.22 143.684 cv
272.867 142.76 272.268 142.096 271.507 141.436 cv
271.163 141.138 270.731 140.842 270.273 140.924 cv
269.855 140.998 269.57 141.362 269.358 141.712 cv
268.078 143.823 267.984 146.527 268.431 148.88 cv
268.847 151.069 268.956 153.31 269.392 155.503 cv
269.475 155.92 269.538 156.372 269.706 156.769 cv
270.506 158.65 272.21 159.318 273.26 158.234 cv
273.775 157.703 274.115 156.538 274.148 155.305 cv
cp
1 1 1 rgb
f
259.161 128.52 mo
258.759 129.161 258.524 129.902 258.532 130.689 cv
258.536 131.027 258.591 131.365 258.704 131.685 cv
258.811 131.988 259.003 132.274 259.005 132.604 cv
259.009 132.991 258.73 133.424 258.604 133.789 cv
258.491 134.119 258.426 134.489 258.556 134.812 cv
258.631 134.998 258.764 135.154 258.872 135.323 cv
259.383 136.127 258.9 137.315 259.793 137.893 cv
260.015 138.037 260.278 138.065 260.542 138.079 cv
260.872 138.097 262.361 137.68 262.936 137.426 cv
263.573 137.145 264.192 136.421 264.652 135.899 cv
265.012 135.49 265.615 134.965 265.844 134.474 cv
265.915 134.324 265.745 134.296 265.899 134.221 cv
265.991 134.176 266.104 133.584 266.207 133.573 cv
266.33 133.56 266.496 133.425 266.599 133.355 cv
266.692 133.293 266.762 133.364 266.818 133.435 cv
266.881 133.517 266.925 133.599 266.96 133.476 cv
267.24 132.496 267.594 131.496 267.552 130.462 cv
267.514 129.516 267.535 128.704 266.926 127.9 cv
266.468 127.295 265.814 126.855 265.106 126.585 cv
264.023 126.173 262.797 126.152 261.7 126.525 cv
260.662 126.878 259.739 127.596 259.161 128.52 cv
1 .74902 .635294 rgb
f
267.552 130.462 mo
267.514 129.516 267.535 128.704 266.926 127.9 cv
266.468 127.295 265.814 126.855 265.106 126.585 cv
264.459 126.339 263.762 126.235 263.072 126.268 cv
262.038 128.332 263.534 130.976 262.408 133.116 cv
262.031 133.619 261.277 133.996 261.277 134.625 cv
261.026 135.754 262.151 136.757 261.531 137.886 cv
262.049 137.747 262.625 137.563 262.936 137.426 cv
263.573 137.145 264.192 136.421 264.652 135.899 cv
265.012 135.49 265.615 134.965 265.844 134.474 cv
265.915 134.324 265.745 134.296 265.899 134.221 cv
265.991 134.176 266.104 133.584 266.207 133.573 cv
266.33 133.56 266.496 133.425 266.6 133.355 cv
266.693 133.293 266.763 133.364 266.817 133.435 cv
266.881 133.517 266.925 133.599 266.96 133.476 cv
267.24 132.496 267.594 131.496 267.552 130.462 cv
.972549 .705882 .584314 rgb
f
262.751 129.391 mo
263.018 129.348 263.287 129.356 263.531 129.466 cv
263.946 129.653 264.194 130.103 264.26 130.554 cv
264.407 131.547 264.064 132.538 264.036 133.523 cv
264.032 133.671 264.041 133.826 264.114 133.955 cv
264.312 134.306 264.683 134.115 264.894 133.892 cv
265.029 133.75 265.134 133.582 265.263 133.434 cv
265.393 133.288 265.555 133.156 265.748 133.121 cv
266.056 133.065 266.293 133.308 266.342 133.593 cv
266.386 133.853 266.337 134.115 266.269 134.366 cv
266.253 134.426 266.123 134.88 266.309 134.882 cv
266.496 134.883 268.14 133.191 268.214 130.314 cv
268.285 127.556 266.371 127.041 266.371 127.041 cv
266.371 127.041 265.528 125.612 263.305 125.718 cv
262.137 125.774 260.993 126.154 260.006 126.771 cv
259.887 126.847 li
259.408 127.158 258.954 127.529 258.644 128.009 cv
257.791 129.328 258.94 130.384 260.322 130.163 cv
260.974 130.059 261.574 129.758 262.196 129.539 cv
262.374 129.477 262.562 129.421 262.751 129.391 cv
.788235 .611765 .513726 rgb
f
262.751 129.391 mo
263.018 129.348 263.287 129.356 263.531 129.466 cv
263.946 129.653 264.194 130.103 264.26 130.554 cv
264.407 131.547 264.064 132.538 264.036 133.523 cv
264.032 133.671 264.041 133.826 264.114 133.955 cv
264.312 134.306 264.683 134.115 264.894 133.892 cv
265.029 133.75 265.134 133.582 265.263 133.434 cv
265.393 133.288 265.555 133.156 265.748 133.121 cv
266.056 133.065 266.293 133.308 266.342 133.593 cv
266.386 133.853 266.337 134.115 266.269 134.366 cv
266.253 134.426 266.123 134.88 266.309 134.882 cv
266.496 134.883 268.14 133.191 268.214 130.314 cv
268.285 127.556 266.371 127.041 266.371 127.041 cv
266.371 127.041 265.227 127.475 264.436 127.976 cv
263.648 128.475 262.751 129.391 262.751 129.391 cv
.72549 .54902 .454902 rgb
f
266.04 132.366 mo
266.859 132.311 267.068 133.328 266.505 134.115 cv
266.341 134.344 266.05 134.547 265.836 134.73 cv
264.367 135.98 263.998 134.627 264.465 134.201 cv
265.548 133.212 265.009 132.436 266.04 132.366 cv
.972549 .705882 .584314 rgb
f
265.545 134.308 mo
265.639 134.221 266.573 133.67 265.937 133.294 cv
265.761 133.19 265.565 133.344 265.538 133.532 cv
265.524 133.628 265.554 133.727 265.54 133.824 cv
265.476 133.984 li
265.394 134.12 265.11 134.25 265.166 134.447 cv
265.215 134.622 265.491 134.357 265.545 134.308 cv
cp
.952941 .662745 .517647 rgb
f
60.3842 130.606 mo
36.2594 105.094 42.8996 72.4663 80.3013 50.8716 cv
103.037 37.7446 132.837 31.1812 162.636 31.1812 cv
192.436 31.1812 222.235 37.7446 244.972 50.8716 cv
280.993 71.6699 288.477 102.707 267.428 127.76 cv
266.927 127.191 266.371 127.041 266.371 127.041 cv
266.371 127.041 266.323 126.959 266.219 126.836 cv
266.219 98.2632 li
269.601 96.3002 li
268.904 95.0983 li
266.219 96.6571 li
266.219 88.8811 li
255.623 94.9984 li
250.731 89.2309 244.134 83.8255 235.829 79.0305 cv
215.618 67.3611 189.127 61.5264 162.636 61.5264 cv
136.146 61.5264 109.655 67.3611 89.4436 79.0305 cv
65.1141 93.0778 55.4274 112.376 60.3842 130.606 cv
274.645 108.764 mo
274.645 113.486 li
276.034 113.486 li
276.034 108.764 li
274.645 108.764 li
274.645 99.3196 mo
274.645 104.042 li
276.034 104.042 li
276.034 99.3196 li
274.645 99.3196 li
274.645 93.3723 mo
274.645 94.5974 li
276.034 94.5974 li
276.034 90.9605 li
272.891 92.7839 li
273.588 93.9858 li
274.645 93.3723 li
264.83 111.762 mo
263.876 108.332 262.404 104.943 260.413 101.634 cv
261.452 101.03 li
260.755 99.8289 li
259.678 100.454 li
258.73 98.9788 257.678 97.5209 256.521 96.0844 cv
264.83 91.2873 li
264.83 97.4635 li
264.829 97.4643 li
264.83 97.4667 li
264.83 111.762 li
1 1 1 rgb
f
266.219 126.836 mo
266.121 126.72 265.972 126.566 265.768 126.411 cv
266.491 121.53 266.178 116.607 264.83 111.762 cv
264.83 97.4667 li
265.526 98.6655 li
266.219 98.2632 li
266.219 126.836 li
264.83 97.4635 mo
264.83 91.2873 li
256.521 96.0844 li
256.229 95.7218 255.929 95.3583 255.623 94.9984 cv
266.219 88.8811 li
266.219 96.6571 li
264.83 97.4635 li
.313725 .807843 .960784 rgb
f
260.413 101.634 mo
260.175 101.239 259.93 100.845 259.678 100.454 cv
260.755 99.8289 li
261.452 101.03 li
260.413 101.634 li
265.526 98.6655 mo
264.83 97.4667 li
264.829 97.4643 li
264.83 97.4635 li
266.219 96.6571 li
268.904 95.0983 li
269.601 96.3002 li
266.219 98.2632 li
265.526 98.6655 li
f
276.034 94.5974 mo
274.645 94.5974 li
274.645 93.3723 li
273.588 93.9858 li
272.891 92.7839 li
276.034 90.9605 li
276.034 94.5974 li
f
276.034 113.486 mo
274.645 113.486 li
274.645 108.764 li
276.034 108.764 li
276.034 113.486 li
276.034 104.042 mo
274.645 104.042 li
274.645 99.3196 li
276.034 99.3196 li
276.034 104.042 li
f
267.428 127.76 mo
266.927 127.191 266.371 127.041 266.371 127.041 cv
266.371 127.041 266.042 127.166 265.614 127.359 cv
265.67 127.043 265.721 126.727 265.768 126.411 cv
265.972 126.566 266.121 126.72 266.219 126.836 cv
266.323 126.959 266.371 127.041 266.371 127.041 cv
266.371 127.041 266.927 127.191 267.428 127.76 cv
267.428 127.76 li
.788235 .611765 .513725 rgb
f
264.888 130.606 mo
265.182 129.527 265.424 128.445 265.614 127.359 cv
266.042 127.166 266.371 127.041 266.371 127.041 cv
266.371 127.041 266.927 127.191 267.428 127.76 cv
266.622 128.719 265.778 129.666 264.888 130.606 cv
.72549 .54902 .454902 rgb
f
72.8365 151.043 mo
66.4652 144.643 62.3144 137.705 60.3842 130.606 cv
55.4274 112.376 65.1141 93.0778 89.4436 79.0305 cv
109.655 67.3611 136.146 61.5264 162.636 61.5264 cv
189.127 61.5264 215.618 67.3611 235.829 79.0305 cv
244.134 83.8255 250.731 89.2309 255.623 94.9984 cv
230.48 109.515 li
229.265 108.724 228 107.947 226.687 107.189 cv
209 96.9777 185.818 91.8718 162.636 91.8718 cv
139.454 91.8718 116.273 96.9777 98.586 107.189 cv
77.8633 119.154 69.2798 135.471 72.8365 151.043 cv
82.9963 104.057 mo
82.1729 104.057 81.5053 104.725 81.5053 105.548 cv
81.5053 106.372 82.1729 107.039 82.9963 107.039 cv
83.8198 107.039 84.4879 106.372 84.4879 105.548 cv
84.4879 104.725 83.8198 104.057 82.9963 104.057 cv
82.9963 85.2702 mo
82.1853 85.2702 81.5278 85.9275 81.5278 86.7386 cv
81.5278 87.5495 82.1853 88.207 82.9963 88.207 cv
83.8073 88.207 84.4655 87.5495 84.4655 86.7386 cv
84.4655 85.9275 83.8073 85.2702 82.9963 85.2702 cv
254.038 145.546 mo
253.204 145.064 li
253.566 132.735 246.42 120.342 231.77 110.374 cv
256.521 96.0844 li
257.678 97.5209 258.73 98.9788 259.678 100.454 cv
256.681 102.194 li
257.378 103.395 li
260.413 101.634 li
262.404 104.943 263.876 108.332 264.83 111.762 cv
264.83 125.915 li
264.472 125.793 264.044 125.713 263.539 125.713 cv
263.463 125.713 263.385 125.714 263.305 125.718 cv
262.137 125.774 260.993 126.154 260.006 126.771 cv
259.887 126.847 li
259.408 127.158 258.954 127.529 258.644 128.009 cv
258.213 128.676 258.293 129.276 258.657 129.677 cv
258.573 130.002 258.529 130.341 258.532 130.689 cv
258.536 131.027 258.591 131.365 258.704 131.685 cv
258.811 131.988 259.003 132.274 259.005 132.604 cv
259.009 132.991 258.73 133.424 258.604 133.789 cv
258.491 134.119 258.426 134.489 258.556 134.812 cv
258.631 134.998 258.764 135.154 258.872 135.323 cv
259.085 135.657 259.125 136.059 259.164 136.455 cv
259.149 136.462 259.134 136.47 259.119 136.477 cv
259.096 136.476 259.074 136.475 259.052 136.475 cv
258.702 136.475 258.369 136.676 258.089 136.887 cv
256.12 138.377 255.034 140.856 254.581 143.208 cv
254.43 143.993 254.239 144.77 254.038 145.546 cv
244.46 109.288 mo
240.386 111.652 li
241.083 112.854 li
245.157 110.489 li
244.46 109.288 li
252.607 104.559 mo
248.534 106.923 li
249.231 108.124 li
253.305 105.761 li
252.607 104.559 li
.92792 .928581 .929243 rgb
f
265.768 126.411 mo
265.533 126.231 265.223 126.048 264.83 125.915 cv
264.83 111.762 li
266.178 116.607 266.491 121.53 265.768 126.411 cv
231.77 110.374 mo
231.345 110.085 230.918 109.8 230.48 109.515 cv
255.623 94.9984 li
255.929 95.3583 256.229 95.7218 256.521 96.0844 cv
231.77 110.374 li
.321569 .811765 .960784 rgb
f
241.083 112.854 mo
240.386 111.652 li
244.46 109.288 li
245.157 110.489 li
241.083 112.854 li
249.231 108.124 mo
248.534 106.923 li
252.607 104.559 li
253.305 105.761 li
249.231 108.124 li
257.378 103.395 mo
256.681 102.194 li
259.678 100.454 li
259.93 100.845 260.175 101.239 260.413 101.634 cv
257.378 103.395 li
f
253.248 148.66 mo
252.913 148.466 li
253.074 147.333 253.171 146.2 253.204 145.064 cv
254.038 145.546 li
253.77 146.582 253.483 147.615 253.248 148.66 cv
.941176 .964706 .996078 rgb
f
254.191 149.206 mo
253.248 148.66 li
253.483 147.615 253.77 146.582 254.038 145.546 cv
254.239 144.77 254.43 143.993 254.581 143.208 cv
255.034 140.856 256.12 138.377 258.089 136.887 cv
258.369 136.676 258.702 136.475 259.052 136.475 cv
259.074 136.475 259.096 136.476 259.119 136.477 cv
258.144 136.968 257.7 138.17 257.072 139.91 cv
256.424 141.706 256.304 144.238 256.419 146.622 cv
255.715 147.491 254.971 148.353 254.191 149.206 cv
1 1 1 rgb
f
256.419 146.622 mo
256.304 144.238 256.424 141.706 257.072 139.91 cv
257.7 138.17 258.144 136.968 259.119 136.477 cv
259.134 136.47 259.149 136.462 259.164 136.455 cv
259.22 137.01 259.272 137.556 259.793 137.893 cv
259.797 137.896 259.801 137.899 259.805 137.901 cv
259.869 138.826 260.091 139.747 260.442 140.601 cv
260.462 140.65 260.487 140.71 260.519 140.768 cv
259.339 142.751 257.972 144.705 256.419 146.622 cv
.956863 .956863 .956863 rgb
f
261.191 138.307 mo
261.191 138.307 li
261.46 138.278 261.724 138.204 261.984 138.106 cv
261.984 138.106 li
261.724 138.204 261.46 138.278 261.191 138.307 cv
.960784 .666667 .52549 rgb
f
261.191 138.307 mo
261.186 138.195 261.189 138.082 261.2 137.97 cv
261.504 137.897 261.863 137.797 262.19 137.694 cv
262.122 137.832 262.054 137.969 261.984 138.106 cv
261.724 138.204 261.46 138.278 261.191 138.307 cv
.937255 .619608 .47451 rgb
f
261.402 139.217 mo
261.28 138.936 261.204 138.625 261.191 138.307 cv
261.46 138.278 261.724 138.204 261.984 138.106 cv
261.796 138.478 261.603 138.847 261.402 139.217 cv
.960784 .666667 .52549 rgb
f
260.519 140.768 mo
260.487 140.71 260.462 140.65 260.442 140.601 cv
260.091 139.747 259.869 138.826 259.805 137.901 cv
260.025 138.038 260.283 138.066 260.542 138.079 cv
260.549 138.079 260.557 138.08 260.565 138.08 cv
260.685 138.08 260.919 138.036 261.2 137.97 cv
261.189 138.082 261.186 138.195 261.191 138.307 cv
261.191 138.307 li
261.204 138.625 261.28 138.936 261.402 139.217 cv
261.12 139.735 260.825 140.254 260.519 140.768 cv
1 1 1 rgb
f
253.913 149.508 mo
252.849 148.891 li
252.872 148.75 252.893 148.607 252.913 148.466 cv
253.248 148.66 li
254.191 149.206 li
254.098 149.308 254.007 149.406 253.913 149.508 cv
.219608 .258824 .298039 rgb
f
252.436 151.044 mo
252.6 150.326 252.737 149.611 252.849 148.891 cv
253.913 149.508 li
253.435 150.023 252.942 150.535 252.436 151.044 cv
.0627451 .101961 .109804 rgb
f
260.565 138.08 mo
260.557 138.08 260.549 138.079 260.542 138.079 cv
260.283 138.066 260.025 138.038 259.805 137.901 cv
259.801 137.899 259.797 137.896 259.793 137.893 cv
259.272 137.556 259.22 137.01 259.164 136.455 cv
259.125 136.059 259.085 135.657 258.872 135.323 cv
258.764 135.154 258.631 134.998 258.556 134.812 cv
258.426 134.489 258.491 134.119 258.604 133.789 cv
258.73 133.424 259.009 132.991 259.005 132.604 cv
259.003 132.274 258.811 131.988 258.704 131.685 cv
258.591 131.365 258.536 131.027 258.532 130.689 cv
258.529 130.341 258.573 130.002 258.657 129.677 cv
258.949 129.998 259.421 130.192 259.957 130.192 cv
260.076 130.192 260.198 130.183 260.322 130.163 cv
260.974 130.059 261.574 129.758 262.196 129.539 cv
262.374 129.477 262.562 129.421 262.751 129.391 cv
262.751 129.391 li
262.751 129.391 li
262.751 129.391 262.751 129.391 262.751 129.391 cv
262.861 130.666 263.014 131.964 262.408 133.116 cv
262.031 133.619 261.277 133.996 261.277 134.625 cv
261.026 135.754 262.151 136.757 261.531 137.886 cv
261.748 137.828 261.976 137.761 262.19 137.694 cv
262.19 137.694 li
261.863 137.797 261.504 137.897 261.2 137.97 cv
260.919 138.036 260.685 138.08 260.565 138.08 cv
1 .756863 .647059 rgb
f
261.531 137.886 mo
262.151 136.757 261.026 135.754 261.277 134.625 cv
261.277 133.996 262.031 133.619 262.408 133.116 cv
263.014 131.964 262.861 130.666 262.751 129.391 cv
262.846 129.375 262.942 129.367 263.037 129.367 cv
263.207 129.367 263.374 129.395 263.531 129.466 cv
263.946 129.653 264.194 130.103 264.26 130.554 cv
264.286 130.729 264.297 130.903 264.297 131.078 cv
264.296 131.819 264.101 132.559 264.048 133.296 cv
263.526 134.772 262.907 136.239 262.19 137.694 cv
261.976 137.761 261.748 137.828 261.531 137.886 cv
.972549 .713725 .596078 rgb
f
259.957 130.192 mo
259.421 130.192 258.949 129.998 258.657 129.677 cv
258.293 129.276 258.213 128.676 258.644 128.009 cv
258.954 127.529 259.408 127.158 259.887 126.847 cv
260.006 126.771 li
260.993 126.154 262.137 125.774 263.305 125.718 cv
263.385 125.714 263.463 125.713 263.539 125.713 cv
264.044 125.713 264.472 125.793 264.83 125.915 cv
265.223 126.048 265.533 126.231 265.768 126.411 cv
265.721 126.727 265.67 127.043 265.614 127.359 cv
265.245 127.526 264.803 127.743 264.436 127.976 cv
263.648 128.475 262.751 129.391 262.751 129.391 cv
262.751 129.391 li
262.562 129.421 262.374 129.477 262.196 129.539 cv
261.574 129.758 260.974 130.059 260.322 130.163 cv
260.198 130.183 260.076 130.192 259.957 130.192 cv
.796078 .619608 .52549 rgb
f
264.048 133.296 mo
264.101 132.559 264.296 131.819 264.297 131.078 cv
264.297 130.903 264.286 130.729 264.26 130.554 cv
264.194 130.103 263.946 129.653 263.531 129.466 cv
263.374 129.395 263.207 129.367 263.037 129.367 cv
262.942 129.367 262.846 129.375 262.751 129.391 cv
262.751 129.391 262.751 129.391 262.751 129.391 cv
262.751 129.391 li
262.751 129.391 263.648 128.475 264.436 127.976 cv
264.803 127.743 265.245 127.526 265.614 127.359 cv
265.424 128.445 265.182 129.527 264.888 130.606 cv
264.644 131.505 264.363 132.403 264.048 133.296 cv
.733333 .560784 .466667 rgb
f
83.548 169.693 mo
77.8835 163.849 74.3135 157.51 72.8365 151.043 cv
69.2798 135.471 77.8633 119.154 98.586 107.189 cv
116.273 96.9777 139.454 91.8718 162.636 91.8718 cv
185.818 91.8718 209 96.9777 226.687 107.189 cv
228 107.947 229.265 108.724 230.48 109.515 cv
219.166 116.047 li
218.38 115.277 217.516 114.621 216.583 114.085 cv
202.236 105.748 li
200.217 104.574 197.872 103.963 195.286 103.963 cv
192.422 103.963 189.262 104.713 185.925 106.279 cv
184.399 104.931 182.695 103.851 180.842 103.053 cv
181.314 103.256 181.777 103.478 182.229 103.718 cv
182.229 103.718 li
182.448 103.833 182.663 103.953 182.877 104.077 cv
182.877 104.077 li
182.877 104.077 li
168.477 95.7088 li
165.448 93.9487 161.931 93.0321 158.052 93.0321 cv
152.697 93.0321 146.653 94.7805 140.262 98.4702 cv
140.262 98.4702 li
140.262 98.4702 li
154.663 106.839 li
154.663 106.839 li
154.663 106.839 li
147.123 111.192 140.082 117.68 134.092 125.344 cv
134.092 125.344 li
134.54 124.77 134.994 124.203 135.454 123.643 cv
140.672 117.288 146.617 111.835 152.954 107.867 cv
152.954 107.867 li
152.956 107.866 li
152.956 107.866 li
153.01 107.832 153.062 107.8 153.115 107.766 cv
153.115 107.766 li
153.117 107.766 153.118 107.765 153.119 107.764 cv
153.119 107.764 li
153.158 107.74 153.198 107.715 153.237 107.691 cv
153.237 107.691 li
153.239 107.69 li
153.239 107.69 li
153.251 107.682 153.264 107.674 153.276 107.667 cv
153.276 107.667 li
153.279 107.665 153.28 107.665 153.282 107.663 cv
153.282 107.663 li
153.32 107.64 153.357 107.617 153.395 107.594 cv
153.395 107.594 li
153.397 107.592 153.4 107.591 153.402 107.589 cv
153.402 107.589 li
153.414 107.582 153.425 107.575 153.437 107.568 cv
153.437 107.568 li
153.44 107.566 153.443 107.564 153.447 107.562 cv
153.447 107.562 li
153.483 107.54 153.52 107.517 153.556 107.495 cv
153.556 107.495 li
153.559 107.493 153.562 107.492 153.565 107.49 cv
153.565 107.49 li
153.576 107.483 153.586 107.477 153.597 107.47 cv
153.597 107.47 li
153.602 107.467 153.606 107.465 153.611 107.462 cv
153.611 107.462 li
153.621 107.456 153.634 107.448 153.644 107.442 cv
153.644 107.442 li
153.645 107.441 153.646 107.441 153.647 107.44 cv
153.647 107.44 li
153.669 107.426 153.691 107.413 153.714 107.399 cv
153.714 107.399 li
153.718 107.397 153.724 107.393 153.729 107.39 cv
153.729 107.39 li
153.739 107.384 153.747 107.38 153.757 107.374 cv
153.757 107.374 li
153.764 107.369 153.771 107.365 153.778 107.361 cv
153.778 107.361 li
153.786 107.356 153.795 107.35 153.803 107.346 cv
153.803 107.346 li
153.812 107.34 153.819 107.336 153.828 107.331 cv
153.828 107.331 li
153.842 107.323 153.856 107.314 153.87 107.306 cv
153.87 107.306 li
153.878 107.301 153.885 107.296 153.893 107.292 cv
153.893 107.292 li
153.901 107.287 153.91 107.282 153.918 107.277 cv
153.918 107.277 li
153.925 107.272 153.934 107.267 153.941 107.263 cv
153.941 107.263 li
153.95 107.257 153.957 107.254 153.966 107.248 cv
153.966 107.248 li
153.974 107.243 153.984 107.237 153.992 107.233 cv
153.992 107.233 li
154.004 107.225 154.018 107.217 154.03 107.21 cv
154.03 107.21 li
154.039 107.205 154.047 107.2 154.056 107.194 cv
154.056 107.194 li
154.064 107.189 154.071 107.185 154.079 107.181 cv
154.079 107.181 li
154.088 107.175 154.097 107.17 154.106 107.165 cv
154.106 107.165 li
154.112 107.161 154.12 107.156 154.127 107.152 cv
154.127 107.152 li
154.138 107.145 154.15 107.139 154.161 107.132 cv
154.161 107.132 li
154.17 107.127 154.178 107.122 154.187 107.117 cv
154.187 107.117 li
154.198 107.11 154.21 107.103 154.221 107.097 cv
154.221 107.097 li
154.227 107.093 154.234 107.089 154.24 107.085 cv
154.24 107.085 li
154.25 107.079 154.26 107.074 154.27 107.068 cv
154.27 107.068 li
154.276 107.064 154.283 107.06 154.289 107.056 cv
154.289 107.056 li
154.302 107.049 154.314 107.042 154.326 107.035 cv
154.326 107.035 li
154.333 107.031 154.342 107.026 154.349 107.022 cv
154.349 107.022 li
154.361 107.014 154.371 107.008 154.384 107.001 cv
154.384 107.001 li
154.39 106.998 154.396 106.994 154.402 106.99 cv
154.402 106.99 li
154.413 106.984 154.424 106.977 154.436 106.971 cv
154.436 106.971 li
154.441 106.967 154.445 106.965 154.451 106.962 cv
154.451 106.962 li
154.465 106.953 154.48 106.945 154.495 106.936 cv
154.495 106.936 li
154.498 106.934 154.502 106.932 154.505 106.93 cv
154.505 106.93 li
154.519 106.922 154.535 106.913 154.548 106.905 cv
154.548 106.905 li
154.554 106.902 154.558 106.9 154.563 106.896 cv
154.563 106.896 li
154.575 106.89 154.587 106.882 154.599 106.876 cv
154.599 106.876 li
154.604 106.873 154.608 106.87 154.614 106.867 cv
154.614 106.867 li
154.63 106.858 154.647 106.848 154.663 106.839 cv
154.663 106.839 li
154.663 106.839 li
154.663 106.839 li
140.262 98.4702 li
127.349 105.925 115.898 119.642 108.689 134.803 cv
108.366 134.983 108.047 135.165 107.728 135.348 cv
92.1903 144.32 84.6139 156.149 84.9989 167.905 cv
84.5057 168.489 84.022 169.085 83.548 169.693 cv
82.9963 160.417 mo
82.1359 160.417 81.4378 161.115 81.4378 161.976 cv
81.4378 162.837 82.1359 163.535 82.9963 163.535 cv
83.8572 163.535 84.5551 162.837 84.5551 161.976 cv
84.5551 161.115 83.8572 160.417 82.9963 160.417 cv
82.9963 141.631 mo
82.1483 141.631 81.4603 142.318 81.4603 143.167 cv
81.4603 144.015 82.1483 144.703 82.9963 144.703 cv
83.8447 144.703 84.5327 144.015 84.5327 143.167 cv
84.5327 142.318 83.8447 141.631 82.9963 141.631 cv
82.9963 122.844 mo
82.1606 122.844 81.4828 123.521 81.4828 124.357 cv
81.4828 125.193 82.1606 125.871 82.9963 125.871 cv
83.8323 125.871 84.5103 125.193 84.5103 124.357 cv
84.5103 123.521 83.8323 122.844 82.9963 122.844 cv
253.204 145.064 mo
237.839 136.193 li
227.373 142.275 li
226.173 141.233 224.892 140.214 223.525 139.22 cv
224.071 136.456 224.357 133.721 224.35 131.077 cv
224.333 125.04 222.785 120.299 220.13 117.095 cv
231.77 110.374 li
246.42 120.342 253.566 132.735 253.204 145.064 cv
238.499 124.173 mo
235.187 126.085 li
235.187 129.91 li
238.499 127.998 li
238.499 124.173 li
228.164 118.746 mo
224.091 121.111 li
224.788 122.312 li
228.862 119.948 li
228.164 118.746 li
236.313 114.016 mo
232.239 116.381 li
232.936 117.583 li
237.01 115.218 li
236.313 114.016 li
198.126 115.785 mo
198.147 115.773 198.169 115.761 198.191 115.749 cv
198.169 115.761 198.147 115.773 198.126 115.785 cv
198.195 115.746 mo
199.298 115.127 200.385 114.595 201.451 114.147 cv
201.451 114.147 li
201.454 114.146 201.456 114.146 201.458 114.145 cv
201.458 114.145 li
201.464 114.142 201.47 114.139 201.477 114.137 cv
201.477 114.137 li
201.481 114.135 201.486 114.133 201.491 114.131 cv
201.491 114.131 li
201.496 114.129 201.502 114.126 201.508 114.124 cv
201.508 114.124 li
201.515 114.121 201.523 114.118 201.53 114.114 cv
201.53 114.114 li
201.533 114.113 201.537 114.112 201.54 114.11 cv
201.54 114.11 li
201.547 114.107 201.554 114.104 201.562 114.101 cv
201.562 114.101 li
201.564 114.1 201.565 114.1 201.567 114.099 cv
201.567 114.099 li
203.043 113.488 204.481 113.039 205.868 112.746 cv
207.189 112.468 208.464 112.332 209.686 112.332 cv
211.58 112.332 213.345 112.66 214.948 113.296 cv
213.345 112.66 211.58 112.332 209.686 112.332 cv
206.219 112.332 202.32 113.431 198.195 115.746 cv
215.013 113.322 mo
215.011 113.321 215.008 113.32 215.006 113.32 cv
215.008 113.32 215.01 113.321 215.013 113.322 cv
214.99 113.313 mo
214.986 113.312 214.982 113.31 214.978 113.308 cv
214.982 113.31 214.986 113.312 214.99 113.313 cv
214.968 113.304 mo
214.963 113.302 214.958 113.3 214.953 113.298 cv
214.958 113.3 214.963 113.302 214.968 113.304 cv
159.748 104.275 mo
159.765 104.267 159.781 104.26 159.798 104.253 cv
159.782 104.26 159.765 104.267 159.748 104.275 cv
159.857 104.228 mo
160.233 104.067 160.607 103.914 160.98 103.767 cv
160.98 103.767 li
160.982 103.767 160.984 103.766 160.986 103.765 cv
160.986 103.765 li
160.999 103.76 161.011 103.755 161.023 103.751 cv
161.023 103.751 li
161.027 103.749 161.031 103.747 161.035 103.746 cv
161.035 103.746 li
161.044 103.742 161.055 103.738 161.064 103.734 cv
161.064 103.734 li
161.07 103.732 161.074 103.731 161.08 103.728 cv
161.08 103.728 li
161.092 103.723 161.105 103.719 161.117 103.714 cv
161.117 103.714 li
161.125 103.711 161.135 103.707 161.143 103.704 cv
161.143 103.704 li
161.147 103.702 161.152 103.7 161.157 103.698 cv
161.157 103.698 li
161.166 103.695 161.175 103.691 161.185 103.688 cv
161.185 103.688 li
161.188 103.686 161.191 103.685 161.194 103.684 cv
161.194 103.684 li
163.012 102.981 164.789 102.444 166.515 102.068 cv
166.515 102.068 li
166.521 102.067 166.529 102.065 166.535 102.064 cv
166.535 102.064 li
166.54 102.062 166.545 102.062 166.55 102.06 cv
166.55 102.06 li
166.561 102.058 166.57 102.056 166.581 102.054 cv
166.581 102.054 li
166.583 102.053 166.586 102.053 166.588 102.052 cv
166.588 102.052 li
166.632 102.043 166.676 102.033 166.72 102.024 cv
166.795 102.008 166.871 101.993 166.946 101.977 cv
166.946 101.977 li
166.951 101.976 166.955 101.975 166.96 101.974 cv
166.96 101.974 li
166.969 101.973 166.978 101.971 166.986 101.969 cv
166.986 101.969 li
166.992 101.968 166.997 101.967 167.003 101.966 cv
167.003 101.966 li
167.012 101.964 167.021 101.962 167.03 101.96 cv
167.03 101.96 li
167.042 101.958 167.053 101.956 167.065 101.953 cv
167.065 101.953 li
167.069 101.953 167.072 101.952 167.075 101.951 cv
167.075 101.951 li
167.614 101.844 168.147 101.753 168.675 101.677 cv
165.872 102.079 162.918 102.921 159.857 104.228 cv
180.837 103.051 mo
180.814 103.041 180.791 103.032 180.768 103.022 cv
180.791 103.032 180.814 103.041 180.837 103.051 cv
180.76 103.018 mo
180.738 103.009 180.716 103 180.695 102.991 cv
180.716 103 180.738 103.009 180.76 103.018 cv
180.682 102.985 mo
180.674 102.982 180.666 102.979 180.657 102.975 cv
180.666 102.979 180.674 102.982 180.682 102.985 cv
180.638 102.967 mo
180.632 102.964 180.626 102.962 180.621 102.96 cv
180.626 102.962 180.632 102.964 180.638 102.967 cv
180.604 102.953 mo
180.599 102.951 180.593 102.948 180.589 102.946 cv
180.593 102.948 180.599 102.951 180.604 102.953 cv
180.56 102.935 mo
180.556 102.933 180.552 102.931 180.547 102.929 cv
180.552 102.931 180.556 102.933 180.56 102.935 cv
180.524 102.92 mo
180.52 102.918 180.518 102.917 180.514 102.916 cv
180.517 102.917 180.521 102.919 180.524 102.92 cv
180.483 102.903 mo
180.48 102.902 180.475 102.9 180.472 102.899 cv
180.475 102.9 180.479 102.902 180.483 102.903 cv
180.446 102.888 mo
180.444 102.887 180.44 102.886 180.438 102.885 cv
180.44 102.886 180.444 102.887 180.446 102.888 cv
180.407 102.872 mo
180.403 102.871 180.4 102.87 180.396 102.868 cv
180.4 102.87 180.403 102.871 180.407 102.872 cv
180.365 102.856 mo
180.364 102.855 180.363 102.855 180.363 102.855 cv
180.364 102.855 180.364 102.855 180.365 102.856 cv
180.328 102.841 mo
180.326 102.84 180.324 102.839 180.321 102.838 cv
180.324 102.839 180.326 102.84 180.328 102.841 cv
180.25 102.81 mo
180.249 102.81 180.247 102.809 180.245 102.808 cv
180.247 102.809 180.249 102.81 180.25 102.81 cv
180.172 102.78 mo
180.171 102.78 180.17 102.779 180.169 102.779 cv
180.17 102.779 180.171 102.779 180.172 102.78 cv
180.093 102.75 mo
180.093 102.75 li
180.093 102.75 li
168.678 101.677 mo
168.681 101.676 168.683 101.676 168.686 101.676 cv
168.683 101.676 168.681 101.676 168.678 101.677 cv
.881046 .884967 .887582 rgb
f
220.13 117.095 mo
219.823 116.725 219.502 116.376 219.166 116.047 cv
230.48 109.515 li
230.918 109.8 231.345 110.085 231.77 110.374 cv
220.13 117.095 li
.341176 .827451 .964706 rgb
f
224.788 122.312 mo
224.091 121.111 li
228.164 118.746 li
228.862 119.948 li
224.788 122.312 li
232.936 117.583 mo
232.239 116.381 li
236.313 114.016 li
237.01 115.218 li
232.936 117.583 li
f
197.85 115.943 mo
197.855 115.94 197.859 115.937 197.864 115.934 cv
197.86 115.937 197.854 115.94 197.85 115.943 cv
197.877 115.927 mo
197.883 115.924 197.889 115.92 197.895 115.917 cv
197.889 115.92 197.882 115.924 197.877 115.927 cv
197.901 115.913 mo
199.104 115.222 200.29 114.635 201.451 114.147 cv
200.385 114.595 199.298 115.127 198.195 115.746 cv
198.194 115.747 198.192 115.748 198.191 115.749 cv
198.169 115.761 198.147 115.773 198.126 115.785 cv
198.051 115.827 197.975 115.87 197.901 115.913 cv
201.458 114.145 mo
201.464 114.142 201.47 114.139 201.477 114.137 cv
201.47 114.139 201.464 114.142 201.458 114.145 cv
201.491 114.131 mo
201.496 114.129 201.502 114.126 201.508 114.124 cv
201.502 114.126 201.496 114.129 201.491 114.131 cv
201.53 114.114 mo
201.534 114.113 201.537 114.112 201.54 114.11 cv
201.537 114.112 201.533 114.113 201.53 114.114 cv
201.562 114.101 mo
201.564 114.101 201.566 114.1 201.567 114.099 cv
201.565 114.1 201.564 114.1 201.562 114.101 cv
.823529 .878431 .988235 rgb
f
193.224 119.075 mo
193.224 119.075 li
191.835 113.588 189.314 109.272 185.925 106.279 cv
187.838 105.381 189.694 104.751 191.468 104.378 cv
205.868 112.746 li
204.481 113.039 203.043 113.488 201.567 114.099 cv
201.567 114.099 li
201.566 114.1 201.564 114.101 201.562 114.101 cv
201.562 114.101 li
201.554 114.104 201.547 114.107 201.54 114.11 cv
201.54 114.11 li
201.537 114.112 201.534 114.113 201.53 114.114 cv
201.53 114.114 li
201.523 114.118 201.515 114.121 201.508 114.124 cv
201.508 114.124 li
201.502 114.126 201.496 114.129 201.491 114.131 cv
201.491 114.131 li
201.486 114.133 201.481 114.135 201.477 114.137 cv
201.477 114.137 li
201.47 114.139 201.464 114.142 201.458 114.145 cv
201.458 114.145 li
201.456 114.146 201.454 114.146 201.451 114.147 cv
201.451 114.147 li
200.29 114.635 199.104 115.222 197.901 115.913 cv
197.898 115.915 197.897 115.915 197.895 115.917 cv
197.889 115.92 197.883 115.924 197.877 115.927 cv
197.872 115.93 197.868 115.932 197.864 115.934 cv
197.859 115.937 197.855 115.94 197.85 115.943 cv
197.84 115.948 197.831 115.953 197.821 115.959 cv
197.821 115.959 li
196.252 116.865 194.717 117.909 193.224 119.075 cv
f
216.167 113.857 mo
215.793 113.66 215.408 113.482 215.013 113.322 cv
215.01 113.321 215.008 113.32 215.006 113.32 cv
215 113.317 214.996 113.315 214.99 113.313 cv
214.986 113.312 214.982 113.31 214.978 113.308 cv
214.975 113.307 214.971 113.305 214.968 113.304 cv
214.963 113.302 214.958 113.3 214.953 113.298 cv
214.951 113.298 214.949 113.297 214.948 113.296 cv
213.345 112.66 211.58 112.332 209.686 112.332 cv
208.464 112.332 207.189 112.468 205.868 112.746 cv
191.468 104.378 li
192.788 104.1 194.064 103.963 195.286 103.963 cv
197.677 103.963 199.862 104.486 201.774 105.492 cv
216.167 113.857 li
f
216.583 114.085 mo
216.446 114.006 216.308 113.93 216.167 113.857 cv
201.774 105.492 li
201.93 105.574 202.084 105.659 202.236 105.748 cv
202.236 105.748 li
216.583 114.085 li
f
182.877 104.077 mo
182.877 104.077 li
168.477 95.7088 li
168.477 95.7088 li
168.468 95.7039 168.46 95.699 168.452 95.6941 cv
168.246 95.5752 168.039 95.4604 167.829 95.3492 cv
167.811 95.3396 167.794 95.3305 167.776 95.321 cv
164.91 93.8144 161.635 93.0321 158.052 93.0321 cv
156.218 93.0321 154.302 93.2374 152.32 93.6555 cv
151.512 93.8258 150.693 94.0315 149.864 94.273 cv
149.86 94.2743 149.856 94.2756 149.851 94.2769 cv
149.843 94.2792 149.835 94.2815 149.827 94.2839 cv
146.778 95.1763 143.591 96.5535 140.311 98.4418 cv
140.311 98.4419 li
140.295 98.4513 140.279 98.4608 140.262 98.4702 cv
140.262 98.4702 li
146.653 94.7805 152.697 93.0321 158.052 93.0321 cv
161.931 93.0321 165.448 93.9487 168.477 95.7088 cv
182.877 104.077 li
160.98 103.767 mo
160.982 103.767 160.984 103.766 160.986 103.765 cv
160.984 103.766 160.982 103.767 160.98 103.767 cv
161.023 103.751 mo
161.027 103.749 161.031 103.748 161.035 103.746 cv
161.031 103.747 161.027 103.749 161.023 103.751 cv
161.064 103.734 mo
161.07 103.732 161.075 103.73 161.08 103.728 cv
161.074 103.731 161.07 103.732 161.064 103.734 cv
182.229 103.718 mo
181.777 103.478 181.314 103.256 180.842 103.053 cv
180.84 103.052 180.838 103.052 180.837 103.051 cv
180.814 103.041 180.791 103.032 180.768 103.022 cv
180.765 103.02 180.763 103.02 180.76 103.018 cv
180.738 103.009 180.716 103 180.695 102.991 cv
180.691 102.989 180.686 102.987 180.682 102.985 cv
180.674 102.982 180.666 102.979 180.657 102.975 cv
180.651 102.972 180.644 102.969 180.638 102.967 cv
180.632 102.964 180.626 102.962 180.621 102.96 cv
180.615 102.957 180.61 102.955 180.604 102.953 cv
180.599 102.951 180.593 102.948 180.589 102.946 cv
180.579 102.943 180.57 102.939 180.56 102.935 cv
180.556 102.933 180.552 102.931 180.547 102.929 cv
180.54 102.926 180.532 102.923 180.524 102.92 cv
180.521 102.919 180.517 102.917 180.514 102.916 cv
180.503 102.911 180.494 102.907 180.483 102.903 cv
180.479 102.902 180.475 102.9 180.472 102.899 cv
180.463 102.895 180.455 102.892 180.446 102.888 cv
180.444 102.887 180.44 102.886 180.438 102.885 cv
180.428 102.881 180.417 102.876 180.407 102.872 cv
180.403 102.871 180.4 102.87 180.396 102.868 cv
180.385 102.864 180.375 102.86 180.365 102.856 cv
180.364 102.855 180.364 102.855 180.363 102.855 cv
180.351 102.85 180.339 102.845 180.328 102.841 cv
180.326 102.84 180.324 102.839 180.321 102.838 cv
180.31 102.834 180.299 102.829 180.287 102.825 cv
180.934 103.08 181.564 103.368 182.175 103.689 cv
182.175 103.689 li
182.193 103.698 182.211 103.708 182.229 103.718 cv
161.117 103.714 mo
161.126 103.711 161.134 103.707 161.143 103.704 cv
161.135 103.707 161.125 103.711 161.117 103.714 cv
161.157 103.698 mo
161.166 103.695 161.176 103.691 161.185 103.688 cv
161.175 103.691 161.166 103.695 161.157 103.698 cv
161.194 103.684 mo
163.012 102.981 164.788 102.444 166.515 102.068 cv
164.789 102.444 163.012 102.981 161.194 103.684 cv
180.286 102.824 mo
180.278 102.821 180.27 102.818 180.262 102.815 cv
180.27 102.818 180.278 102.821 180.286 102.824 cv
180.259 102.814 mo
180.257 102.813 180.253 102.811 180.25 102.81 cv
180.249 102.81 180.247 102.809 180.245 102.808 cv
180.235 102.804 180.226 102.801 180.215 102.797 cv
180.23 102.802 180.245 102.808 180.259 102.814 cv
180.209 102.794 mo
180.203 102.792 180.196 102.789 180.19 102.787 cv
180.196 102.789 180.203 102.792 180.209 102.794 cv
180.178 102.782 mo
180.176 102.781 180.174 102.781 180.172 102.78 cv
180.171 102.779 180.17 102.779 180.169 102.779 cv
180.166 102.778 180.163 102.777 180.16 102.775 cv
180.166 102.778 180.172 102.78 180.178 102.782 cv
180.134 102.765 mo
180.128 102.763 180.124 102.762 180.118 102.759 cv
180.124 102.761 180.129 102.763 180.134 102.765 cv
180.102 102.753 mo
180.1 102.752 180.096 102.751 180.093 102.75 cv
180.093 102.75 li
180.091 102.749 180.089 102.748 180.088 102.748 cv
180.093 102.749 180.097 102.751 180.102 102.753 cv
180.064 102.739 mo
180.06 102.737 180.057 102.736 180.053 102.734 cv
180.057 102.736 180.061 102.737 180.064 102.739 cv
180.026 102.724 mo
180.023 102.723 180.02 102.722 180.017 102.721 cv
180.02 102.722 180.023 102.723 180.026 102.724 cv
179.99 102.711 mo
179.988 102.71 179.987 102.709 179.985 102.709 cv
179.987 102.709 179.988 102.71 179.99 102.711 cv
179.951 102.696 mo
179.95 102.696 179.949 102.695 179.948 102.695 cv
179.949 102.696 179.95 102.696 179.951 102.696 cv
179.917 102.684 mo
179.916 102.683 179.914 102.682 179.912 102.682 cv
179.914 102.682 179.916 102.683 179.917 102.684 cv
179.844 102.656 mo
179.843 102.656 179.842 102.656 179.841 102.656 cv
179.842 102.656 179.843 102.656 179.844 102.656 cv
166.535 102.064 mo
166.54 102.063 166.545 102.061 166.55 102.06 cv
166.545 102.062 166.54 102.062 166.535 102.064 cv
166.581 102.054 mo
166.584 102.053 166.586 102.053 166.588 102.052 cv
166.586 102.053 166.583 102.053 166.581 102.054 cv
166.946 101.977 mo
166.951 101.976 166.955 101.975 166.96 101.974 cv
166.955 101.975 166.951 101.976 166.946 101.977 cv
166.986 101.969 mo
166.992 101.968 166.997 101.967 167.003 101.966 cv
166.997 101.967 166.992 101.968 166.986 101.969 cv
167.03 101.96 mo
167.042 101.958 167.054 101.956 167.065 101.953 cv
167.053 101.956 167.042 101.958 167.03 101.96 cv
167.075 101.951 mo
168.931 101.582 170.728 101.401 172.453 101.401 cv
173.787 101.401 175.079 101.509 176.322 101.723 cv
175.078 101.509 173.787 101.401 172.453 101.401 cv
171.232 101.401 169.974 101.492 168.686 101.676 cv
168.683 101.676 168.681 101.676 168.678 101.677 cv
168.677 101.677 168.676 101.677 168.675 101.677 cv
168.147 101.753 167.614 101.844 167.075 101.951 cv
176.892 101.829 mo
176.891 101.829 176.891 101.829 176.891 101.829 cv
176.891 101.829 176.892 101.829 176.892 101.829 cv
176.815 101.814 mo
176.814 101.814 176.812 101.814 176.812 101.813 cv
176.813 101.814 176.814 101.814 176.815 101.814 cv
176.779 101.807 mo
176.777 101.807 176.775 101.806 176.773 101.806 cv
176.775 101.806 176.777 101.807 176.779 101.807 cv
176.737 101.799 mo
176.736 101.799 li
176.736 101.799 176.737 101.799 176.737 101.799 cv
176.703 101.792 mo
176.7 101.792 176.695 101.791 176.693 101.79 cv
176.696 101.791 176.699 101.792 176.703 101.792 cv
176.664 101.785 mo
176.662 101.784 176.66 101.784 176.657 101.784 cv
176.66 101.784 176.662 101.785 176.664 101.785 cv
176.624 101.778 mo
176.62 101.777 176.615 101.776 176.611 101.775 cv
176.616 101.776 176.62 101.777 176.624 101.778 cv
176.59 101.771 mo
176.585 101.77 176.581 101.769 176.576 101.768 cv
176.581 101.769 176.586 101.77 176.59 101.771 cv
176.55 101.764 mo
176.543 101.762 176.536 101.761 176.53 101.76 cv
176.536 101.761 176.543 101.762 176.55 101.764 cv
176.512 101.757 mo
176.506 101.756 176.5 101.755 176.494 101.753 cv
176.5 101.755 176.506 101.756 176.512 101.757 cv
176.48 101.751 mo
176.466 101.748 176.451 101.746 176.437 101.743 cv
176.451 101.746 176.466 101.748 176.48 101.751 cv
176.433 101.743 mo
176.426 101.741 176.418 101.74 176.41 101.739 cv
176.418 101.74 176.426 101.741 176.433 101.743 cv
176.402 101.737 mo
176.375 101.732 176.349 101.728 176.323 101.723 cv
176.349 101.728 176.375 101.732 176.402 101.737 cv
f
154.663 106.839 mo
140.262 98.4702 li
140.262 98.4702 li
140.279 98.4608 140.295 98.4513 140.311 98.4419 cv
140.311 98.4418 li
143.591 96.5535 146.778 95.1763 149.827 94.2839 cv
149.835 94.2815 149.843 94.2792 149.851 94.2769 cv
149.856 94.2756 149.86 94.2743 149.864 94.273 cv
150.693 94.0315 151.512 93.8258 152.32 93.6555 cv
166.72 102.024 li
166.676 102.033 166.632 102.043 166.588 102.052 cv
166.588 102.052 li
166.586 102.053 166.584 102.053 166.581 102.054 cv
166.581 102.054 li
166.57 102.056 166.561 102.058 166.55 102.06 cv
166.55 102.06 li
166.545 102.061 166.54 102.063 166.535 102.064 cv
166.535 102.064 li
166.529 102.065 166.521 102.067 166.515 102.068 cv
166.515 102.068 li
164.788 102.444 163.012 102.981 161.194 103.684 cv
161.194 103.684 li
161.191 103.685 161.188 103.686 161.185 103.688 cv
161.185 103.688 li
161.176 103.691 161.166 103.695 161.157 103.698 cv
161.157 103.698 li
161.152 103.7 161.147 103.702 161.143 103.704 cv
161.143 103.704 li
161.134 103.707 161.126 103.711 161.117 103.714 cv
161.117 103.714 li
161.105 103.719 161.092 103.723 161.08 103.728 cv
161.08 103.728 li
161.075 103.73 161.07 103.732 161.064 103.734 cv
161.064 103.734 li
161.055 103.738 161.044 103.742 161.035 103.746 cv
161.035 103.746 li
161.031 103.748 161.027 103.749 161.023 103.751 cv
161.023 103.751 li
161.011 103.755 160.999 103.76 160.986 103.765 cv
160.986 103.765 li
160.984 103.766 160.982 103.767 160.98 103.767 cv
160.98 103.767 li
160.607 103.914 160.233 104.067 159.857 104.228 cv
159.837 104.236 159.818 104.245 159.798 104.253 cv
159.781 104.26 159.765 104.267 159.748 104.275 cv
158.083 104.991 156.386 105.844 154.663 106.839 cv
154.663 106.839 li
f
182.175 103.689 mo
181.564 103.368 180.934 103.08 180.287 102.825 cv
180.287 102.825 180.287 102.825 180.286 102.824 cv
180.278 102.821 180.27 102.818 180.262 102.815 cv
180.261 102.814 180.26 102.814 180.259 102.814 cv
180.245 102.808 180.23 102.802 180.215 102.797 cv
180.214 102.796 180.211 102.795 180.209 102.794 cv
180.203 102.792 180.196 102.789 180.19 102.787 cv
180.186 102.785 180.182 102.784 180.178 102.782 cv
180.172 102.78 180.166 102.778 180.16 102.775 cv
180.152 102.772 180.142 102.768 180.134 102.765 cv
180.129 102.763 180.124 102.761 180.118 102.759 cv
180.113 102.757 180.108 102.755 180.102 102.753 cv
180.097 102.751 180.093 102.749 180.088 102.748 cv
180.08 102.745 180.072 102.742 180.064 102.739 cv
180.061 102.737 180.057 102.736 180.053 102.734 cv
180.044 102.731 180.035 102.728 180.026 102.724 cv
180.023 102.723 180.02 102.722 180.017 102.721 cv
180.008 102.717 179.999 102.714 179.99 102.711 cv
179.988 102.71 179.987 102.709 179.985 102.709 cv
179.974 102.705 179.963 102.7 179.951 102.696 cv
179.95 102.696 179.949 102.696 179.948 102.695 cv
179.939 102.691 179.927 102.687 179.917 102.684 cv
179.916 102.683 179.914 102.682 179.912 102.682 cv
179.889 102.673 179.867 102.665 179.844 102.656 cv
179.843 102.656 179.842 102.656 179.841 102.656 cv
178.894 102.31 177.909 102.033 176.892 101.829 cv
176.892 101.829 176.891 101.829 176.891 101.829 cv
176.865 101.824 176.841 101.819 176.815 101.814 cv
176.814 101.814 176.813 101.814 176.812 101.813 cv
176.801 101.811 176.79 101.809 176.779 101.807 cv
176.777 101.807 176.775 101.806 176.773 101.806 cv
176.76 101.803 176.749 101.801 176.737 101.799 cv
176.737 101.799 176.736 101.799 176.736 101.799 cv
176.724 101.796 176.714 101.794 176.703 101.792 cv
176.699 101.792 176.696 101.791 176.693 101.79 cv
176.683 101.789 176.674 101.787 176.664 101.785 cv
176.662 101.785 176.66 101.784 176.657 101.784 cv
176.647 101.782 176.635 101.779 176.624 101.778 cv
176.62 101.777 176.616 101.776 176.611 101.775 cv
176.604 101.774 176.597 101.772 176.59 101.771 cv
176.586 101.77 176.581 101.769 176.576 101.768 cv
176.567 101.767 176.558 101.765 176.55 101.764 cv
176.543 101.762 176.536 101.761 176.53 101.76 cv
176.524 101.759 176.518 101.758 176.512 101.757 cv
176.506 101.756 176.5 101.755 176.494 101.753 cv
176.489 101.753 176.485 101.752 176.48 101.751 cv
176.466 101.748 176.451 101.746 176.437 101.743 cv
176.436 101.743 176.434 101.743 176.433 101.743 cv
176.426 101.741 176.418 101.74 176.41 101.739 cv
176.408 101.738 176.405 101.738 176.402 101.737 cv
176.375 101.732 176.349 101.728 176.323 101.723 cv
176.322 101.723 li
175.079 101.509 173.787 101.401 172.453 101.401 cv
170.728 101.401 168.931 101.582 167.075 101.951 cv
167.075 101.951 li
167.072 101.952 167.069 101.953 167.065 101.953 cv
167.065 101.953 li
167.054 101.956 167.042 101.958 167.03 101.96 cv
167.03 101.96 li
167.021 101.962 167.012 101.964 167.003 101.966 cv
167.003 101.966 li
166.997 101.967 166.992 101.968 166.986 101.969 cv
166.986 101.969 li
166.978 101.971 166.969 101.973 166.96 101.974 cv
166.96 101.974 li
166.955 101.975 166.951 101.976 166.946 101.977 cv
166.946 101.977 li
166.871 101.993 166.795 102.008 166.72 102.024 cv
152.319 93.6553 li
154.302 93.2374 156.218 93.0321 158.052 93.0321 cv
161.635 93.0321 164.91 93.8144 167.776 95.321 cv
182.175 103.689 li
f
182.877 104.077 mo
182.663 103.953 182.448 103.833 182.229 103.718 cv
182.229 103.718 li
182.211 103.708 182.193 103.698 182.175 103.689 cv
182.175 103.689 li
167.776 95.321 li
167.794 95.3305 167.811 95.3396 167.829 95.3492 cv
168.039 95.4604 168.246 95.5752 168.452 95.6941 cv
168.46 95.699 168.468 95.7039 168.477 95.7088 cv
168.477 95.7088 li
182.877 104.077 li
f
108.689 134.803 mo
115.898 119.642 127.349 105.925 140.262 98.4702 cv
154.663 106.839 li
154.663 106.839 li
140.262 98.4702 li
140.262 98.4702 li
140.247 98.4787 140.232 98.4877 140.217 98.4962 cv
140.207 98.5021 140.197 98.5081 140.186 98.5141 cv
140.183 98.516 140.179 98.518 140.176 98.52 cv
133.438 102.427 127.1 108.037 121.558 114.666 cv
121.556 114.668 121.556 114.668 121.554 114.67 cv
121.512 114.721 121.468 114.773 121.426 114.824 cv
121.424 114.826 121.42 114.831 121.418 114.833 cv
121.409 114.845 121.399 114.857 121.389 114.869 cv
121.388 114.87 121.386 114.872 121.385 114.874 cv
121.354 114.91 121.324 114.946 121.294 114.983 cv
121.29 114.987 121.286 114.992 121.283 114.997 cv
121.274 115.007 121.265 115.017 121.257 115.028 cv
121.253 115.032 121.25 115.036 121.246 115.041 cv
121.219 115.074 121.191 115.107 121.164 115.141 cv
121.158 115.147 121.153 115.154 121.147 115.16 cv
121.14 115.17 121.133 115.178 121.125 115.187 cv
121.119 115.194 121.114 115.201 121.108 115.208 cv
121.09 115.23 121.072 115.252 121.054 115.274 cv
121.054 115.274 li
116.215 121.167 112.004 127.832 108.689 134.803 cv
108.689 134.803 li
152.954 107.867 mo
152.955 107.866 152.955 107.866 152.956 107.866 cv
152.954 107.867 li
153.115 107.766 mo
153.117 107.766 153.118 107.765 153.119 107.764 cv
153.118 107.765 153.117 107.766 153.115 107.766 cv
153.237 107.691 mo
153.238 107.69 153.238 107.69 153.239 107.69 cv
153.237 107.691 li
153.276 107.667 mo
153.279 107.665 153.28 107.664 153.282 107.663 cv
153.28 107.665 153.279 107.665 153.276 107.667 cv
153.395 107.594 mo
153.397 107.592 153.4 107.59 153.402 107.589 cv
153.4 107.591 153.397 107.592 153.395 107.594 cv
153.437 107.568 mo
153.44 107.566 153.443 107.564 153.447 107.562 cv
153.443 107.564 153.44 107.566 153.437 107.568 cv
153.556 107.495 mo
153.559 107.493 153.562 107.492 153.565 107.49 cv
153.562 107.492 153.559 107.493 153.556 107.495 cv
153.597 107.47 mo
153.602 107.467 153.606 107.465 153.611 107.462 cv
153.606 107.465 153.602 107.467 153.597 107.47 cv
153.644 107.442 mo
153.645 107.441 153.646 107.441 153.647 107.44 cv
153.646 107.441 153.645 107.441 153.644 107.442 cv
153.714 107.399 mo
153.719 107.396 153.724 107.394 153.729 107.39 cv
153.724 107.393 153.718 107.397 153.714 107.399 cv
153.757 107.374 mo
153.764 107.369 153.771 107.365 153.778 107.361 cv
153.771 107.365 153.764 107.369 153.757 107.374 cv
153.803 107.346 mo
153.811 107.341 153.82 107.336 153.828 107.331 cv
153.819 107.336 153.812 107.34 153.803 107.346 cv
153.87 107.306 mo
153.877 107.301 153.886 107.296 153.893 107.292 cv
153.885 107.296 153.878 107.301 153.87 107.306 cv
153.918 107.277 mo
153.926 107.272 153.933 107.267 153.941 107.263 cv
153.934 107.267 153.925 107.272 153.918 107.277 cv
153.966 107.248 mo
153.975 107.243 153.983 107.238 153.992 107.233 cv
153.984 107.237 153.974 107.243 153.966 107.248 cv
154.03 107.21 mo
154.038 107.205 154.048 107.199 154.056 107.194 cv
154.047 107.2 154.039 107.205 154.03 107.21 cv
154.079 107.181 mo
154.088 107.175 154.097 107.17 154.106 107.165 cv
154.097 107.17 154.088 107.175 154.079 107.181 cv
154.127 107.152 mo
154.139 107.145 154.15 107.139 154.161 107.132 cv
154.15 107.139 154.138 107.145 154.127 107.152 cv
154.187 107.117 mo
154.199 107.11 154.21 107.103 154.221 107.097 cv
154.21 107.103 154.198 107.11 154.187 107.117 cv
154.24 107.085 mo
154.25 107.08 154.26 107.074 154.27 107.068 cv
154.26 107.074 154.25 107.079 154.24 107.085 cv
154.289 107.056 mo
154.302 107.049 154.314 107.042 154.326 107.035 cv
154.314 107.042 154.302 107.049 154.289 107.056 cv
154.349 107.022 mo
154.36 107.015 154.372 107.008 154.384 107.001 cv
154.371 107.008 154.361 107.014 154.349 107.022 cv
154.402 106.99 mo
154.413 106.984 154.425 106.977 154.436 106.971 cv
154.424 106.977 154.413 106.984 154.402 106.99 cv
154.451 106.962 mo
154.465 106.953 154.48 106.945 154.495 106.936 cv
154.48 106.945 154.465 106.953 154.451 106.962 cv
154.505 106.93 mo
154.52 106.922 154.534 106.913 154.548 106.905 cv
154.535 106.913 154.519 106.922 154.505 106.93 cv
154.563 106.896 mo
154.575 106.89 154.587 106.883 154.599 106.876 cv
154.587 106.882 154.575 106.89 154.563 106.896 cv
154.614 106.867 mo
154.63 106.858 154.646 106.848 154.663 106.839 cv
154.647 106.848 154.63 106.858 154.614 106.867 cv
f
108.689 134.803 mo
112.004 127.832 116.215 121.167 121.054 115.274 cv
121.054 115.274 li
121.054 115.274 li
135.454 123.643 li
134.994 124.203 134.54 124.77 134.092 125.344 cv
124.883 127.441 116.231 130.594 108.689 134.803 cv
f
135.454 123.643 mo
121.054 115.274 li
121.054 115.274 li
121.072 115.252 121.09 115.23 121.108 115.208 cv
121.114 115.201 121.119 115.194 121.125 115.187 cv
121.133 115.178 121.14 115.17 121.147 115.16 cv
121.153 115.154 121.158 115.147 121.164 115.141 cv
121.191 115.107 121.219 115.074 121.246 115.041 cv
121.25 115.036 121.253 115.032 121.257 115.028 cv
121.265 115.017 121.274 115.007 121.283 114.997 cv
121.286 114.992 121.29 114.987 121.294 114.983 cv
121.324 114.946 121.354 114.91 121.385 114.874 cv
121.386 114.872 121.388 114.87 121.389 114.869 cv
121.399 114.857 121.409 114.845 121.418 114.833 cv
121.42 114.831 121.424 114.826 121.426 114.824 cv
121.468 114.773 121.512 114.721 121.554 114.67 cv
121.556 114.668 121.556 114.668 121.558 114.666 cv
127.1 108.037 133.438 102.427 140.176 98.52 cv
140.179 98.518 140.183 98.516 140.186 98.5141 cv
140.197 98.5081 140.207 98.5021 140.217 98.4962 cv
140.232 98.4877 140.247 98.4787 140.262 98.4702 cv
140.262 98.4702 li
154.663 106.839 li
154.663 106.839 li
154.663 106.839 li
154.646 106.848 154.63 106.858 154.614 106.867 cv
154.614 106.867 li
154.608 106.87 154.604 106.873 154.599 106.876 cv
154.599 106.876 li
154.587 106.883 154.575 106.89 154.563 106.896 cv
154.563 106.896 li
154.558 106.9 154.554 106.902 154.548 106.905 cv
154.548 106.905 li
154.534 106.913 154.52 106.922 154.505 106.93 cv
154.505 106.93 li
154.502 106.932 154.498 106.934 154.495 106.936 cv
154.495 106.936 li
154.48 106.945 154.465 106.953 154.451 106.962 cv
154.451 106.962 li
154.445 106.965 154.441 106.967 154.436 106.971 cv
154.436 106.971 li
154.425 106.977 154.413 106.984 154.402 106.99 cv
154.402 106.99 li
154.396 106.994 154.39 106.998 154.384 107.001 cv
154.384 107.001 li
154.372 107.008 154.36 107.015 154.349 107.022 cv
154.349 107.022 li
154.342 107.026 154.333 107.031 154.326 107.035 cv
154.326 107.035 li
154.314 107.042 154.302 107.049 154.289 107.056 cv
154.289 107.056 li
154.283 107.06 154.276 107.064 154.27 107.068 cv
154.27 107.068 li
154.26 107.074 154.25 107.08 154.24 107.085 cv
154.24 107.085 li
154.234 107.089 154.227 107.093 154.221 107.097 cv
154.221 107.097 li
154.21 107.103 154.199 107.11 154.187 107.117 cv
154.187 107.117 li
154.178 107.122 154.17 107.127 154.161 107.132 cv
154.161 107.132 li
154.15 107.139 154.139 107.145 154.127 107.152 cv
154.127 107.152 li
154.12 107.156 154.112 107.161 154.106 107.165 cv
154.106 107.165 li
154.097 107.17 154.088 107.175 154.079 107.181 cv
154.079 107.181 li
154.071 107.185 154.064 107.189 154.056 107.194 cv
154.056 107.194 li
154.048 107.199 154.038 107.205 154.03 107.21 cv
154.03 107.21 li
154.018 107.217 154.004 107.225 153.992 107.233 cv
153.992 107.233 li
153.983 107.238 153.975 107.243 153.966 107.248 cv
153.966 107.248 li
153.957 107.254 153.95 107.257 153.941 107.263 cv
153.941 107.263 li
153.933 107.267 153.926 107.272 153.918 107.277 cv
153.918 107.277 li
153.91 107.282 153.901 107.287 153.893 107.292 cv
153.893 107.292 li
153.886 107.296 153.877 107.301 153.87 107.306 cv
153.87 107.306 li
153.856 107.314 153.842 107.323 153.828 107.331 cv
153.828 107.331 li
153.82 107.336 153.811 107.341 153.803 107.346 cv
153.803 107.346 li
153.795 107.35 153.786 107.356 153.778 107.361 cv
153.778 107.361 li
153.771 107.365 153.764 107.369 153.757 107.374 cv
153.757 107.374 li
153.747 107.38 153.739 107.384 153.729 107.39 cv
153.729 107.39 li
153.724 107.394 153.719 107.396 153.714 107.399 cv
153.714 107.399 li
153.691 107.413 153.669 107.426 153.647 107.44 cv
153.647 107.44 li
153.646 107.441 153.645 107.441 153.644 107.442 cv
153.644 107.442 li
153.634 107.448 153.621 107.456 153.611 107.462 cv
153.611 107.462 li
153.606 107.465 153.602 107.467 153.597 107.47 cv
153.597 107.47 li
153.586 107.477 153.576 107.483 153.565 107.49 cv
153.565 107.49 li
153.562 107.492 153.559 107.493 153.556 107.495 cv
153.556 107.495 li
153.52 107.517 153.483 107.54 153.447 107.562 cv
153.447 107.562 li
153.443 107.564 153.44 107.566 153.437 107.568 cv
153.437 107.568 li
153.425 107.575 153.414 107.582 153.402 107.589 cv
153.402 107.589 li
153.4 107.59 153.397 107.592 153.395 107.594 cv
153.395 107.594 li
153.357 107.617 153.32 107.64 153.282 107.663 cv
153.282 107.663 li
153.28 107.664 153.279 107.665 153.276 107.667 cv
153.276 107.667 li
153.264 107.674 153.251 107.682 153.239 107.69 cv
153.239 107.69 li
153.238 107.69 153.238 107.69 153.237 107.691 cv
153.237 107.691 li
153.198 107.715 153.158 107.74 153.119 107.764 cv
153.119 107.764 li
153.118 107.765 153.117 107.766 153.115 107.766 cv
153.115 107.766 li
153.062 107.8 153.01 107.832 152.956 107.866 cv
152.956 107.866 li
152.955 107.866 152.955 107.866 152.954 107.867 cv
152.954 107.867 li
146.617 111.835 140.672 117.288 135.454 123.643 cv
f
85.3625 171.48 mo
84.7356 170.89 84.1307 170.294 83.548 169.693 cv
83.8579 169.296 84.1737 168.901 84.4919 168.514 cv
85.0461 168.836 li
85.1067 169.719 85.212 170.6 85.3625 171.48 cv
f
85.0461 168.836 mo
84.4915 168.514 li
84.6604 168.309 84.8281 168.107 84.9989 167.905 cv
85.0091 168.216 85.0248 168.525 85.0461 168.836 cv
f
223.525 139.22 mo
221.684 137.88 219.69 136.587 217.544 135.348 cv
202.382 126.594 182.509 122.217 162.636 122.217 cv
152.94 122.217 143.241 123.26 134.092 125.344 cv
140.082 117.68 147.123 111.192 154.663 106.839 cv
154.663 106.839 li
156.386 105.844 158.083 104.991 159.748 104.275 cv
159.765 104.267 159.782 104.26 159.798 104.253 cv
159.818 104.245 159.837 104.236 159.857 104.228 cv
162.918 102.921 165.872 102.079 168.675 101.677 cv
168.676 101.677 168.677 101.677 168.678 101.677 cv
168.681 101.676 168.683 101.676 168.686 101.676 cv
169.974 101.492 171.232 101.401 172.453 101.401 cv
173.787 101.401 175.078 101.509 176.322 101.723 cv
176.323 101.723 li
176.349 101.728 176.375 101.732 176.402 101.737 cv
176.405 101.738 176.408 101.738 176.41 101.739 cv
176.418 101.74 176.426 101.741 176.433 101.743 cv
176.434 101.743 176.436 101.743 176.437 101.743 cv
176.451 101.746 176.466 101.748 176.48 101.751 cv
176.485 101.752 176.489 101.753 176.494 101.753 cv
176.5 101.755 176.506 101.756 176.512 101.757 cv
176.518 101.758 176.524 101.759 176.53 101.76 cv
176.536 101.761 176.543 101.762 176.55 101.764 cv
176.558 101.765 176.567 101.767 176.576 101.768 cv
176.581 101.769 176.585 101.77 176.59 101.771 cv
176.597 101.772 176.604 101.774 176.611 101.775 cv
176.615 101.776 176.62 101.777 176.624 101.778 cv
176.635 101.779 176.647 101.782 176.657 101.784 cv
176.66 101.784 176.662 101.784 176.664 101.785 cv
176.674 101.787 176.683 101.789 176.693 101.79 cv
176.695 101.791 176.7 101.792 176.703 101.792 cv
176.714 101.794 176.724 101.796 176.736 101.799 cv
176.737 101.799 li
176.749 101.801 176.76 101.803 176.773 101.806 cv
176.775 101.806 176.777 101.807 176.779 101.807 cv
176.79 101.809 176.801 101.811 176.812 101.813 cv
176.812 101.814 176.814 101.814 176.815 101.814 cv
176.841 101.819 176.865 101.824 176.891 101.829 cv
176.891 101.829 176.891 101.829 176.892 101.829 cv
177.909 102.033 178.894 102.31 179.841 102.656 cv
179.842 102.656 179.843 102.656 179.844 102.656 cv
179.867 102.665 179.889 102.673 179.912 102.682 cv
179.914 102.682 179.916 102.683 179.917 102.684 cv
179.927 102.687 179.939 102.691 179.948 102.695 cv
179.949 102.695 179.95 102.696 179.951 102.696 cv
179.963 102.7 179.974 102.705 179.985 102.709 cv
179.987 102.709 179.988 102.71 179.99 102.711 cv
179.999 102.714 180.008 102.717 180.017 102.721 cv
180.02 102.722 180.023 102.723 180.026 102.724 cv
180.035 102.728 180.044 102.731 180.053 102.734 cv
180.057 102.736 180.06 102.737 180.064 102.739 cv
180.072 102.742 180.08 102.745 180.088 102.748 cv
180.089 102.748 180.091 102.749 180.093 102.75 cv
180.093 102.75 li
180.096 102.751 180.1 102.752 180.102 102.753 cv
180.108 102.755 180.113 102.757 180.118 102.759 cv
180.124 102.762 180.128 102.763 180.134 102.765 cv
180.142 102.768 180.152 102.772 180.16 102.775 cv
180.163 102.777 180.166 102.778 180.169 102.779 cv
180.17 102.779 180.171 102.78 180.172 102.78 cv
180.174 102.781 180.176 102.781 180.178 102.782 cv
180.182 102.784 180.186 102.785 180.19 102.787 cv
180.196 102.789 180.203 102.792 180.209 102.794 cv
180.211 102.795 180.214 102.796 180.215 102.797 cv
180.226 102.801 180.235 102.804 180.245 102.808 cv
180.247 102.809 180.249 102.81 180.25 102.81 cv
180.253 102.811 180.257 102.813 180.259 102.814 cv
180.26 102.814 180.261 102.814 180.262 102.815 cv
180.27 102.818 180.278 102.821 180.286 102.824 cv
180.287 102.825 180.287 102.825 180.287 102.825 cv
180.299 102.829 180.31 102.834 180.321 102.838 cv
180.324 102.839 180.326 102.84 180.328 102.841 cv
180.339 102.845 180.351 102.85 180.363 102.855 cv
180.363 102.855 180.364 102.855 180.365 102.856 cv
180.375 102.86 180.385 102.864 180.396 102.868 cv
180.4 102.87 180.403 102.871 180.407 102.872 cv
180.417 102.876 180.428 102.881 180.438 102.885 cv
180.44 102.886 180.444 102.887 180.446 102.888 cv
180.455 102.892 180.463 102.895 180.472 102.899 cv
180.475 102.9 180.48 102.902 180.483 102.903 cv
180.494 102.907 180.503 102.911 180.514 102.916 cv
180.518 102.917 180.52 102.918 180.524 102.92 cv
180.532 102.923 180.54 102.926 180.547 102.929 cv
180.552 102.931 180.556 102.933 180.56 102.935 cv
180.57 102.939 180.579 102.943 180.589 102.946 cv
180.593 102.948 180.599 102.951 180.604 102.953 cv
180.61 102.955 180.615 102.957 180.621 102.96 cv
180.626 102.962 180.632 102.964 180.638 102.967 cv
180.644 102.969 180.651 102.972 180.657 102.975 cv
180.666 102.979 180.674 102.982 180.682 102.985 cv
180.686 102.987 180.691 102.989 180.695 102.991 cv
180.716 103 180.738 103.009 180.76 103.018 cv
180.763 103.02 180.765 103.02 180.768 103.022 cv
180.791 103.032 180.814 103.041 180.837 103.051 cv
180.838 103.052 180.84 103.052 180.842 103.053 cv
182.695 103.851 184.399 104.931 185.925 106.279 cv
185.925 106.279 li
189.314 109.272 191.835 113.588 193.224 119.075 cv
193.224 119.075 li
194.717 117.909 196.252 116.865 197.821 115.959 cv
197.821 115.959 li
197.831 115.953 197.84 115.948 197.85 115.943 cv
197.854 115.94 197.86 115.937 197.864 115.934 cv
197.868 115.932 197.872 115.93 197.877 115.927 cv
197.882 115.924 197.889 115.92 197.895 115.917 cv
197.897 115.915 197.898 115.915 197.901 115.913 cv
197.975 115.87 198.051 115.827 198.126 115.785 cv
198.147 115.773 198.169 115.761 198.191 115.749 cv
198.192 115.748 198.194 115.747 198.195 115.746 cv
202.32 113.431 206.219 112.332 209.686 112.332 cv
211.58 112.332 213.345 112.66 214.948 113.296 cv
214.949 113.297 214.951 113.298 214.953 113.298 cv
214.958 113.3 214.963 113.302 214.968 113.304 cv
214.971 113.305 214.975 113.307 214.978 113.308 cv
214.982 113.31 214.986 113.312 214.99 113.313 cv
214.996 113.315 215 113.317 215.006 113.32 cv
215.008 113.32 215.011 113.321 215.013 113.322 cv
215.408 113.482 215.793 113.66 216.167 113.857 cv
216.308 113.93 216.446 114.006 216.583 114.085 cv
216.583 114.085 li
217.516 114.621 218.38 115.277 219.166 116.047 cv
219.502 116.376 219.823 116.725 220.13 117.095 cv
222.785 120.299 224.333 125.04 224.35 131.077 cv
224.357 133.721 224.071 136.456 223.525 139.22 cv
.913725 .952941 .996078 rgb
f
239.91 171.48 mo
241.635 161.395 237.455 151.038 227.373 142.275 cv
237.839 136.193 li
253.204 145.064 li
253.171 146.2 253.074 147.333 252.913 148.466 cv
249.434 146.449 li
249.064 146.697 li
252.849 148.891 li
252.849 148.891 li
249.064 146.697 li
250.173 150.082 li
250.132 150.108 250.097 150.133 250.065 150.156 cv
249.736 150.385 249.982 151.006 250.156 151.015 cv
250.16 151.015 250.163 151.015 250.167 151.015 cv
250.189 151.015 250.211 151.011 250.234 151.005 cv
250.026 151.208 250.013 151.523 250.27 151.771 cv
250.328 151.827 250.377 151.848 250.427 151.848 cv
250.438 151.848 250.45 151.847 250.461 151.845 cv
250.273 152.026 250.325 152.388 250.59 152.5 cv
250.674 152.535 250.737 152.548 250.798 152.548 cv
250.854 152.548 250.907 152.537 250.972 152.52 cv
250.98 152.544 li
250.962 152.556 250.945 152.569 250.931 152.582 cv
250.748 152.755 250.883 153.19 251.209 153.243 cv
251.534 154.234 li
249.5 160.249 245.626 166.099 239.91 171.48 cv
250.695 151.746 mo
250.702 151.743 250.709 151.74 250.715 151.737 cv
250.717 151.742 li
250.695 151.746 li
.945098 .968627 .996078 rgb
f
252.849 148.891 mo
249.064 146.697 li
249.434 146.449 li
252.913 148.466 li
252.893 148.607 252.872 148.75 252.849 148.891 cv
.235294 .27451 .321569 rgb
f
251.534 154.234 mo
251.209 153.243 li
251.231 153.247 251.253 153.249 251.276 153.249 cv
251.35 153.249 251.431 153.23 251.519 153.187 cv
251.642 153.127 251.781 153.098 251.903 153.07 cv
251.788 153.459 251.665 153.846 251.534 154.234 cv
250.98 152.544 mo
250.972 152.52 li
251.004 152.511 251.04 152.501 251.08 152.491 cv
251.042 152.507 251.009 152.525 250.98 152.544 cv
252.056 152.54 mo
251.933 152.448 251.761 152.407 251.586 152.402 cv
252.159 152.295 252.103 151.849 251.606 151.708 cv
251.607 151.708 251.609 151.708 251.61 151.708 cv
251.623 151.708 251.636 151.708 251.648 151.706 cv
251.742 151.697 251.832 151.646 251.871 151.538 cv
252.013 151.131 251.409 150.91 251.19 150.849 cv
251.262 150.864 251.334 150.88 251.404 150.88 cv
251.413 150.88 251.422 150.88 251.431 150.879 cv
251.525 150.872 251.616 150.824 251.655 150.717 cv
251.81 150.298 251.147 150.061 250.955 150.008 cv
250.823 149.971 250.709 149.957 250.611 149.957 cv
250.41 149.957 250.274 150.019 250.173 150.082 cv
249.064 146.697 li
252.849 148.891 li
252.737 149.611 252.6 150.326 252.436 151.044 cv
252.322 151.543 252.195 152.042 252.056 152.54 cv
250.717 151.742 mo
250.715 151.737 li
250.818 151.693 250.948 151.653 251.128 151.653 cv
251.183 151.653 251.242 151.657 251.307 151.665 cv
251.295 151.665 251.283 151.665 251.271 151.665 cv
251.19 151.665 251.103 151.671 251.009 151.686 cv
250.717 151.742 li
.0666667 .105882 .117647 rgb
f
251.276 153.249 mo
251.253 153.249 251.231 153.247 251.209 153.243 cv
250.883 153.19 250.748 152.755 250.931 152.582 cv
250.945 152.569 250.962 152.556 250.98 152.544 cv
251.009 152.525 251.042 152.507 251.08 152.491 cv
251.18 152.465 251.308 152.436 251.493 152.416 cv
251.525 152.412 251.556 152.408 251.586 152.402 cv
251.761 152.407 251.933 152.448 252.056 152.54 cv
252.007 152.716 251.956 152.894 251.903 153.07 cv
251.781 153.098 251.642 153.127 251.519 153.187 cv
251.431 153.23 251.35 153.249 251.276 153.249 cv
1 .776471 .67451 rgb
f
250.167 151.015 mo
250.163 151.015 250.16 151.015 250.156 151.015 cv
249.982 151.006 249.736 150.385 250.065 150.156 cv
250.097 150.133 250.132 150.108 250.173 150.082 cv
250.274 150.019 250.41 149.957 250.611 149.957 cv
250.709 149.957 250.823 149.971 250.955 150.008 cv
251.147 150.061 251.81 150.298 251.655 150.717 cv
251.616 150.824 251.525 150.872 251.431 150.879 cv
251.422 150.88 251.413 150.88 251.404 150.88 cv
251.334 150.88 251.262 150.864 251.19 150.849 cv
251.181 150.847 251.172 150.844 251.164 150.842 cv
251.041 150.811 250.925 150.797 250.819 150.797 cv
250.562 150.797 250.361 150.88 250.234 151.005 cv
250.211 151.011 250.189 151.015 250.167 151.015 cv
f
250.427 151.848 mo
250.377 151.848 250.328 151.827 250.27 151.771 cv
250.013 151.523 250.026 151.208 250.234 151.005 cv
250.361 150.88 250.562 150.797 250.819 150.797 cv
250.925 150.797 251.041 150.811 251.164 150.842 cv
251.172 150.844 251.181 150.847 251.19 150.849 cv
251.409 150.91 252.013 151.131 251.871 151.538 cv
251.832 151.646 251.742 151.697 251.648 151.706 cv
251.636 151.708 251.623 151.708 251.61 151.708 cv
251.609 151.708 251.607 151.708 251.606 151.708 cv
251.519 151.684 251.419 151.668 251.307 151.665 cv
251.242 151.657 251.183 151.653 251.128 151.653 cv
250.948 151.653 250.818 151.693 250.715 151.737 cv
250.709 151.74 250.702 151.743 250.695 151.746 cv
250.586 151.767 li
250.536 151.785 250.495 151.812 250.461 151.845 cv
250.45 151.847 250.438 151.848 250.427 151.848 cv
f
250.798 152.548 mo
250.737 152.548 250.674 152.535 250.59 152.5 cv
250.325 152.388 250.273 152.026 250.461 151.845 cv
250.495 151.812 250.536 151.785 250.586 151.767 cv
250.695 151.746 li
250.717 151.742 li
251.009 151.686 li
251.103 151.671 251.19 151.665 251.271 151.665 cv
251.283 151.665 251.295 151.665 251.307 151.665 cv
251.419 151.668 251.519 151.684 251.606 151.708 cv
252.103 151.849 252.159 152.295 251.586 152.402 cv
251.556 152.408 251.525 152.412 251.493 152.416 cv
251.308 152.436 251.18 152.465 251.08 152.491 cv
251.04 152.501 251.004 152.511 250.972 152.52 cv
250.907 152.537 250.854 152.548 250.798 152.548 cv
f
92.4943 186.313 mo
92.4943 186.313 li
92.5254 186.258 92.5565 186.202 92.5877 186.146 cv
92.5877 186.146 li
92.5883 186.145 92.5889 186.144 92.5894 186.143 cv
92.5894 186.143 li
92.5997 186.124 92.6093 186.107 92.6196 186.089 cv
92.6196 186.089 li
92.6201 186.088 92.6221 186.084 92.6227 186.083 cv
92.6227 186.083 li
92.6324 186.066 92.6406 186.051 92.6503 186.034 cv
92.6503 186.034 li
92.652 186.031 92.6542 186.027 92.6559 186.024 cv
92.6559 186.024 li
92.6645 186.009 92.6741 185.992 92.6826 185.977 cv
92.6826 185.977 li
92.6844 185.974 92.6858 185.971 92.6875 185.968 cv
92.6875 185.968 li
92.7087 185.93 92.7296 185.893 92.7508 185.856 cv
92.7508 185.856 li
92.7526 185.853 92.7535 185.851 92.7552 185.848 cv
92.7552 185.848 li
92.7638 185.833 92.7726 185.817 92.7812 185.802 cv
92.7812 185.802 li
92.7841 185.797 92.7878 185.791 92.7906 185.786 cv
92.7906 185.786 li
92.7981 185.773 92.8046 185.761 92.8121 185.748 cv
92.8121 185.748 li
92.815 185.743 92.8191 185.736 92.822 185.731 cv
92.822 185.731 li
92.8295 185.717 92.8366 185.705 92.8441 185.692 cv
92.8441 185.692 li
92.8475 185.686 92.8501 185.681 92.8536 185.675 cv
92.8536 185.675 li
92.8628 185.659 92.8728 185.641 92.882 185.625 cv
92.882 185.625 li
92.8826 185.624 92.8834 185.623 92.884 185.622 cv
92.884 185.622 li
92.8944 185.604 92.9044 185.586 92.9148 185.568 cv
92.9148 185.568 li
92.9183 185.562 92.9219 185.556 92.9254 185.55 cv
92.9254 185.55 li
92.9323 185.537 92.9386 185.527 92.9455 185.514 cv
92.9455 185.514 li
92.9496 185.507 92.9549 185.498 92.9589 185.491 cv
92.9589 185.491 li
92.9647 185.481 92.9695 185.473 92.9753 185.463 cv
92.9753 185.463 li
92.9805 185.454 92.9857 185.444 92.991 185.435 cv
92.991 185.435 li
92.9956 185.427 93.0007 185.419 93.0053 185.41 cv
93.0053 185.41 li
93.0111 185.4 93.0167 185.391 93.0225 185.381 cv
93.0225 185.381 li
93.026 185.375 93.0296 185.368 93.0331 185.362 cv
93.0331 185.362 li
93.0558 185.323 93.078 185.285 93.1008 185.246 cv
93.1008 185.246 li
93.1037 185.24 93.1075 185.234 93.1104 185.229 cv
93.1104 185.229 li
93.1174 185.217 93.1237 185.206 93.1307 185.194 cv
93.1307 185.194 li
93.1336 185.189 93.1377 185.182 93.1407 185.177 cv
93.1407 185.177 li
93.1471 185.166 93.1539 185.154 93.1603 185.143 cv
93.1603 185.143 li
93.1638 185.137 93.1669 185.132 93.1705 185.126 cv
93.1705 185.126 li
93.1781 185.113 93.1845 185.102 93.1921 185.089 cv
93.1921 185.089 li
93.1933 185.087 93.1946 185.084 93.1958 185.082 cv
93.1958 185.082 li
93.2228 185.036 93.2505 184.989 93.2777 184.943 cv
93.2777 184.943 li
93.2777 184.943 li
93.2777 184.943 li
93.2865 184.928 93.2953 184.913 93.3041 184.898 cv
93.3041 184.898 li
93.3053 184.896 93.3058 184.895 93.307 184.893 cv
93.307 184.893 li
93.3153 184.879 93.3249 184.862 93.3332 184.848 cv
93.3332 184.848 li
93.3344 184.846 93.3347 184.846 93.3359 184.844 cv
93.3359 184.844 li
98.051 176.854 104.475 169.892 111.568 165.758 cv
111.568 165.758 li
111.57 165.757 li
111.57 165.757 li
111.584 165.748 111.597 165.741 111.611 165.732 cv
111.611 165.732 li
111.612 165.732 li
111.612 165.732 li
111.625 165.725 111.638 165.717 111.651 165.709 cv
111.651 165.709 li
111.653 165.708 111.656 165.706 111.658 165.705 cv
111.658 165.705 li
111.672 165.698 111.684 165.691 111.697 165.683 cv
111.697 165.683 li
111.697 165.683 li
113.266 164.777 114.802 164.048 116.297 163.489 cv
116.297 163.489 li
116.297 163.489 li
101.896 155.12 li
100.402 155.679 98.8653 156.408 97.2967 157.314 cv
92.8532 159.88 88.6685 163.558 84.9989 167.905 cv
84.6139 156.149 92.1903 144.32 107.728 135.348 cv
108.047 135.165 108.366 134.983 108.689 134.803 cv
105.536 141.434 103.194 148.341 101.896 155.12 cv
101.896 155.12 li
101.896 155.12 li
116.297 163.489 li
117.38 157.827 119.192 152.078 121.596 146.474 cv
121.596 146.474 li
121.598 146.47 121.6 146.464 121.602 146.46 cv
121.602 146.46 li
121.609 146.443 121.616 146.427 121.624 146.41 cv
121.624 146.41 li
121.629 146.398 121.634 146.387 121.639 146.375 cv
121.639 146.375 li
121.642 146.366 121.646 146.358 121.649 146.35 cv
121.649 146.35 li
121.658 146.331 121.666 146.312 121.674 146.293 cv
121.674 146.293 li
121.675 146.291 li
121.675 146.291 li
124.442 139.878 127.984 133.661 132.098 127.991 cv
132.098 127.991 li
132.1 127.988 132.104 127.983 132.106 127.981 cv
132.106 127.981 li
132.144 127.928 132.18 127.878 132.218 127.826 cv
132.218 127.826 li
132.223 127.82 132.226 127.815 132.23 127.809 cv
132.23 127.809 li
132.241 127.795 132.253 127.778 132.264 127.763 cv
132.264 127.763 li
132.27 127.755 132.275 127.748 132.281 127.74 cv
132.281 127.74 li
132.298 127.716 132.315 127.694 132.332 127.67 cv
132.332 127.67 li
132.339 127.661 132.348 127.649 132.355 127.639 cv
132.355 127.639 li
132.364 127.626 132.373 127.614 132.383 127.601 cv
132.383 127.601 li
132.391 127.59 132.399 127.579 132.407 127.568 cv
132.407 127.568 li
132.415 127.556 132.423 127.546 132.432 127.534 cv
132.432 127.534 li
132.447 127.513 132.462 127.493 132.478 127.472 cv
132.478 127.472 li
132.484 127.463 132.491 127.453 132.497 127.445 cv
132.497 127.445 li
132.509 127.43 132.52 127.414 132.532 127.398 cv
132.532 127.398 li
132.538 127.39 132.544 127.381 132.55 127.373 cv
132.55 127.373 li
132.566 127.352 132.581 127.332 132.597 127.31 cv
132.597 127.31 li
132.598 127.308 132.6 127.306 132.602 127.304 cv
132.602 127.304 li
132.619 127.28 132.637 127.256 132.654 127.233 cv
132.654 127.233 li
132.659 127.227 132.663 127.22 132.668 127.214 cv
132.668 127.214 li
132.683 127.194 132.697 127.174 132.712 127.154 cv
132.712 127.154 li
132.716 127.15 132.718 127.146 132.722 127.141 cv
132.722 127.141 li
132.74 127.117 132.759 127.092 132.777 127.067 cv
132.777 127.067 li
132.778 127.066 132.78 127.063 132.781 127.062 cv
132.781 127.062 li
132.799 127.037 132.816 127.015 132.835 126.99 cv
132.835 126.99 li
132.836 126.988 132.838 126.986 132.84 126.983 cv
132.84 126.983 li
133.251 126.432 133.67 125.884 134.092 125.344 cv
134.092 125.344 li
125.337 136.545 118.829 150.259 116.297 163.489 cv
114.802 164.048 113.266 164.777 111.697 165.683 cv
104.121 170.057 97.2987 177.663 92.4943 186.313 cv
.85827 .866144 .874018 rgb
f
101.896 155.12 mo
101.896 155.12 li
103.194 148.341 105.536 141.434 108.689 134.803 cv
108.689 134.803 li
108.356 135.502 108.033 136.205 107.719 136.909 cv
107.719 136.909 li
105.054 142.889 103.058 149.055 101.896 155.12 cv
121.596 146.474 mo
121.598 146.469 121.6 146.465 121.602 146.46 cv
121.6 146.464 121.598 146.47 121.596 146.474 cv
121.624 146.41 mo
121.629 146.398 121.634 146.386 121.639 146.375 cv
121.634 146.387 121.629 146.398 121.624 146.41 cv
121.649 146.35 mo
121.657 146.331 121.666 146.312 121.674 146.293 cv
121.666 146.312 121.658 146.331 121.649 146.35 cv
121.675 146.291 mo
121.821 145.953 121.969 145.615 122.119 145.278 cv
122.119 145.278 li
124.818 139.224 128.201 133.362 132.098 127.991 cv
127.984 133.661 124.442 139.878 121.675 146.291 cv
132.106 127.981 mo
132.143 127.929 132.181 127.877 132.218 127.826 cv
132.18 127.878 132.144 127.928 132.106 127.981 cv
132.23 127.809 mo
132.242 127.794 132.253 127.779 132.264 127.763 cv
132.253 127.778 132.241 127.795 132.23 127.809 cv
132.281 127.74 mo
132.298 127.717 132.315 127.693 132.332 127.67 cv
132.315 127.694 132.298 127.716 132.281 127.74 cv
132.355 127.639 mo
132.364 127.626 132.373 127.614 132.383 127.601 cv
132.373 127.614 132.364 127.626 132.355 127.639 cv
132.407 127.568 mo
132.415 127.557 132.424 127.545 132.432 127.534 cv
132.423 127.546 132.415 127.556 132.407 127.568 cv
132.478 127.472 mo
132.484 127.463 132.491 127.454 132.497 127.445 cv
132.491 127.453 132.484 127.463 132.478 127.472 cv
132.532 127.398 mo
132.538 127.39 132.544 127.382 132.55 127.373 cv
132.544 127.381 132.538 127.39 132.532 127.398 cv
132.597 127.31 mo
132.599 127.308 132.6 127.306 132.602 127.304 cv
132.6 127.306 132.598 127.308 132.597 127.31 cv
132.654 127.233 mo
132.659 127.227 132.664 127.22 132.668 127.214 cv
132.663 127.22 132.659 127.227 132.654 127.233 cv
132.712 127.154 mo
132.715 127.15 132.719 127.146 132.722 127.141 cv
132.718 127.146 132.716 127.15 132.712 127.154 cv
132.777 127.067 mo
132.778 127.065 132.78 127.064 132.781 127.062 cv
132.78 127.063 132.778 127.066 132.777 127.067 cv
132.835 126.99 mo
132.836 126.988 132.838 126.985 132.84 126.983 cv
132.838 126.986 132.836 126.988 132.835 126.99 cv
.847059 .898039 .988235 rgb
f
116.297 163.489 mo
101.896 155.12 li
101.896 155.12 li
103.058 149.055 105.054 142.889 107.719 136.909 cv
107.719 136.909 li
107.719 136.909 li
122.119 145.278 li
121.969 145.615 121.821 145.953 121.675 146.291 cv
121.675 146.291 li
121.674 146.293 li
121.674 146.293 li
121.666 146.312 121.657 146.331 121.649 146.35 cv
121.649 146.35 li
121.646 146.358 121.642 146.366 121.639 146.375 cv
121.639 146.375 li
121.634 146.386 121.629 146.398 121.624 146.41 cv
121.624 146.41 li
121.616 146.427 121.609 146.443 121.602 146.46 cv
121.602 146.46 li
121.6 146.465 121.598 146.469 121.596 146.474 cv
121.596 146.474 li
119.192 152.078 117.38 157.827 116.297 163.489 cv
f
122.119 145.278 mo
122.119 145.278 li
107.719 136.909 li
107.719 136.909 li
108.033 136.205 108.356 135.502 108.689 134.803 cv
116.231 130.594 124.883 127.441 134.092 125.344 cv
133.67 125.884 133.251 126.432 132.84 126.983 cv
132.84 126.983 li
132.838 126.985 132.836 126.988 132.835 126.99 cv
132.835 126.99 li
132.816 127.015 132.799 127.037 132.781 127.062 cv
132.781 127.062 li
132.78 127.064 132.778 127.065 132.777 127.067 cv
132.777 127.067 li
132.759 127.092 132.74 127.117 132.722 127.141 cv
132.722 127.141 li
132.719 127.146 132.715 127.15 132.712 127.154 cv
132.712 127.154 li
132.697 127.174 132.683 127.194 132.668 127.214 cv
132.668 127.214 li
132.664 127.22 132.659 127.227 132.654 127.233 cv
132.654 127.233 li
132.637 127.256 132.619 127.28 132.602 127.304 cv
132.602 127.304 li
132.6 127.306 132.599 127.308 132.597 127.31 cv
132.597 127.31 li
132.581 127.332 132.566 127.352 132.55 127.373 cv
132.55 127.373 li
132.544 127.382 132.538 127.39 132.532 127.398 cv
132.532 127.398 li
132.52 127.414 132.509 127.43 132.497 127.445 cv
132.497 127.445 li
132.491 127.454 132.484 127.463 132.478 127.472 cv
132.478 127.472 li
132.462 127.493 132.447 127.513 132.432 127.534 cv
132.432 127.534 li
132.424 127.545 132.415 127.557 132.407 127.568 cv
132.407 127.568 li
132.399 127.579 132.391 127.59 132.383 127.601 cv
132.383 127.601 li
132.373 127.614 132.364 127.626 132.355 127.639 cv
132.355 127.639 li
132.348 127.649 132.339 127.661 132.332 127.67 cv
132.332 127.67 li
132.315 127.693 132.298 127.717 132.281 127.74 cv
132.281 127.74 li
132.275 127.748 132.27 127.755 132.264 127.763 cv
132.264 127.763 li
132.253 127.779 132.242 127.794 132.23 127.809 cv
132.23 127.809 li
132.226 127.815 132.223 127.82 132.218 127.826 cv
132.218 127.826 li
132.181 127.877 132.143 127.929 132.106 127.981 cv
132.106 127.981 li
132.104 127.983 132.1 127.988 132.098 127.991 cv
132.098 127.991 li
128.201 133.362 124.818 139.224 122.119 145.278 cv
f
92.5877 186.146 mo
92.5882 186.145 92.5889 186.144 92.5894 186.143 cv
92.5889 186.144 92.5883 186.145 92.5877 186.146 cv
92.6196 186.089 mo
92.6206 186.087 92.6217 186.085 92.6227 186.083 cv
92.6221 186.084 92.6201 186.088 92.6196 186.089 cv
92.6503 186.034 mo
92.6522 186.031 92.6541 186.028 92.6559 186.024 cv
92.6542 186.027 92.652 186.031 92.6503 186.034 cv
92.6826 185.977 mo
92.6843 185.974 92.6858 185.971 92.6875 185.968 cv
92.6858 185.971 92.6844 185.974 92.6826 185.977 cv
92.7508 185.856 mo
92.7524 185.853 92.7537 185.851 92.7552 185.848 cv
92.7535 185.851 92.7526 185.853 92.7508 185.856 cv
92.7812 185.802 mo
92.7845 185.797 92.7874 185.791 92.7906 185.786 cv
92.7878 185.791 92.7841 185.797 92.7812 185.802 cv
92.8121 185.748 mo
92.8154 185.742 92.8187 185.736 92.822 185.731 cv
92.8191 185.736 92.815 185.743 92.8121 185.748 cv
92.8441 185.692 mo
92.8473 185.686 92.8503 185.681 92.8536 185.675 cv
92.8501 185.681 92.8475 185.686 92.8441 185.692 cv
92.882 185.625 mo
92.8825 185.624 92.8835 185.623 92.884 185.622 cv
92.8834 185.623 92.8826 185.624 92.882 185.625 cv
92.9148 185.568 mo
92.9183 185.562 92.9219 185.556 92.9254 185.55 cv
92.9219 185.556 92.9183 185.562 92.9148 185.568 cv
92.9455 185.514 mo
92.95 185.507 92.9544 185.499 92.9589 185.491 cv
92.9549 185.498 92.9496 185.507 92.9455 185.514 cv
92.9753 185.463 mo
92.9805 185.454 92.9858 185.444 92.991 185.435 cv
92.9857 185.444 92.9805 185.454 92.9753 185.463 cv
93.0053 185.41 mo
93.011 185.401 93.0168 185.391 93.0225 185.381 cv
93.0167 185.391 93.0111 185.4 93.0053 185.41 cv
93.0331 185.362 mo
93.0557 185.323 93.0781 185.285 93.1008 185.246 cv
93.078 185.285 93.0558 185.323 93.0331 185.362 cv
93.1104 185.229 mo
93.1172 185.217 93.1239 185.206 93.1307 185.194 cv
93.1237 185.206 93.1174 185.217 93.1104 185.229 cv
93.1407 185.177 mo
93.1473 185.165 93.1537 185.155 93.1603 185.143 cv
93.1539 185.154 93.1471 185.166 93.1407 185.177 cv
93.1705 185.126 mo
93.1776 185.113 93.1849 185.101 93.1921 185.089 cv
93.1845 185.102 93.1781 185.113 93.1705 185.126 cv
93.1958 185.082 mo
93.223 185.036 93.2504 184.989 93.2777 184.943 cv
93.2505 184.989 93.2228 185.036 93.1958 185.082 cv
93.2777 184.943 mo
93.2865 184.928 93.2953 184.913 93.3041 184.898 cv
93.2953 184.913 93.2865 184.928 93.2777 184.943 cv
93.307 184.893 mo
93.3157 184.878 93.3245 184.863 93.3332 184.848 cv
93.3249 184.862 93.3153 184.879 93.307 184.893 cv
93.3359 184.844 mo
94.9922 182.037 96.8591 179.358 98.892 176.883 cv
98.892 176.883 li
102.647 172.312 106.966 168.44 111.568 165.758 cv
104.475 169.892 98.051 176.854 93.3359 184.844 cv
84.9989 167.905 mo
84.9989 167.905 li
88.6685 163.558 92.8532 159.88 97.2967 157.314 cv
98.8653 156.408 100.402 155.679 101.896 155.12 cv
116.297 163.489 li
116.297 163.489 li
101.896 155.12 li
100.402 155.679 98.8653 156.408 97.2967 157.314 cv
97.2967 157.314 li
97.2842 157.321 97.2717 157.329 97.2592 157.336 cv
97.2558 157.338 97.2525 157.34 97.2491 157.342 cv
97.2376 157.348 97.2252 157.356 97.2136 157.362 cv
97.2105 157.364 97.2071 157.366 97.204 157.368 cv
97.1951 157.373 97.1856 157.379 97.1767 157.384 cv
97.1724 157.386 97.1679 157.389 97.1637 157.391 cv
97.153 157.398 97.1418 157.404 97.1311 157.41 cv
97.1263 157.413 97.1209 157.416 97.1161 157.419 cv
97.109 157.423 97.102 157.427 97.0949 157.432 cv
97.0864 157.437 97.078 157.441 97.0695 157.446 cv
97.0624 157.451 97.0557 157.455 97.0486 157.459 cv
97.0424 157.462 97.0355 157.466 97.0293 157.47 cv
97.0239 157.473 97.0194 157.476 97.014 157.479 cv
97.0022 157.486 96.991 157.493 96.9791 157.5 cv
96.9755 157.502 96.9706 157.505 96.967 157.507 cv
96.9597 157.511 96.9523 157.516 96.945 157.52 cv
96.9423 157.521 96.9381 157.524 96.9354 157.526 cv
96.9207 157.534 96.9058 157.543 96.8911 157.552 cv
96.8902 157.552 96.8882 157.554 96.8873 157.554 cv
96.861 157.57 96.8344 157.586 96.8082 157.601 cv
96.8073 157.602 96.8072 157.602 96.8064 157.602 cv
95.2159 158.554 93.6602 159.647 92.151 160.861 cv
92.1502 160.862 92.149 160.863 92.1481 160.864 cv
92.1243 160.883 92.1004 160.902 92.0766 160.921 cv
92.0724 160.925 92.0696 160.927 92.0654 160.93 cv
92.0561 160.938 92.0462 160.946 92.0368 160.954 cv
92.0301 160.959 92.024 160.964 92.0173 160.969 cv
92.0119 160.974 92.0063 160.978 92.0009 160.983 cv
91.9917 160.99 91.9842 160.996 91.9749 161.004 cv
91.9712 161.007 91.9675 161.01 91.9638 161.013 cv
91.9546 161.02 91.9451 161.028 91.9359 161.036 cv
91.9319 161.039 91.9276 161.042 91.9236 161.046 cv
91.9127 161.054 91.9022 161.063 91.8913 161.072 cv
91.8883 161.074 91.8855 161.077 91.8826 161.079 cv
91.8725 161.087 91.8642 161.094 91.8541 161.102 cv
91.8512 161.105 91.8483 161.107 91.8454 161.109 cv
91.8337 161.119 91.822 161.129 91.8103 161.138 cv
91.8084 161.14 91.8063 161.141 91.8045 161.143 cv
91.7785 161.164 91.7543 161.184 91.7284 161.206 cv
91.7279 161.206 91.7276 161.206 91.7271 161.207 cv
89.3488 163.167 87.0902 165.427 84.9989 167.905 cv
111.57 165.757 mo
111.584 165.749 111.598 165.74 111.611 165.732 cv
111.597 165.741 111.584 165.748 111.57 165.757 cv
111.612 165.732 mo
111.625 165.725 111.638 165.717 111.651 165.709 cv
111.638 165.717 111.625 165.725 111.612 165.732 cv
111.658 165.705 mo
111.671 165.698 111.684 165.69 111.697 165.683 cv
111.684 165.691 111.672 165.698 111.658 165.705 cv
f
92.4943 186.313 mo
88.6115 181.6 86.2336 176.574 85.3625 171.48 cv
85.212 170.6 85.1067 169.719 85.0461 168.836 cv
98.892 176.883 li
96.8591 179.358 94.9922 182.037 93.3359 184.844 cv
93.3359 184.844 li
93.3347 184.846 93.3344 184.846 93.3332 184.848 cv
93.3332 184.848 li
93.3245 184.863 93.3157 184.878 93.307 184.893 cv
93.307 184.893 li
93.3058 184.895 93.3053 184.896 93.3041 184.898 cv
93.3041 184.898 li
93.2953 184.913 93.2865 184.928 93.2777 184.943 cv
93.2777 184.943 li
93.2777 184.943 li
93.2777 184.943 li
93.2504 184.989 93.223 185.036 93.1958 185.082 cv
93.1958 185.082 li
93.1946 185.084 93.1933 185.087 93.1921 185.089 cv
93.1921 185.089 li
93.1849 185.101 93.1776 185.113 93.1705 185.126 cv
93.1705 185.126 li
93.1669 185.132 93.1638 185.137 93.1603 185.143 cv
93.1603 185.143 li
93.1537 185.155 93.1473 185.165 93.1407 185.177 cv
93.1407 185.177 li
93.1377 185.182 93.1336 185.189 93.1307 185.194 cv
93.1307 185.194 li
93.1239 185.206 93.1172 185.217 93.1104 185.229 cv
93.1104 185.229 li
93.1075 185.234 93.1037 185.24 93.1008 185.246 cv
93.1008 185.246 li
93.0781 185.285 93.0557 185.323 93.0331 185.362 cv
93.0331 185.362 li
93.0296 185.368 93.026 185.375 93.0225 185.381 cv
93.0225 185.381 li
93.0168 185.391 93.011 185.401 93.0053 185.41 cv
93.0053 185.41 li
93.0007 185.419 92.9956 185.427 92.991 185.435 cv
92.991 185.435 li
92.9858 185.444 92.9805 185.454 92.9753 185.463 cv
92.9753 185.463 li
92.9695 185.473 92.9647 185.481 92.9589 185.491 cv
92.9589 185.491 li
92.9544 185.499 92.95 185.507 92.9455 185.514 cv
92.9455 185.514 li
92.9386 185.527 92.9323 185.537 92.9254 185.55 cv
92.9254 185.55 li
92.9219 185.556 92.9183 185.562 92.9148 185.568 cv
92.9148 185.568 li
92.9044 185.586 92.8944 185.604 92.884 185.622 cv
92.884 185.622 li
92.8835 185.623 92.8825 185.624 92.882 185.625 cv
92.882 185.625 li
92.8728 185.641 92.8628 185.659 92.8536 185.675 cv
92.8536 185.675 li
92.8503 185.681 92.8473 185.686 92.8441 185.692 cv
92.8441 185.692 li
92.8366 185.705 92.8295 185.717 92.822 185.731 cv
92.822 185.731 li
92.8187 185.736 92.8154 185.742 92.8121 185.748 cv
92.8121 185.748 li
92.8046 185.761 92.7981 185.773 92.7906 185.786 cv
92.7906 185.786 li
92.7874 185.791 92.7845 185.797 92.7812 185.802 cv
92.7812 185.802 li
92.7726 185.817 92.7638 185.833 92.7552 185.848 cv
92.7552 185.848 li
92.7537 185.851 92.7524 185.853 92.7508 185.856 cv
92.7508 185.856 li
92.7296 185.893 92.7087 185.93 92.6875 185.968 cv
92.6875 185.968 li
92.6858 185.971 92.6843 185.974 92.6826 185.977 cv
92.6826 185.977 li
92.6741 185.992 92.6645 186.009 92.6559 186.024 cv
92.6559 186.024 li
92.6541 186.028 92.6522 186.031 92.6503 186.034 cv
92.6503 186.034 li
92.6406 186.051 92.6324 186.066 92.6227 186.083 cv
92.6227 186.083 li
92.6217 186.085 92.6206 186.087 92.6196 186.089 cv
92.6196 186.089 li
92.6093 186.107 92.5997 186.124 92.5894 186.143 cv
92.5894 186.143 li
92.5889 186.144 92.5882 186.145 92.5877 186.146 cv
92.5877 186.146 li
92.5565 186.202 92.5254 186.258 92.4943 186.313 cv
f
98.892 176.883 mo
98.892 176.883 li
85.0461 168.836 li
85.0248 168.525 85.0091 168.216 84.9989 167.905 cv
87.0902 165.427 89.3488 163.167 91.7271 161.207 cv
91.7276 161.206 91.7279 161.206 91.7284 161.206 cv
91.7543 161.184 91.7785 161.164 91.8045 161.143 cv
91.8063 161.141 91.8084 161.14 91.8103 161.138 cv
91.822 161.129 91.8337 161.119 91.8454 161.109 cv
91.8483 161.107 91.8512 161.105 91.8541 161.102 cv
91.8642 161.094 91.8725 161.087 91.8826 161.079 cv
91.8855 161.077 91.8883 161.074 91.8913 161.072 cv
91.9022 161.063 91.9127 161.054 91.9236 161.046 cv
91.9276 161.042 91.9319 161.039 91.9359 161.036 cv
91.9451 161.028 91.9546 161.02 91.9638 161.013 cv
91.9675 161.01 91.9712 161.007 91.9749 161.004 cv
91.9842 160.996 91.9917 160.99 92.0009 160.983 cv
92.0063 160.978 92.0119 160.974 92.0173 160.969 cv
92.024 160.964 92.0301 160.959 92.0368 160.954 cv
92.0462 160.946 92.0561 160.938 92.0654 160.93 cv
92.0696 160.927 92.0724 160.925 92.0766 160.921 cv
92.1004 160.902 92.1243 160.883 92.1481 160.864 cv
92.149 160.863 92.1502 160.862 92.151 160.861 cv
93.6602 159.647 95.2159 158.554 96.8064 157.602 cv
96.8072 157.602 96.8073 157.602 96.8082 157.601 cv
96.8344 157.586 96.861 157.57 96.8873 157.554 cv
96.8882 157.554 96.8902 157.552 96.8911 157.552 cv
96.9058 157.543 96.9207 157.534 96.9354 157.526 cv
96.9381 157.524 96.9423 157.521 96.945 157.52 cv
96.9523 157.516 96.9597 157.511 96.967 157.507 cv
96.9706 157.505 96.9755 157.502 96.9791 157.5 cv
96.991 157.493 97.0022 157.486 97.014 157.479 cv
97.0194 157.476 97.0239 157.473 97.0293 157.47 cv
97.0355 157.466 97.0424 157.462 97.0486 157.459 cv
97.0557 157.455 97.0624 157.451 97.0695 157.446 cv
97.078 157.441 97.0864 157.437 97.0949 157.432 cv
97.102 157.427 97.109 157.423 97.1161 157.419 cv
97.1209 157.416 97.1263 157.413 97.1311 157.41 cv
97.1418 157.404 97.153 157.398 97.1637 157.391 cv
97.1679 157.389 97.1724 157.386 97.1767 157.384 cv
97.1856 157.379 97.1951 157.373 97.204 157.368 cv
97.2071 157.366 97.2105 157.364 97.2136 157.362 cv
97.2252 157.356 97.2376 157.348 97.2491 157.342 cv
97.2525 157.34 97.2558 157.338 97.2592 157.336 cv
97.2717 157.329 97.2842 157.321 97.2967 157.314 cv
97.2967 157.314 li
98.8653 156.408 100.402 155.679 101.896 155.12 cv
116.297 163.489 li
114.802 164.048 113.266 164.777 111.697 165.683 cv
111.697 165.683 li
111.697 165.683 li
111.684 165.69 111.671 165.698 111.658 165.705 cv
111.658 165.705 li
111.656 165.706 111.653 165.708 111.651 165.709 cv
111.651 165.709 li
111.638 165.717 111.625 165.725 111.612 165.732 cv
111.612 165.732 li
111.611 165.732 li
111.611 165.732 li
111.598 165.74 111.584 165.749 111.57 165.757 cv
111.57 165.757 li
111.568 165.758 li
111.568 165.758 li
106.966 168.44 102.647 172.312 98.892 176.883 cv
f
221.874 145.471 mo
222.561 143.387 223.116 141.296 223.525 139.22 cv
224.892 140.214 226.173 141.233 227.373 142.275 cv
221.874 145.471 li
.85827 .866144 .874018 rgb
f
98.0051 191.917 mo
95.9172 190.112 94.0799 188.238 92.4943 186.313 cv
97.2987 177.663 104.121 170.057 111.697 165.683 cv
113.266 164.777 114.802 164.048 116.297 163.489 cv
118.829 150.259 125.337 136.545 134.092 125.344 cv
143.241 123.26 152.94 122.217 162.636 122.217 cv
182.509 122.217 202.382 126.594 217.544 135.348 cv
219.69 136.587 221.684 137.88 223.525 139.22 cv
223.116 141.296 222.561 143.387 221.874 145.471 cv
198.747 158.911 li
193.295 156.79 187.41 155.201 181.306 154.143 cv
182.877 153.367 li
176.807 142.426 li
172.186 152.969 li
169.021 152.698 165.829 152.562 162.636 152.562 cv
157.967 152.562 153.301 152.852 148.721 153.432 cv
149.277 151.959 li
146.215 153.779 li
146.089 153.798 145.962 153.817 145.837 153.837 cv
147.871 148.838 151.112 144.156 154.965 140.771 cv
158.679 137.508 162.441 135.871 165.638 135.871 cv
168.722 135.871 171.28 137.396 172.759 140.455 cv
173.031 141.017 173.503 141.291 174.066 141.291 cv
174.781 141.291 175.642 140.851 176.431 139.998 cv
177.842 138.472 178.487 136.201 177.871 134.927 cv
175.849 130.744 172.353 128.659 168.135 128.659 cv
163.769 128.659 158.63 130.895 153.557 135.351 cv
147.88 140.339 143.176 147.388 140.464 154.814 cv
131.855 156.622 123.776 159.52 116.871 163.507 cv
103.358 171.309 97.0699 181.703 98.0051 191.917 cv
.92549 .960784 1 rgb
f
227.268 191.917 mo
227.991 184.014 224.392 176.004 216.466 169.17 cv
216.521 169.139 li
217.98 168.298 li
205.969 161.185 li
205.061 161.708 li
203.035 160.691 200.925 159.758 198.747 158.911 cv
221.874 145.471 li
227.373 142.275 li
237.455 151.038 241.635 161.395 239.91 171.48 cv
238.683 178.654 234.468 185.692 227.268 191.917 cv
.952941 .976471 1 rgb
f
216.521 169.139 mo
216.223 168.962 li
213.961 167.04 211.353 165.211 208.402 163.507 cv
207.316 162.88 206.202 162.281 205.061 161.708 cv
205.969 161.185 li
217.98 168.298 li
216.521 169.139 li
.886274 .933333 .996078 rgb
f
216.466 169.17 mo
216.386 169.101 216.305 169.032 216.223 168.962 cv
216.521 169.139 li
216.466 169.17 li
.0980392 .886274 .996078 rgb
f
140.464 154.814 mo
143.176 147.388 147.88 140.339 153.557 135.351 cv
158.63 130.895 163.769 128.659 168.135 128.659 cv
172.353 128.659 175.849 130.744 177.871 134.927 cv
178.487 136.201 177.842 138.472 176.431 139.998 cv
175.642 140.851 174.781 141.291 174.066 141.291 cv
173.503 141.291 173.031 141.017 172.759 140.455 cv
171.28 137.396 168.722 135.871 165.638 135.871 cv
162.441 135.871 158.679 137.508 154.965 140.771 cv
151.112 144.156 147.871 148.838 145.837 153.837 cv
144.026 154.117 142.235 154.442 140.464 154.814 cv
.847059 .898039 .988235 rgb
f
146.215 153.779 mo
149.277 151.959 li
148.721 153.432 li
147.883 153.538 147.046 153.654 146.215 153.779 cv
f
181.306 154.143 mo
178.31 153.624 175.26 153.232 172.186 152.969 cv
176.807 142.426 li
182.877 153.367 li
181.306 154.143 li
f
110.85 212.353 mo
102.949 206.286 98.6671 199.146 98.0051 191.917 cv
97.0699 181.703 103.358 171.309 116.871 163.507 cv
123.776 159.52 131.855 156.622 140.464 154.814 cv
140.105 155.795 139.782 156.782 139.495 157.773 cv
135.372 160.224 li
142.503 169.891 li
148.721 153.432 li
153.301 152.852 157.967 152.562 162.636 152.562 cv
165.829 152.562 169.021 152.698 172.186 152.969 cv
169.007 160.22 li
172.778 158.357 li
170.791 163.769 167.368 168.891 163.215 172.539 cv
159.563 175.747 155.778 177.373 152.552 177.373 cv
149.73 177.373 147.335 176.129 145.83 173.614 cv
145.548 173.143 145.11 172.917 144.599 172.917 cv
143.831 172.917 142.897 173.426 142.075 174.388 cv
140.705 175.992 140.165 178.245 140.868 179.42 cv
142.414 182.004 144.645 183.606 147.294 184.244 cv
139.508 185.633 132.177 188.108 126.013 191.667 cv
116.102 197.388 111.048 204.854 110.85 212.353 cv
171.798 183.377 mo
168.77 183.064 165.702 182.908 162.636 182.908 cv
160.638 182.908 158.639 182.974 156.651 183.107 cv
157.574 182.719 158.509 182.253 159.449 181.711 cv
161.169 180.718 162.907 179.466 164.623 177.959 cv
171.102 172.267 176.28 163.953 178.719 155.421 cv
181.306 154.143 li
187.41 155.201 193.295 156.79 198.747 158.911 cv
171.823 174.558 li
171.798 183.377 li
145.748 154.057 mo
145.777 153.983 145.807 153.91 145.837 153.837 cv
145.962 153.817 146.089 153.798 146.215 153.779 cv
145.748 154.057 li
.941176 .968627 1 rgb
f
214.423 212.353 mo
214.225 204.854 209.17 197.388 199.259 191.667 cv
191.486 187.178 181.857 184.415 171.798 183.377 cv
171.823 174.558 li
222.673 203.916 li
220.607 206.877 217.856 209.716 214.423 212.353 cv
.913725 .94902 .996078 rgb
f
222.673 203.916 mo
171.823 174.558 li
198.747 158.911 li
200.925 159.758 203.035 160.691 205.061 161.708 cv
182.901 174.46 li
184.36 175.321 li
194.911 181.573 li
216.466 169.17 li
224.392 176.004 227.991 184.014 227.268 191.917 cv
226.893 196.005 225.362 200.063 222.673 203.916 cv
.964706 .980392 1 rgb
f
184.36 175.321 mo
184.36 175.321 li
182.901 174.46 li
205.061 161.708 li
206.202 162.281 207.316 162.88 208.402 163.507 cv
211.353 165.211 213.961 167.04 216.223 168.962 cv
205.969 162.887 li
184.36 175.321 li
.913725 .94902 .996078 rgb
f
194.911 181.573 mo
184.36 175.321 li
205.969 162.887 li
216.223 168.962 li
216.305 169.032 216.386 169.101 216.466 169.17 cv
194.911 181.573 li
.113725 .913725 .996078 rgb
f
139.495 157.773 mo
139.782 156.782 140.105 155.795 140.464 154.814 cv
142.235 154.442 144.026 154.117 145.837 153.837 cv
145.807 153.91 145.777 153.983 145.748 154.057 cv
139.495 157.773 li
.882353 .921569 .992157 rgb
f
142.503 169.891 mo
135.372 160.224 li
139.495 157.773 li
145.748 154.057 li
146.215 153.779 li
147.046 153.654 147.883 153.538 148.721 153.432 cv
142.503 169.891 li
f
147.294 184.244 mo
144.645 183.606 142.414 182.004 140.868 179.42 cv
140.165 178.245 140.705 175.992 142.075 174.388 cv
142.897 173.426 143.831 172.917 144.599 172.917 cv
145.11 172.917 145.548 173.143 145.83 173.614 cv
147.335 176.129 149.73 177.373 152.552 177.373 cv
155.778 177.373 159.563 175.747 163.215 172.539 cv
167.368 168.891 170.791 163.769 172.778 158.357 cv
178.719 155.421 li
176.28 163.953 171.102 172.267 164.623 177.959 cv
162.907 179.466 161.169 180.718 159.449 181.711 cv
158.509 182.253 157.574 182.719 156.651 183.107 cv
153.491 183.318 150.357 183.697 147.294 184.244 cv
f
169.007 160.22 mo
172.186 152.969 li
175.26 153.232 178.31 153.624 181.306 154.143 cv
178.719 155.421 li
172.778 158.357 li
169.007 160.22 li
f
121.947 231.317 mo
119.093 229.231 116.79 226.977 115.036 224.618 cv
171.774 191.76 li
171.714 212.66 li
168.683 212.262 165.592 212.064 162.501 212.064 cv
151.884 212.064 141.279 214.41 133.204 219.102 cv
127.232 222.573 123.48 226.841 121.947 231.317 cv
.88589 .905452 .928274 rgb
f
115.036 224.618 mo
112.135 220.715 110.739 216.529 110.85 212.353 cv
111.048 204.854 116.102 197.388 126.013 191.667 cv
132.177 188.108 139.508 185.633 147.294 184.244 cv
148.173 184.455 149.097 184.561 150.058 184.561 cv
152.121 184.561 154.351 184.074 156.651 183.107 cv
158.639 182.974 160.638 182.908 162.636 182.908 cv
165.702 182.908 168.77 183.064 171.798 183.377 cv
171.774 191.76 li
115.036 224.618 li
.964706 .980392 1 rgb
f
203.281 231.35 mo
201.704 226.862 197.901 222.581 191.874 219.101 cv
186.113 215.775 179.095 213.628 171.714 212.66 cv
171.774 191.76 li
171.798 183.377 li
181.857 184.415 191.486 187.178 199.259 191.667 cv
209.17 197.388 214.225 204.854 214.423 212.353 cv
214.601 219.066 210.888 225.805 203.281 231.35 cv
.941176 .968627 1 rgb
f
150.058 184.561 mo
149.097 184.561 148.173 184.455 147.294 184.244 cv
150.357 183.697 153.491 183.318 156.651 183.107 cv
154.351 184.074 152.121 184.561 150.058 184.561 cv
.921569 .952941 .996078 rgb
f
191.874 219.101 mo
208.128 228.486 208.21 243.699 192.062 253.084 cv
175.914 262.468 149.653 262.468 133.399 253.084 cv
117.145 243.7 117.056 228.486 133.204 219.102 cv
149.353 209.718 175.621 209.717 191.874 219.101 cv
.901961 .945098 .996078 rgb
f
188.198 223.05 mo
202.409 230.254 202.481 241.932 188.363 249.135 cv
174.245 256.339 151.285 256.339 137.074 249.135 cv
122.864 241.932 122.786 230.254 136.904 223.05 cv
151.022 215.847 173.988 215.847 188.198 223.05 cv
.854902 .909804 .992157 rgb
f
189.782 222.73 mo
182.55 218.549 172.855 216.25 162.498 216.25 cv
152.295 216.25 142.382 218.608 135.31 222.723 cv
128.965 226.408 125.332 231.258 125.339 236.024 cv
125.339 236.256 125.351 236.488 125.371 236.72 cv
125.705 241.313 129.357 245.918 135.49 249.461 cv
142.73 253.635 152.417 255.934 162.768 255.934 cv
172.971 255.934 182.884 253.577 189.957 249.461 cv
195.992 245.963 199.58 241.397 199.902 236.856 cv
199.927 236.623 199.934 236.385 199.934 236.154 cv
199.927 231.342 196.224 226.446 189.782 222.73 cv
.803922 .862745 .984314 rgb
f
188.34 248.076 mo
181.737 251.909 172.418 254.112 162.768 254.112 cv
152.971 254.112 143.857 251.96 137.1 248.063 cv
131.677 244.932 128.566 241.049 128.559 237.416 cv
128.559 237.19 128.572 236.958 128.598 236.727 cv
128.572 236.502 128.559 236.25 128.559 236.024 cv
128.553 232.43 131.605 228.598 136.926 225.506 cv
143.528 221.674 152.849 219.471 162.498 219.471 cv
172.301 219.471 181.416 221.615 188.173 225.519 cv
193.596 228.649 196.707 232.527 196.714 236.16 cv
196.714 236.385 196.701 236.617 196.675 236.849 cv
196.701 237.074 196.714 237.332 196.714 237.558 cv
196.72 241.145 193.667 244.977 188.34 248.076 cv
189.782 224.121 mo
182.55 219.947 172.855 217.648 162.498 217.648 cv
152.295 217.648 142.382 220.006 135.31 224.115 cv
129.274 227.619 125.693 232.186 125.371 236.72 cv
125.705 241.313 129.357 245.918 135.49 249.461 cv
142.73 253.635 152.417 255.934 162.768 255.934 cv
172.971 255.934 182.884 253.577 189.957 249.461 cv
195.992 245.963 199.58 241.397 199.902 236.856 cv
199.567 232.269 195.915 227.664 189.782 224.121 cv
.0823529 .85098 .992157 rgb
f
166.86 210.291 mo
166.636 211.788 166.823 213.194 166.792 214.699 cv
166.758 216.302 166.598 217.905 166.265 219.475 cv
165.966 220.884 165.529 222.267 165.373 223.699 cv
165.218 225.13 165.371 226.656 166.167 227.856 cv
166.369 228.163 166.619 228.449 166.941 228.627 cv
167.369 228.864 167.888 228.885 168.37 228.802 cv
169.864 228.544 171.073 227.336 171.648 225.933 cv
172.222 224.531 172.243 222.959 172.06 221.454 cv
171.877 219.949 171.5 218.474 171.304 216.971 cv
171.064 215.143 171.244 213.422 171.367 211.602 cv
171.406 211.021 171.326 210.654 171.756 210.198 cv
172.218 209.71 172.895 209.385 173.554 209.281 cv
174.166 209.185 174.812 209.259 175.387 209.03 cv
176.165 208.72 176.663 207.828 176.519 207.004 cv
176.417 206.418 176.039 205.919 175.636 205.482 cv
174.748 204.52 173.595 203.701 172.287 203.616 cv
170.959 203.529 169.664 204.235 168.799 205.247 cv
167.933 206.258 167.448 207.542 167.139 208.837 cv
167.026 209.313 166.934 209.8 166.86 210.291 cv
cp
.141176 .164706 .192157 rgb
f
193.888 255.388 mo
194.885 256.208 195.749 261.259 191.709 261.146 cv
189.623 261.089 187.811 259.671 186.003 258.533 cv
184.972 257.883 185.489 256.76 184.423 256.215 cv
179.491 253.689 173.174 252.315 174.083 246.356 cv
174.184 245.69 174.359 242.867 174.875 242.547 cv
175.247 242.316 177.333 243.052 177.801 243.131 cv
182.315 243.879 182.9 243.898 183.645 244.409 cv
183.769 247.795 184.313 248.385 186.166 249.498 cv
187.022 250.011 193.138 254.77 193.888 255.388 cv
cp
1 .74902 .635294 rgb
f
195.024 276.026 mo
195.024 272.333 li
196.039 272.333 li
195.778 276.059 li
195.541 276.229 195.249 276.28 195.024 276.026 cv
cp
.156863 .188235 .196078 rgb
f
201.768 275.425 mo
202.271 276.039 202.923 277.006 203.352 277.675 cv
203.47 277.858 203.571 278.07 203.545 278.287 cv
203.518 278.508 203.359 278.696 203.166 278.808 cv
202.974 278.92 202.751 278.967 202.531 279 cv
201.663 279.131 200.768 279.082 199.92 278.855 cv
199.456 278.732 198.992 278.546 198.652 278.206 cv
198.168 277.72 198.014 277.006 197.829 276.345 cv
197.645 275.684 197.357 274.977 196.746 274.664 cv
196.579 274.578 196.394 274.527 196.222 274.448 cv
194.962 273.868 194.706 272.193 195.408 271.093 cv
195.789 270.495 196.293 270.536 196.891 270.787 cv
197.609 271.09 197.997 271.696 198.536 272.22 cv
198.774 272.433 li
199.343 272.895 198.521 270.332 198.858 271.024 cv
199.806 272.972 201.163 274.686 201.768 275.425 cv
cp
f
198.145 249.901 mo
198.552 250.269 198.851 250.81 198.944 251.471 cv
199.267 253.759 199.166 256.263 199.127 258.571 cv
199.091 260.681 198.667 262.767 198.663 264.879 cv
198.661 266.206 198.828 269.941 199.124 271.236 cv
199.282 271.931 198 272.42 197.364 272.099 cv
196.924 271.877 196.059 271.331 196.007 270.841 cv
195.716 268.068 194.261 265.561 193.576 262.859 cv
193.008 260.617 192.964 258.144 193.393 255.873 cv
193.75 253.987 193.86 251.606 195.231 250.122 cv
196.147 249.13 197.353 249.188 198.145 249.901 cv
cp
.933333 .611765 .462745 rgb
f
198.986 270.399 mo
199.033 270.865 199.134 271.327 199.262 271.777 cv
199.321 271.986 199.34 272.194 199.42 272.399 cv
199.505 272.621 199.618 272.83 199.737 273.034 cv
199.955 273.412 200.191 273.779 200.444 274.132 cv
200.684 274.466 201.009 274.764 201.192 275.135 cv
201.321 275.395 201.478 275.923 201.176 276.122 cv
201.007 276.233 200.785 276.226 200.587 276.183 cv
199.989 276.054 199.489 275.65 199.056 275.217 cv
198.624 274.783 198.229 274.305 197.724 273.959 cv
197.394 273.733 197.024 273.569 196.697 273.339 cv
196.061 272.891 195.506 272.16 195.584 271.352 cv
195.627 270.919 195.899 270.563 195.922 270.139 cv
195.945 269.719 195.924 269.263 196.149 268.889 cv
198.986 270.399 li
cp
f
198.426 279.723 mo
198.447 279.842 198.46 279.962 198.462 280.084 cv
198.469 280.489 198.337 280.914 198.029 281.177 cv
197.782 281.388 197.446 281.474 197.121 281.462 cv
195.977 281.419 195.03 280.499 194.472 279.576 cv
193.801 278.467 193.564 277.006 192.63 276.08 cv
192.414 275.865 192.157 275.691 191.956 275.462 cv
191.638 275.1 191.479 274.618 191.44 274.136 cv
191.407 273.726 191.461 273.294 191.686 272.95 cv
192.126 272.273 193.081 272.241 193.74 272.566 cv
194.237 272.811 194.96 272.662 195.327 273.099 cv
195.77 273.626 195.711 273.723 195.996 274.215 cv
196.773 275.555 197.663 277.445 198.19 278.906 cv
198.286 279.173 198.377 279.445 198.426 279.723 cv
cp
.227451 .27451 .282353 rgb
f
192.942 249.371 mo
193.72 254.639 193.337 261.161 194.065 266.435 cv
194.263 267.876 195.538 273.734 196.056 275.096 cv
196.334 275.826 194.369 276.251 193.63 275.998 cv
193.118 275.823 192.216 273.839 192.086 273.314 cv
191.348 270.347 189.385 267.845 188.231 265.013 cv
187.045 262.104 186.597 257.714 187.224 254.635 cv
187.351 254.007 187.584 253.305 188.173 253.056 cv
192.942 249.371 li
cp
.972549 .705882 .584314 rgb
f
194.794 272.756 mo
194.952 273.094 195.456 273.049 195.562 273.404 cv
195.683 273.801 196.022 274.808 196.195 275.185 cv
196.406 275.647 196.629 276.273 196.673 276.789 cv
196.711 277.239 196.591 277.557 196.225 277.821 cv
195.8 278.13 195.362 278.127 194.942 277.826 cv
194.493 277.504 194.121 277.088 193.79 276.648 cv
193.491 276.253 193.173 275.848 192.964 275.401 cv
192.554 274.526 192.076 273.547 191.941 272.579 cv
191.928 272.479 191.901 271.184 191.978 271.212 cv
192.165 271.282 192.343 271.387 192.523 271.483 cv
193.225 271.86 193.927 272.237 194.63 272.613 cv
194.895 272.756 194.657 272.462 194.794 272.756 cv
cp
f
183.721 234.719 mo
182.763 232.487 181.857 229.542 180.599 225.878 cv
180.259 224.892 180.066 223.837 180.051 222.788 cv
180.037 221.728 180.371 220.832 180.868 219.874 cv
181.093 219.44 181.405 218.975 181.894 218.875 cv
182.338 218.784 182.766 219.033 183.115 219.298 cv
185.223 220.893 185.59 223.063 186.075 225.581 cv
186.526 227.924 186.465 230.979 186.654 233.372 cv
186.69 233.825 187.236 237.946 185.763 237.282 cv
185.041 236.957 184.242 235.932 183.721 234.719 cv
cp
.0784314 .6 .988235 rgb
f
184.198 232.482 mo
184.708 232.09 185.308 229.869 185.625 230.358 cv
185.844 230.695 188.315 234.582 189.346 236.003 cv
187.981 236.952 186.774 238.062 185.625 239.228 cv
184.085 237.362 182.699 235.303 182.716 234.003 cv
182.725 233.345 183.524 233.002 184.198 232.482 cv
cp
f
169.26 237.007 mo
169.376 237.909 169.463 238.829 169.496 239.737 cv
169.452 238.825 169.374 237.914 169.26 237.007 cv
cp
.952941 .662745 .517647 rgb
f
169.496 239.737 mo
169.522 240.292 169.535 240.846 169.535 241.401 cv
169.504 241.386 li
169.519 240.837 169.516 240.287 169.496 239.737 cv
cp
f
195.921 256.496 mo
195.065 257.073 194.185 257.612 193.262 258.073 cv
191.633 258.888 189.471 259.718 187.609 259.539 cv
186.05 259.389 184.878 257.707 183.457 257.143 cv
179.01 255.377 177.135 254.983 174.257 252.698 cv
171.456 250.473 171.232 247.045 171.698 243.649 cv
171.798 242.92 171.87 242.181 172.01 241.463 cv
172.086 241.069 172.167 240.29 172.553 240.05 cv
173 239.772 175.51 240.658 176.073 240.752 cv
181.503 241.652 183.514 239.642 184.411 240.255 cv
186.736 241.836 189.152 243.28 191.59 244.681 cv
193.49 245.773 195.307 246.93 197.159 248.099 cv
198.106 248.696 198.72 249.702 199.214 250.699 cv
199.624 251.529 199.811 253.01 199.284 253.826 cv
199.003 254.26 198.58 254.579 198.164 254.888 cv
197.426 255.436 196.683 255.981 195.921 256.496 cv
cp
.00784314 .105882 .454902 rgb
f
172.275 219.979 mo
173.534 219.407 174.908 219.045 176.231 218.746 cv
176.446 218.698 176.661 218.651 176.876 218.606 cv
178.485 218.265 180.198 218.341 181.69 218.997 cv
181.739 219.021 li
181.739 228.898 li
172.275 228.898 li
172.275 219.979 li
cp
.952941 .662745 .517647 rgb
f
168.008 224.281 mo
168.213 222.008 170.79 220.757 172.682 219.614 cv
172.954 221.476 173.768 223.191 175.666 223.823 cv
176.669 224.253 177.958 223.823 178.532 222.964 cv
179.524 221.641 179.413 219.979 179.244 218.305 cv
180.099 218.423 180.939 218.667 181.69 218.997 cv
182.434 219.325 183.063 219.879 183.531 220.54 cv
183.867 221.015 183.827 221.818 183.961 222.385 cv
184.129 223.1 184.355 223.801 184.639 224.478 cv
184.984 225.304 185.548 226.055 185.844 226.897 cv
186.128 227.703 185.951 228.99 185.69 229.783 cv
185.547 230.218 185.328 230.623 185.121 231.03 cv
184.794 231.669 184.49 232.32 184.208 232.979 cv
183.95 233.585 183.708 234.207 183.634 234.861 cv
183.568 235.438 183.634 236.022 183.722 236.596 cv
183.965 238.168 185.079 240.246 183.688 241.574 cv
182.831 242.394 181.806 243.033 180.706 243.475 cv
180.197 243.679 179.67 243.842 179.13 243.94 cv
176.899 244.346 174.31 243.741 172.531 242.354 cv
172.333 242.2 172.224 242.124 172.18 241.912 cv
172.154 241.78 172.187 241.496 172.179 241.339 cv
172.15 240.762 172.252 240.167 172.284 239.589 cv
172.352 238.37 172.353 237.14 172.15 235.934 cv
171.536 232.283 169.138 229.174 168.144 225.608 cv
168.011 225.129 167.971 224.688 168.008 224.281 cv
cp
.0745098 .717647 .992157 rgb
f
168.731 222.514 mo
171.519 223.098 171.109 228.268 172.578 230.526 cv
173.665 232.292 175.974 231.885 177.875 232.021 cv
176.653 232.7 175.838 233.786 175.838 235.145 cv
175.675 238.021 175.904 241.004 176.495 243.923 cv
175.065 243.735 173.682 243.251 172.531 242.354 cv
172.333 242.2 172.224 242.124 172.18 241.912 cv
172.154 241.78 172.187 241.496 172.179 241.339 cv
172.15 240.762 172.252 240.167 172.284 239.589 cv
172.352 238.37 172.354 237.14 172.15 235.934 cv
171.536 232.283 169.138 229.174 168.144 225.608 cv
168.011 225.129 167.971 224.689 168.008 224.281 cv
168.068 223.61 168.336 223.03 168.731 222.514 cv
cp
.0784314 .6 .988235 rgb
f
177.505 223.787 mo
177.622 224.164 179.219 224.448 179.408 224.408 cv
179.599 224.368 179.713 224.115 179.778 223.957 cv
180.245 222.82 180.512 221.579 180.524 220.348 cv
180.528 219.958 180.465 219.521 180.158 219.246 cv
179.883 218.999 179.411 218.947 179.074 219.094 cv
178.712 219.252 178.845 219.277 178.974 219.605 cv
179.436 220.786 178.316 223.183 177.505 223.787 cv
cp
f
173.109 220.256 mo
173.006 223.737 179.081 223.795 178.994 220.522 cv
178.872 215.959 178.614 215.436 176.615 214.728 cv
176.067 214.535 175.494 214.385 174.915 214.374 cv
172.804 214.333 173.621 215.484 173.701 216.289 cv
173.936 218.673 173.147 219.003 173.109 220.256 cv
cp
.952941 .662745 .517647 rgb
f
176.615 214.728 mo
176.067 214.535 175.494 214.385 174.915 214.374 cv
172.804 214.333 173.621 215.484 173.701 216.289 cv
173.765 216.944 173.752 217.441 173.698 217.847 cv
175.001 219.587 176.893 220.754 178.917 221.18 cv
178.971 220.978 179 220.76 178.994 220.522 cv
178.872 215.959 178.614 215.436 176.615 214.728 cv
cp
.933333 .611765 .462745 rgb
f
175.646 217.974 mo
175.47 217.826 175.298 217.675 175.13 217.519 cv
174.55 216.978 173.891 216.35 173.488 215.666 cv
172.193 213.469 172.13 210.525 173.974 208.612 cv
175.283 207.255 177.359 206.695 179.173 207.209 cv
179.663 207.349 180.132 207.56 180.585 207.793 cv
180.978 207.995 181.367 208.219 181.665 208.544 cv
181.861 208.757 182.012 209.007 182.151 209.262 cv
182.306 209.548 182.448 209.845 182.526 210.161 cv
182.88 211.583 181.933 213.036 182.474 214.439 cv
182.593 214.745 182.77 215.028 182.878 215.338 cv
182.986 215.648 183.017 216.007 182.846 216.284 cv
182.685 216.548 182.471 216.681 182.376 216.973 cv
182.247 217.37 182.158 217.79 182.046 218.193 cv
181.923 218.633 181.798 219.077 181.576 219.476 cv
181.031 220.451 180.244 220.512 179.27 220.129 cv
177.954 219.612 176.725 218.878 175.646 217.974 cv
cp
1 .74902 .635294 rgb
f
171.276 211.297 mo
171.374 208.529 172.189 208.06 173.241 207.178 cv
174.26 206.323 175.633 205.937 176.957 205.978 cv
178.31 206.019 179.633 206.483 180.776 207.196 cv
180.912 207.283 li
181.505 207.668 182.029 208.11 182.344 208.753 cv
182.51 209.094 182.637 209.463 182.7 209.837 cv
182.817 210.544 182.204 210.841 181.585 211.034 cv
180.753 211.293 179.576 210.938 178.726 210.846 cv
178.329 210.803 177.92 210.761 177.533 210.862 cv
177.145 210.963 176.778 211.241 176.689 211.631 cv
176.596 212.038 176.816 212.442 176.907 212.849 cv
177.088 213.655 176.68 214.531 176.002 214.981 cv
175.6 215.248 175.319 215.268 174.888 215.071 cv
174.502 214.895 174.105 214.595 173.68 214.858 cv
173.286 215.103 173.434 215.615 173.527 215.985 cv
173.545 216.055 173.944 216.637 173.729 216.639 cv
173.513 216.642 171.159 214.625 171.276 211.297 cv
cp
.215686 .25098 .290196 rgb
f
176.689 211.631 mo
176.596 212.038 176.816 212.442 176.907 212.849 cv
177.088 213.655 176.68 214.531 176.002 214.981 cv
175.6 215.248 175.319 215.268 174.888 215.071 cv
174.502 214.895 174.105 214.595 173.68 214.858 cv
173.286 215.103 173.571 215.565 173.664 215.935 cv
173.682 216.005 173.944 216.637 173.729 216.639 cv
173.513 216.642 171.159 214.625 171.276 211.297 cv
171.334 209.675 171.637 208.842 172.091 208.253 cv
172.091 208.253 173.354 208.74 174.48 209.538 cv
175.531 210.284 176.689 211.631 176.689 211.631 cv
cp
.141176 .164706 .192157 rgb
f
173.913 213.822 mo
172.968 213.758 172.729 214.93 173.377 215.835 cv
173.566 216.099 173.901 216.334 174.148 216.545 cv
175.84 217.985 176.265 216.426 175.728 215.936 cv
174.479 214.796 175.101 213.901 173.913 213.822 cv
cp
1 .74902 .635294 rgb
f
202.466 248.12 mo
202.463 249.537 li
186.076 259.06 li
186.08 257.643 li
202.466 248.12 li
cp
.215686 .25098 .290196 rgb
f
186.08 257.643 mo
186.076 259.06 li
175.907 253.19 li
175.911 251.772 li
186.08 257.643 li
cp
.188235 .219608 .227451 rgb
f
202.466 248.12 mo
186.08 257.643 li
175.911 251.772 li
192.298 242.249 li
202.466 248.12 li
cp
.215686 .25098 .290196 rgb
f
189.674 247.211 mo
185.221 249.782 li
182.793 248.379 li
187.245 245.809 li
189.674 247.211 li
cp
.0509804 .0745098 .0823529 rgb
f
180.372 253.35 mo
195.34 244.652 li
200.685 247.745 li
185.718 256.442 li
180.372 253.35 li
cp
f
167.374 238.683 mo
166.906 236.25 166.647 233.121 166.192 229.197 cv
166.069 228.141 166.107 227.049 166.321 226 cv
166.538 224.941 167.066 224.121 167.77 223.276 cv
168.089 222.893 168.502 222.498 169.01 222.505 cv
169.472 222.511 169.843 222.853 170.134 223.192 cv
171.886 225.241 172.465 228.137 172.398 230.751 cv
172.337 233.183 172.615 235.616 172.532 238.056 cv
172.516 238.52 172.529 239.018 172.418 239.475 cv
171.889 241.643 170.171 242.663 168.848 241.681 cv
168.201 241.2 167.628 240.005 167.374 238.683 cv
cp
.0823529 .85098 .992157 rgb
f
190.624 244.431 mo
190.753 244.699 191.234 245.406 191.445 245.615 cv
191.656 245.826 191.509 244.945 191.806 244.957 cv
192.259 244.975 192.752 245.263 193.094 244.967 cv
193.368 244.729 193.639 244.483 193.843 244.184 cv
194.047 243.885 194.183 243.526 194.157 243.164 cv
194.147 243.024 194.111 242.883 194.032 242.768 cv
193.833 242.562 li
193.431 242.205 193.028 241.849 192.626 241.492 cv
192.538 241.415 192.449 241.336 192.346 241.28 cv
192.207 241.204 192.048 241.171 191.891 241.161 cv
191.329 241.129 190.794 241.405 190.419 241.81 cv
190.239 242.005 190.028 242.277 189.969 242.543 cv
189.919 242.767 190.075 243.015 190.145 243.223 cv
190.284 243.634 190.434 244.041 190.624 244.431 cv
cp
.972549 .705882 .584314 rgb
f
190.095 243.349 mo
190.066 243.938 190.037 244.526 190.008 245.115 cv
189.997 245.342 189.986 245.572 190.04 245.793 cv
190.081 245.964 190.16 246.123 190.219 246.289 cv
190.273 246.441 190.311 246.598 190.378 246.745 cv
190.579 247.187 191.013 247.469 191.425 247.727 cv
191.593 247.832 191.766 247.939 191.962 247.974 cv
192.087 247.996 192.244 247.969 192.289 247.851 cv
192.289 247.673 li
192.257 247.501 192.22 247.325 192.116 247.186 cv
191.991 247.017 191.786 246.925 191.646 246.768 cv
191.405 246.498 191.404 246.084 191.516 245.74 cv
191.627 245.396 191.834 245.091 191.978 244.76 cv
192.121 244.428 192.198 244.036 192.042 243.71 cv
191.987 243.594 191.906 243.493 191.821 243.397 cv
191.625 243.175 191.402 242.968 191.132 242.845 cv
190.903 242.741 190.634 242.704 190.388 242.774 cv
190.115 242.852 190.108 243.092 190.095 243.349 cv
cp
f
192.821 244.079 mo
192.492 243.925 191.819 244.646 191.76 244.838 cv
191.618 245.303 192.094 244.914 192.698 245.846 cv
192.873 246.117 193.052 246.395 193.125 246.709 cv
193.178 246.938 193.203 247.224 193.418 247.32 cv
193.583 247.394 193.783 247.296 193.879 247.143 cv
193.929 247.47 194.424 247.206 194.521 246.877 cv
194.71 246.24 195.196 246.82 195.268 245.705 cv
195.452 245.784 li
196.2 245.17 194.64 243.38 193.961 242.682 cv
192.764 241.449 192.489 243.382 192.821 244.079 cv
cp
f
185.625 239.228 mo
186.774 238.062 187.981 236.952 189.346 236.003 cv
190.578 237.702 191.691 239.563 192.351 241.021 cv
192.963 242.375 190.349 243.639 189.719 242.941 cv
189.203 242.368 187.022 240.921 185.625 239.228 cv
cp
.0784314 .6 .988235 rgb
f
182.757 249.487 mo
183.051 249.642 183.817 250.204 184.044 250.447 cv
184.269 250.69 183.296 250.492 183.296 250.824 cv
183.298 251.329 183.601 251.888 183.256 252.258 cv
182.982 252.554 182.697 252.845 182.356 253.061 cv
182.015 253.277 181.61 253.414 181.209 253.37 cv
181.054 253.354 180.898 253.309 180.773 253.216 cv
180.551 252.987 li
180.169 252.525 179.788 252.063 179.407 251.601 cv
179.324 251.5 179.24 251.398 179.181 251.281 cv
179.102 251.124 179.072 250.946 179.068 250.769 cv
179.053 250.143 179.382 249.559 179.846 249.157 cv
180.071 248.964 180.383 248.739 180.681 248.684 cv
180.931 248.637 181.202 248.82 181.431 248.907 cv
181.883 249.077 182.33 249.26 182.757 249.487 cv
cp
1 .74902 .635294 rgb
f
181.573 248.856 mo
182.229 248.846 182.886 248.837 183.542 248.828 cv
183.795 248.824 184.052 248.821 184.296 248.889 cv
184.484 248.942 184.659 249.036 184.842 249.109 cv
185.008 249.175 185.182 249.223 185.343 249.303 cv
185.827 249.544 186.124 250.039 186.394 250.508 cv
186.505 250.698 186.618 250.896 186.649 251.115 cv
186.669 251.254 186.632 251.428 186.499 251.473 cv
186.3 251.467 li
186.112 251.424 185.916 251.376 185.765 251.255 cv
185.582 251.109 185.488 250.878 185.319 250.716 cv
185.027 250.438 184.567 250.42 184.179 250.531 cv
183.793 250.642 183.445 250.86 183.07 251.007 cv
182.695 251.153 182.256 251.224 181.899 251.038 cv
181.772 250.972 181.663 250.878 181.559 250.78 cv
181.319 250.553 181.098 250.296 180.972 249.991 cv
180.865 249.732 180.834 249.43 180.921 249.16 cv
181.019 248.859 181.286 248.86 181.573 248.856 cv
cp
f
179.513 250.781 mo
178.692 250.954 177.854 250.407 177.22 249.936 cv
175.692 248.804 168.225 242.61 167.723 239.726 cv
167.596 238.999 168.419 238.611 169.067 238.03 cv
169.557 237.591 172.106 238.114 172.562 238.65 cv
173.279 239.493 178.776 245.059 180.665 247.847 cv
180.915 248.216 181.157 248.623 181.15 249.062 cv
181.141 249.764 180.149 250.647 179.513 250.781 cv
cp
.0823529 .85098 .992157 rgb
f
182.279 251.919 mo
182.12 251.547 182.951 250.826 183.167 250.768 cv
183.689 250.628 183.237 251.142 184.251 251.851 cv
184.546 252.057 184.848 252.266 185.195 252.36 cv
185.448 252.428 185.766 252.467 185.864 252.71 cv
185.94 252.896 185.824 253.115 185.649 253.217 cv
186.01 253.285 185.698 253.826 185.328 253.921 cv
184.611 254.106 185.238 254.67 183.994 254.707 cv
184.074 254.915 li
183.361 255.723 181.431 253.916 180.679 253.135 cv
179.354 251.752 181.517 251.523 182.279 251.919 cv
cp
1 .74902 .635294 rgb
f
204.825 238.324 mo
206.05 239.036 li
205.965 238.987 205.848 238.995 205.718 239.069 cv
204.492 238.357 li
204.622 238.282 204.74 238.275 204.825 238.324 cv
cp
.227451 .27451 .282353 rgb
f
gsave
204.825 238.324 mo
206.05 239.036 li
205.965 238.987 205.848 238.995 205.718 239.069 cv
204.492 238.357 li
204.622 238.282 204.74 238.275 204.825 238.324 cv
clp
205.718 239.069 mo
204.492 238.357 li
204.635 238.3 li
205.86 239.012 li
205.718 239.069 li
cp
f
205.86 239.012 mo
204.635 238.3 li
204.816 238.32 li
206.041 239.032 li
205.86 239.012 li
cp
f
206.05 239.036 mo
204.816 238.32 li
206.05 239.036 li
cp
f
grestore
190.262 248.052 mo
189.037 247.34 li
204.492 238.357 li
205.718 239.069 li
190.262 248.052 li
cp
f
189.795 248.859 mo
188.569 248.147 li
188.568 247.85 188.778 247.49 189.037 247.34 cv
190.262 248.052 li
190.004 248.202 189.794 248.563 189.795 248.859 cv
cp
f
gsave
189.795 248.859 mo
188.569 248.147 li
188.568 247.85 188.778 247.49 189.037 247.34 cv
190.262 248.053 li
190.004 248.202 189.794 248.563 189.795 248.859 cv
clp
190.034 248.252 mo
188.808 247.54 li
189.037 247.34 li
190.262 248.052 li
190.034 248.252 li
cp
.207843 .247059 .254902 rgb
f
189.876 248.508 mo
188.651 247.795 li
188.692 247.704 188.745 247.616 188.808 247.54 cv
190.034 248.252 li
189.971 248.329 189.917 248.417 189.876 248.508 cv
cp
f
grestore
205.718 239.069 mo
205.976 238.921 206.185 239.039 206.186 239.336 cv
202.466 248.12 li
186.076 257.643 li
189.736 248.845 li
189.736 248.845 189.839 248.301 190.262 248.052 cv
205.718 239.069 li
cp
.215686 .25098 .290196 rgb
f
186.076 257.643 mo
184.85 256.931 li
188.651 247.795 li
189.876 248.508 li
186.076 257.643 li
cp
.188235 .219608 .227451 rgb
f
177.505 223.787 mo
177.505 223.787 176.626 224.801 175.815 225.276 cv
175.614 225.393 175.44 225.552 175.227 225.433 cv
174.185 224.853 172.235 222.416 172.017 221.076 cv
171.939 220.593 172.179 219.946 172.507 219.644 cv
173.296 219.296 li
173.327 219.376 173.391 220.317 173.667 220.972 cv
174.302 222.481 175.95 223.249 177.505 223.787 cv
cp
.0784314 .6 .988235 rgb
f
252.149 236.332 mo
247.878 232.96 244.584 228.407 242.757 223.165 cv
242.779 215.524 li
243.514 215.097 li
243.953 223.296 248.108 230.507 254.327 235.075 cv
252.149 236.332 li
241.158 214.056 mo
241.156 213.923 241.155 213.79 241.155 213.656 cv
241.155 212.824 241.19 211.999 241.259 211.185 cv
243.764 209.729 li
243.62 210.703 243.528 211.693 243.493 212.699 cv
241.158 214.056 li
292.777 199.935 mo
290.681 196.468 287.815 193.52 284.416 191.326 cv
286.646 190.031 li
289.93 192.344 292.708 195.323 294.787 198.774 cv
292.777 199.935 li
282.347 190.119 mo
281.469 189.659 280.563 189.247 279.631 188.885 cv
282.138 187.429 li
283.01 187.832 283.859 188.278 284.681 188.763 cv
282.347 190.119 li
.803922 .862745 .984314 rgb
f
242.757 223.165 mo
241.761 220.307 241.201 217.243 241.158 214.056 cv
243.493 212.699 li
243.482 213.016 243.476 213.336 243.476 213.656 cv
243.476 214.14 243.489 214.62 243.514 215.097 cv
242.779 215.524 li
242.757 223.165 li
284.416 191.326 mo
283.747 190.894 283.056 190.491 282.347 190.119 cv
284.681 188.763 li
285.354 189.159 286.009 189.583 286.646 190.031 cv
284.416 191.326 li
.854902 .909804 .992157 rgb
f
241.259 211.185 mo
242.193 200.172 249.306 190.921 259.118 186.912 cv
259.174 187.731 259.225 188.562 259.271 189.37 cv
251.113 192.991 245.117 200.605 243.764 209.729 cv
241.259 211.185 li
279.631 188.885 mo
276.655 187.732 273.418 187.098 270.034 187.098 cv
269.816 187.098 269.597 187.101 269.38 187.106 cv
269.294 186.335 269.184 185.563 269.05 184.794 cv
269.377 184.783 269.705 184.778 270.034 184.778 cv
274.356 184.778 278.456 185.727 282.138 187.429 cv
279.631 188.885 li
.937255 .964706 .996078 rgb
f
261.19 241.156 mo
257.875 240.091 254.821 238.443 252.149 236.332 cv
254.327 235.075 li
257.175 237.166 260.456 238.704 264.009 239.529 cv
261.19 241.156 li
.0627451 .0980392 .105882 rgb
f
263.22 241.727 mo
262.533 241.561 261.856 241.37 261.19 241.156 cv
264.009 239.529 li
264.502 239.643 265 239.743 265.503 239.83 cv
265.505 240.408 li
263.22 241.727 li
1 .831372 .219608 rgb
f
265.51 242.183 mo
264.736 242.062 263.972 241.909 263.22 241.727 cv
265.505 240.408 li
265.51 242.183 li
.984314 .780392 .054902 rgb
f
293.521 201.248 mo
293.285 200.803 293.037 200.365 292.777 199.935 cv
294.787 198.774 li
295.046 199.204 295.295 199.643 295.532 200.087 cv
293.521 201.248 li
1 .831372 .219608 rgb
f
267.013 242.38 mo
266.508 242.327 266.007 242.262 265.51 242.183 cv
265.505 240.408 li
265.503 239.83 li
265.999 239.915 266.502 239.987 267.006 240.044 cv
267.013 242.38 li
1 .717647 0 rgb
f
268.037 242.468 mo
267.694 242.444 267.353 242.415 267.013 242.38 cv
267.006 240.044 li
267.346 240.083 267.687 240.115 268.031 240.14 cv
268.037 242.468 li
294.511 203.334 mo
294.211 202.622 293.88 201.926 293.521 201.248 cv
295.532 200.087 li
295.894 200.764 296.228 201.457 296.536 202.165 cv
294.511 203.334 li
.984314 .780392 .054902 rgb
f
270.034 242.536 mo
269.363 242.536 268.697 242.513 268.037 242.468 cv
268.031 240.14 li
268.692 240.19 269.36 240.215 270.034 240.215 cv
270.176 240.215 270.319 240.214 270.461 240.211 cv
270.467 242.532 li
270.323 242.535 270.179 242.536 270.034 242.536 cv
.831372 .886274 .988235 rgb
f
295.75 206.997 mo
295.424 205.737 295.009 204.514 294.511 203.334 cv
296.536 202.165 li
297.044 203.337 297.478 204.549 297.83 205.796 cv
295.75 206.997 li
.92549 .960784 .996078 rgb
f
270.467 242.532 mo
270.461 240.211 li
270.966 240.204 271.465 240.182 271.963 240.146 cv
271.97 242.472 li
271.473 242.505 270.971 242.525 270.467 242.532 cv
1 .717647 0 rgb
f
296.099 208.538 mo
295.998 208.019 295.881 207.504 295.75 206.997 cv
297.83 205.796 li
297.971 206.297 298.1 206.804 298.214 207.317 cv
296.099 208.538 li
1 .831372 .219608 rgb
f
271.97 242.472 mo
271.963 240.146 li
285.729 239.157 296.592 227.676 296.592 213.656 cv
296.592 211.905 296.422 210.195 296.099 208.538 cv
298.214 207.317 li
298.671 209.357 298.912 211.479 298.912 213.656 cv
298.912 228.956 287.016 241.476 271.97 242.472 cv
.984314 .780392 .054902 rgb
f
259.271 189.37 mo
259.225 188.562 259.174 187.731 259.118 186.912 cv
260.404 186.387 261.736 185.951 263.106 185.614 cv
263.109 185.673 263.113 185.733 263.116 185.792 cv
263.159 186.558 263.196 187.287 263.229 187.978 cv
261.863 188.339 260.542 188.806 259.271 189.37 cv
.141176 .164706 .192157 rgb
f
263.229 187.978 mo
263.196 187.287 263.159 186.558 263.116 185.792 cv
263.113 185.733 263.109 185.673 263.106 185.614 cv
263.803 185.442 264.509 185.296 265.224 185.176 cv
265.602 185.312 266.007 185.382 266.426 185.382 cv
266.516 185.382 266.606 185.379 266.697 185.373 cv
267.048 185.346 267.406 185.242 267.672 185.011 cv
267.739 184.952 267.807 184.901 267.874 184.857 cv
268.264 184.828 268.655 184.807 269.05 184.794 cv
269.184 185.563 269.294 186.335 269.38 187.106 cv
267.259 187.158 265.199 187.458 263.229 187.978 cv
.215686 .25098 .290196 rgb
f
266.426 185.382 mo
266.007 185.382 265.602 185.312 265.224 185.176 cv
266.094 185.031 266.979 184.923 267.874 184.857 cv
267.807 184.901 267.739 184.952 267.672 185.011 cv
267.406 185.242 267.048 185.346 266.697 185.373 cv
266.606 185.379 266.516 185.382 266.426 185.382 cv
f
254.327 235.075 mo
248.108 230.507 243.953 223.296 243.514 215.097 cv
245.797 213.77 li
245.803 215.065 245.91 216.336 246.112 217.576 cv
245.747 218.136 245.515 218.798 245.515 219.388 cv
245.515 220.136 245.888 220.568 246.43 220.568 cv
246.54 220.568 246.657 220.55 246.78 220.513 cv
248.396 226.001 251.901 230.68 256.543 233.795 cv
254.327 235.075 li
243.493 212.699 mo
243.528 211.693 243.62 210.703 243.764 209.729 cv
246.416 208.188 li
246.183 209.201 246.013 210.237 245.91 211.294 cv
243.493 212.699 li
290.766 201.096 mo
288.648 197.606 285.674 194.695 282.135 192.652 cv
284.416 191.326 li
287.815 193.52 290.681 196.468 292.777 199.935 cv
290.766 201.096 li
279.929 191.525 mo
278.976 191.098 277.99 190.731 276.977 190.428 cv
279.631 188.885 li
280.563 189.247 281.469 189.659 282.347 190.119 cv
279.929 191.525 li
.803922 .862745 .984314 rgb
f
243.514 215.097 mo
243.489 214.62 243.476 214.14 243.476 213.656 cv
243.476 213.336 243.482 213.016 243.493 212.699 cv
245.91 211.294 li
245.835 212.071 245.797 212.859 245.797 213.656 cv
245.797 213.694 245.797 213.732 245.797 213.77 cv
243.514 215.097 li
282.135 192.652 mo
281.422 192.24 280.686 191.864 279.929 191.525 cv
282.347 190.119 li
283.056 190.491 283.747 190.894 284.416 191.326 cv
282.135 192.652 li
.854902 .909804 .992157 rgb
f
243.764 209.729 mo
245.117 200.605 251.113 192.991 259.271 189.37 cv
259.321 190.247 259.365 191.097 259.402 191.869 cv
252.929 195.034 248.074 201 246.416 208.188 cv
243.764 209.729 li
276.977 190.428 mo
274.777 189.772 272.447 189.419 270.034 189.419 cv
269.877 189.419 269.722 189.421 269.565 189.424 cv
269.527 188.65 269.466 187.878 269.38 187.106 cv
269.597 187.101 269.816 187.098 270.034 187.098 cv
273.418 187.098 276.655 187.732 279.631 188.885 cv
276.977 190.428 li
.937255 .964706 .996078 rgb
f
246.43 220.568 mo
245.888 220.568 245.515 220.136 245.515 219.388 cv
245.515 218.798 245.747 218.136 246.112 217.576 cv
246.275 218.577 246.499 219.557 246.78 220.513 cv
246.657 220.55 246.54 220.568 246.43 220.568 cv
.0823529 .85098 .992157 rgb
f
264.009 239.529 mo
260.456 238.704 257.175 237.166 254.327 235.075 cv
256.543 233.795 li
259.202 235.58 262.234 236.852 265.497 237.47 cv
265.5 238.668 li
264.009 239.529 li
.0627451 .0980392 .105882 rgb
f
265.503 239.83 mo
265 239.743 264.502 239.643 264.009 239.529 cv
265.5 238.668 li
265.503 239.83 li
1 .831372 .219608 rgb
f
291.509 202.41 mo
291.275 201.964 291.027 201.525 290.766 201.096 cv
292.777 199.935 li
293.037 200.365 293.285 200.803 293.521 201.248 cv
291.509 202.41 li
f
267.006 240.044 mo
266.502 239.987 265.999 239.915 265.503 239.83 cv
265.5 238.668 li
265.497 237.47 li
265.992 237.564 266.494 237.643 267 237.706 cv
267.006 240.044 li
1 .721569 0 rgb
f
268.031 240.14 mo
267.687 240.115 267.346 240.083 267.006 240.044 cv
267 237.706 li
267.34 237.748 267.68 237.784 268.024 237.812 cv
268.031 240.14 li
292.483 204.504 mo
292.191 203.788 291.866 203.089 291.509 202.41 cv
293.521 201.248 li
293.88 201.926 294.211 202.622 294.511 203.334 cv
292.483 204.504 li
.984314 .780392 .054902 rgb
f
270.034 240.215 mo
269.36 240.215 268.692 240.19 268.031 240.14 cv
268.024 237.812 li
268.687 237.866 269.358 237.894 270.034 237.894 cv
270.175 237.894 270.314 237.893 270.454 237.89 cv
270.461 240.211 li
270.319 240.214 270.176 240.215 270.034 240.215 cv
.831372 .886274 .988235 rgb
f
293.656 208.206 mo
293.362 206.93 292.969 205.694 292.483 204.504 cv
294.511 203.334 li
295.009 204.514 295.424 205.737 295.75 206.997 cv
293.656 208.206 li
.92549 .960784 .996078 rgb
f
270.461 240.211 mo
270.454 237.89 li
270.959 237.882 271.46 237.858 271.957 237.819 cv
271.963 240.146 li
271.465 240.182 270.966 240.204 270.461 240.211 cv
1 .721569 0 rgb
f
293.961 209.772 mo
293.876 209.244 293.774 208.722 293.656 208.206 cv
295.75 206.997 li
295.881 207.504 295.998 208.019 296.099 208.538 cv
293.961 209.772 li
1 .831372 .219608 rgb
f
271.963 240.146 mo
271.957 237.819 li
284.443 236.839 294.271 226.396 294.271 213.656 cv
294.271 212.335 294.165 211.037 293.961 209.772 cv
296.099 208.538 li
296.422 210.195 296.592 211.905 296.592 213.656 cv
296.592 227.676 285.729 239.157 271.963 240.146 cv
.984314 .780392 .054902 rgb
f
259.402 191.869 mo
259.365 191.097 259.321 190.247 259.271 189.37 cv
260.542 188.806 261.863 188.339 263.229 187.978 cv
263.27 188.825 263.306 189.616 263.337 190.356 cv
261.972 190.748 260.657 191.256 259.402 191.869 cv
.141176 .164706 .192157 rgb
f
263.337 190.356 mo
263.306 189.616 263.27 188.825 263.229 187.978 cv
265.199 187.458 267.259 187.158 269.38 187.106 cv
269.466 187.878 269.527 188.65 269.565 189.424 cv
267.409 189.465 265.32 189.787 263.337 190.356 cv
.219608 .25098 .286274 rgb
f
256.543 233.795 mo
251.901 230.68 248.396 226.001 246.78 220.513 cv
246.904 220.476 247.034 220.419 247.168 220.342 cv
247.811 219.97 248.369 219.223 248.642 218.444 cv
249.97 224.402 253.723 229.446 258.811 232.486 cv
256.543 233.795 li
246.112 217.576 mo
245.91 216.336 245.803 215.065 245.797 213.77 cv
248.153 212.401 li
248.129 212.816 248.117 213.235 248.117 213.656 cv
248.117 214.58 248.175 215.49 248.286 216.384 cv
248.172 216.329 248.045 216.301 247.906 216.301 cv
247.684 216.301 247.433 216.373 247.168 216.526 cv
246.766 216.758 246.398 217.136 246.112 217.576 cv
245.91 211.294 mo
246.013 210.237 246.183 209.201 246.416 208.188 cv
249.31 206.506 li
248.942 207.575 248.654 208.68 248.453 209.816 cv
245.91 211.294 li
288.756 202.256 mo
286.607 198.735 283.492 195.867 279.78 194.021 cv
282.135 192.652 li
285.674 194.695 288.648 197.606 290.766 201.096 cv
288.756 202.256 li
277.385 193.003 mo
276.318 192.624 275.214 192.324 274.078 192.112 cv
276.977 190.428 li
277.99 190.731 278.976 191.098 279.929 191.525 cv
277.385 193.003 li
.811765 .866667 .984314 rgb
f
245.797 213.77 mo
245.797 213.732 245.797 213.694 245.797 213.656 cv
245.797 212.859 245.835 212.071 245.91 211.294 cv
248.453 209.816 li
248.303 210.662 248.202 211.525 248.153 212.401 cv
245.797 213.77 li
279.78 194.021 mo
279.006 193.636 278.207 193.296 277.385 193.003 cv
279.929 191.525 li
280.686 191.864 281.422 192.24 282.135 192.652 cv
279.78 194.021 li
.858823 .913725 .992157 rgb
f
246.416 208.188 mo
248.074 201 252.929 195.034 259.402 191.869 cv
259.452 192.891 259.491 193.778 259.518 194.423 cv
254.775 197.022 251.098 201.324 249.31 206.506 cv
246.416 208.188 li
274.078 192.112 mo
272.768 191.868 271.416 191.74 270.034 191.74 cv
269.892 191.74 269.75 191.741 269.608 191.744 cv
269.618 190.97 269.603 190.196 269.565 189.424 cv
269.722 189.421 269.877 189.419 270.034 189.419 cv
272.447 189.419 274.777 189.772 276.977 190.428 cv
274.078 192.112 li
.941176 .964706 .996078 rgb
f
246.78 220.513 mo
246.499 219.557 246.275 218.577 246.112 217.576 cv
246.398 217.136 246.766 216.758 247.168 216.526 cv
247.433 216.373 247.684 216.301 247.906 216.301 cv
248.045 216.301 248.172 216.329 248.286 216.384 cv
248.372 217.081 248.491 217.769 248.642 218.444 cv
248.369 219.223 247.811 219.97 247.168 220.342 cv
247.034 220.419 246.904 220.476 246.78 220.513 cv
.0862745 .854902 .992157 rgb
f
265.497 237.47 mo
262.234 236.852 259.202 235.58 256.543 233.795 cv
258.811 232.486 li
260.847 233.702 263.097 234.597 265.49 235.102 cv
265.497 237.47 li
.0627451 .0980392 .101961 rgb
f
289.497 203.571 mo
289.265 203.124 289.017 202.685 288.756 202.256 cv
290.766 201.096 li
291.027 201.525 291.275 201.964 291.509 202.41 cv
289.497 203.571 li
1 .835294 .215686 rgb
f
267 237.706 mo
266.494 237.643 265.992 237.564 265.497 237.47 cv
265.49 235.102 li
265.985 235.206 266.487 235.294 266.993 235.364 cv
267 237.706 li
1 .72549 0 rgb
f
268.024 237.812 mo
267.68 237.784 267.34 237.748 267 237.706 cv
266.993 235.364 li
267.333 235.411 267.674 235.45 268.018 235.482 cv
268.024 237.812 li
290.452 205.677 mo
290.17 204.955 289.851 204.253 289.497 203.571 cv
291.509 202.41 li
291.866 203.089 292.191 203.788 292.483 204.504 cv
290.452 205.677 li
.984314 .784314 .054902 rgb
f
270.034 237.894 mo
269.358 237.894 268.687 237.866 268.024 237.812 cv
268.018 235.482 li
268.682 235.542 269.354 235.573 270.034 235.573 cv
270.172 235.573 270.31 235.572 270.448 235.569 cv
270.454 237.89 li
270.314 237.893 270.175 237.894 270.034 237.894 cv
.835294 .890196 .988235 rgb
f
291.542 209.426 mo
291.289 208.132 290.922 206.878 290.452 205.677 cv
292.483 204.504 li
292.969 205.694 293.362 206.93 293.656 208.206 cv
291.542 209.426 li
.929412 .960784 .996078 rgb
f
270.454 237.89 mo
270.448 235.569 li
270.953 235.56 271.454 235.534 271.95 235.491 cv
271.957 237.819 li
271.46 237.858 270.959 237.882 270.454 237.89 cv
1 .72549 0 rgb
f
291.794 211.024 mo
291.729 210.485 291.645 209.952 291.542 209.426 cv
293.656 208.206 li
293.774 208.722 293.876 209.244 293.961 209.772 cv
291.794 211.024 li
1 .835294 .215686 rgb
f
271.957 237.819 mo
271.95 235.491 li
283.157 234.52 291.95 225.115 291.95 213.656 cv
291.95 212.766 291.897 211.887 291.794 211.024 cv
293.961 209.772 li
294.165 211.037 294.271 212.335 294.271 213.656 cv
294.271 226.396 284.443 236.839 271.957 237.819 cv
.984314 .784314 .054902 rgb
f
259.518 194.423 mo
259.491 193.778 259.452 192.891 259.402 191.869 cv
260.657 191.256 261.972 190.748 263.337 190.356 cv
263.374 191.224 263.406 192.021 263.437 192.75 cv
262.068 193.182 260.756 193.745 259.518 194.423 cv
.145098 .168627 .188235 rgb
f
263.437 192.75 mo
263.406 192.021 263.374 191.224 263.337 190.356 cv
265.32 189.787 267.409 189.465 269.565 189.424 cv
269.603 190.196 269.618 190.97 269.608 191.744 cv
267.461 191.785 265.39 192.135 263.437 192.75 cv
.223529 .254902 .282353 rgb
f
258.811 232.486 mo
253.723 229.446 249.97 224.402 248.642 218.444 cv
248.756 218.12 248.82 217.79 248.82 217.48 cv
248.82 216.924 248.614 216.543 248.286 216.384 cv
248.175 215.49 248.117 214.58 248.117 213.656 cv
248.117 213.235 248.129 212.816 248.153 212.401 cv
250.621 210.966 li
250.501 211.846 250.438 212.744 250.438 213.656 cv
250.438 221.284 254.796 227.894 261.157 231.131 cv
258.811 232.486 li
248.453 209.816 mo
248.654 208.68 248.942 207.575 249.31 206.506 cv
252.679 204.548 li
252.069 205.708 251.572 206.936 251.203 208.218 cv
248.453 209.816 li
286.747 203.416 mo
285.348 201.031 li
285.127 201.159 li
285.127 201.159 li
285.348 201.031 li
284.689 200.648 li
282.682 198.389 280.161 196.597 277.31 195.456 cv
279.78 194.021 li
283.492 195.867 286.607 198.735 288.756 202.256 cv
286.747 203.416 li
274.631 194.603 mo
273.366 194.299 272.053 194.118 270.706 194.072 cv
274.078 192.112 li
275.214 192.324 276.318 192.624 277.385 193.003 cv
274.631 194.603 li
.819608 .870588 .984314 rgb
f
248.153 212.401 mo
248.202 211.525 248.303 210.662 248.453 209.816 cv
251.203 208.218 li
250.946 209.11 250.75 210.027 250.621 210.966 cv
248.153 212.401 li
277.31 195.456 mo
276.446 195.111 275.551 194.824 274.631 194.603 cv
277.385 193.003 li
278.207 193.296 279.006 193.636 279.78 194.021 cv
277.31 195.456 li
.866667 .913725 .992157 rgb
f
249.31 206.506 mo
251.098 201.324 254.775 197.022 259.518 194.423 cv
259.533 194.783 259.544 195.068 259.552 195.257 cv
258.446 196.16 257.38 197.114 256.316 198.067 cv
255.848 198.485 255.379 198.908 254.982 199.396 cv
254.657 199.794 254.226 200.334 254.277 200.869 cv
254.287 200.977 254.33 201.074 254.398 201.162 cv
254.388 201.249 254.385 201.333 254.393 201.411 cv
254.403 201.516 254.444 201.611 254.509 201.698 cv
253.82 202.591 253.208 203.544 252.679 204.548 cv
249.31 206.506 li
270.706 194.072 mo
270.483 194.065 270.259 194.061 270.034 194.061 cv
269.858 194.061 269.683 194.063 269.508 194.068 cv
269.565 193.293 269.599 192.518 269.608 191.744 cv
269.75 191.741 269.892 191.74 270.034 191.74 cv
271.416 191.74 272.768 191.868 274.078 192.112 cv
270.706 194.072 li
.941176 .968627 .996078 rgb
f
248.642 218.444 mo
248.491 217.769 248.372 217.081 248.286 216.384 cv
248.614 216.543 248.82 216.924 248.82 217.48 cv
248.82 217.79 248.756 218.12 248.642 218.444 cv
.0862745 .858823 .992157 rgb
f
265.49 235.102 mo
263.097 234.597 260.847 233.702 258.811 232.486 cv
261.157 231.131 li
262.515 231.823 263.966 232.36 265.483 232.721 cv
265.49 235.102 li
.0666667 .101961 .101961 rgb
f
287.511 204.718 mo
287.511 204.718 li
287.061 203.952 li
286.986 203.82 286.91 203.69 286.832 203.561 cv
286.747 203.416 li
288.756 202.256 li
289.017 202.685 289.265 203.124 289.497 203.571 cv
287.511 204.718 li
1 .839216 .207843 rgb
f
266.993 235.364 mo
266.487 235.294 265.985 235.206 265.49 235.102 cv
265.483 232.721 li
265.978 232.839 266.479 232.938 266.987 233.017 cv
266.993 235.364 li
1 .733333 0 rgb
f
285.127 201.159 mo
284.984 200.986 284.838 200.816 284.689 200.648 cv
285.348 201.031 li
285.127 201.159 li
1 .839216 .207843 rgb
f
268.018 235.482 mo
267.674 235.45 267.333 235.411 266.993 235.364 cv
266.987 233.017 li
267.325 233.07 267.667 233.114 268.011 233.149 cv
268.018 235.482 li
288.416 206.852 mo
288.042 205.843 287.588 204.874 287.061 203.952 cv
287.511 204.718 li
289.497 203.571 li
289.851 204.253 290.17 204.955 290.452 205.677 cv
288.416 206.852 li
286.832 203.561 mo
286.323 202.717 285.753 201.914 285.127 201.159 cv
285.348 201.031 li
286.747 203.416 li
286.832 203.561 li
.988235 .792157 .0509804 rgb
f
270.034 235.573 mo
269.354 235.573 268.682 235.542 268.018 235.482 cv
268.011 233.149 li
268.676 233.218 269.351 233.252 270.034 233.252 cv
270.17 233.252 270.306 233.251 270.441 233.248 cv
270.448 235.569 li
270.31 235.572 270.172 235.573 270.034 235.573 cv
.843137 .890196 .988235 rgb
f
289.402 210.661 mo
289.2 209.344 288.866 208.069 288.416 206.852 cv
290.452 205.677 li
290.922 206.878 291.289 208.132 291.542 209.426 cv
289.402 210.661 li
.933333 .964706 .996078 rgb
f
270.448 235.569 mo
270.441 233.248 li
270.947 233.238 271.448 233.208 271.944 233.161 cv
271.95 235.491 li
271.454 235.534 270.953 235.56 270.448 235.569 cv
1 .733333 0 rgb
f
289.583 212.3 mo
289.545 211.747 289.485 211.201 289.402 210.661 cv
291.542 209.426 li
291.645 209.952 291.729 210.485 291.794 211.024 cv
289.583 212.3 li
1 .839216 .207843 rgb
f
271.95 235.491 mo
271.944 233.161 li
281.87 232.201 289.629 223.835 289.629 213.656 cv
289.629 213.201 289.614 212.748 289.583 212.3 cv
291.794 211.024 li
291.897 211.887 291.95 212.766 291.95 213.656 cv
291.95 225.115 283.157 234.52 271.95 235.491 cv
.988235 .792157 .0509804 rgb
f
254.509 201.698 mo
254.444 201.611 254.403 201.516 254.393 201.411 cv
254.385 201.333 254.388 201.249 254.398 201.162 cv
254.476 201.264 254.587 201.353 254.718 201.432 cv
254.647 201.52 254.578 201.609 254.509 201.698 cv
.152941 .172549 .184314 rgb
f
254.718 201.432 mo
254.587 201.353 254.476 201.264 254.398 201.162 cv
254.33 201.074 254.287 200.977 254.277 200.869 cv
254.226 200.334 254.657 199.794 254.982 199.396 cv
255.379 198.908 255.848 198.485 256.316 198.067 cv
257.38 197.114 258.446 196.16 259.552 195.257 cv
259.558 195.427 259.562 195.521 259.563 195.524 cv
259.647 195.924 259.824 196.34 260.341 196.622 cv
258.174 197.858 256.266 199.495 254.718 201.432 cv
.0666667 .101961 .101961 rgb
f
260.341 196.622 mo
259.824 196.34 259.647 195.924 259.563 195.524 cv
259.562 195.521 259.558 195.427 259.552 195.257 cv
259.544 195.068 259.533 194.783 259.518 194.423 cv
260.756 193.745 262.068 193.182 263.437 192.75 cv
263.475 193.653 263.511 194.453 263.551 195.159 cv
262.431 195.551 261.357 196.043 260.341 196.622 cv
.152941 .172549 .184314 rgb
f
263.551 195.159 mo
263.511 194.453 263.475 193.653 263.437 192.75 cv
265.39 192.135 267.461 191.785 269.608 191.744 cv
269.599 192.518 269.565 193.293 269.508 194.068 cv
267.425 194.123 265.424 194.503 263.551 195.159 cv
.231373 .262745 .27451 rgb
f
261.157 231.131 mo
254.796 227.894 250.438 221.284 250.438 213.656 cv
250.438 212.744 250.501 211.846 250.621 210.966 cv
253.282 209.42 li
252.941 210.775 252.759 212.195 252.759 213.656 cv
252.759 214.031 252.771 214.403 252.794 214.772 cv
252.769 214.919 252.756 215.065 252.756 215.207 cv
252.756 215.491 252.809 215.729 252.905 215.916 cv
253.727 222.204 257.929 227.428 263.628 229.705 cv
261.157 231.131 li
251.203 208.218 mo
251.572 206.936 252.069 205.708 252.679 204.548 cv
256.299 202.445 li
256.389 202.46 256.47 202.472 256.538 202.481 cv
256.638 202.494 256.736 202.505 256.834 202.512 cv
255.847 203.68 255.012 204.98 254.36 206.383 cv
251.203 208.218 li
282.016 201.212 mo
279.976 199.248 277.454 197.781 274.646 197.004 cv
277.31 195.456 li
280.161 196.597 282.682 198.389 284.689 200.648 cv
283.844 200.157 li
282.016 201.212 li
271.469 196.441 mo
270.996 196.402 270.517 196.382 270.034 196.382 cv
269.777 196.382 269.521 196.387 269.266 196.399 cv
269.338 195.867 269.398 195.335 269.447 194.804 cv
270.706 194.072 li
272.053 194.118 273.366 194.299 274.631 194.603 cv
271.469 196.441 li
.831372 .87451 .984314 rgb
f
250.621 210.966 mo
250.75 210.027 250.946 209.11 251.203 208.218 cv
254.36 206.383 li
253.911 207.35 253.548 208.366 253.282 209.42 cv
250.621 210.966 li
274.646 197.004 mo
273.622 196.721 272.56 196.53 271.469 196.441 cv
274.631 194.603 li
275.551 194.824 276.446 195.111 277.31 195.456 cv
274.646 197.004 li
.87451 .917647 .992157 rgb
f
252.679 204.548 mo
253.208 203.544 253.82 202.591 254.509 201.698 cv
254.832 202.131 255.741 202.351 256.299 202.445 cv
252.679 204.548 li
263.71 197.576 mo
263.714 197.535 263.717 197.493 263.721 197.452 cv
263.724 197.405 263.727 197.357 263.729 197.309 cv
263.739 197.394 263.75 197.476 263.762 197.556 cv
263.745 197.562 263.727 197.57 263.71 197.576 cv
269.447 194.804 mo
269.47 194.558 269.49 194.313 269.508 194.068 cv
269.683 194.063 269.858 194.061 270.034 194.061 cv
270.259 194.061 270.483 194.065 270.706 194.072 cv
269.447 194.804 li
.945098 .968627 .996078 rgb
f
252.905 215.916 mo
252.809 215.729 252.756 215.491 252.756 215.207 cv
252.756 215.065 252.769 214.919 252.794 214.772 cv
252.819 215.157 252.856 215.538 252.905 215.916 cv
.0941176 .862745 .992157 rgb
f
265.483 232.721 mo
263.966 232.36 262.515 231.823 261.157 231.131 cv
263.628 229.705 li
264.228 229.945 264.845 230.152 265.477 230.324 cv
265.483 232.721 li
.0705882 .105882 .0980392 rgb
f
287.061 203.952 mo
286.832 203.561 li
286.91 203.69 286.986 203.82 287.061 203.952 cv
1 .847059 .2 rgb
f
266.987 233.017 mo
266.479 232.938 265.978 232.839 265.483 232.721 cv
265.477 230.324 li
265.969 230.459 266.471 230.572 266.98 230.663 cv
266.987 233.017 li
1 .745098 0 rgb
f
283.084 202.338 mo
282.745 201.947 282.388 201.571 282.016 201.212 cv
283.844 200.157 li
284.689 200.648 li
284.838 200.816 284.984 200.986 285.127 201.159 cv
283.084 202.338 li
1 .847059 .2 rgb
f
268.011 233.149 mo
267.667 233.114 267.325 233.07 266.987 233.017 cv
266.98 230.663 li
267.319 230.723 267.66 230.773 268.005 230.814 cv
268.011 233.149 li
286.372 208.032 mo
285.645 205.919 284.519 203.99 283.084 202.338 cv
285.127 201.159 li
285.753 201.914 286.323 202.717 286.832 203.561 cv
287.061 203.952 li
287.588 204.874 288.042 205.843 288.416 206.852 cv
286.372 208.032 li
.988235 .8 .0509804 rgb
f
270.034 233.252 mo
269.351 233.252 268.676 233.218 268.011 233.149 cv
268.005 230.814 li
268.671 230.892 269.348 230.932 270.034 230.932 cv
270.168 230.932 270.302 230.93 270.435 230.927 cv
270.441 233.248 li
270.306 233.251 270.17 233.252 270.034 233.252 cv
.854902 .898039 .988235 rgb
f
287.222 211.92 mo
287.088 210.572 286.798 209.27 286.372 208.032 cv
288.416 206.852 li
288.866 208.069 289.2 209.344 289.402 210.661 cv
287.222 211.92 li
.937255 .964706 .996078 rgb
f
270.441 233.248 mo
270.435 230.927 li
270.942 230.916 271.442 230.882 271.937 230.828 cv
271.944 233.161 li
271.448 233.208 270.947 233.238 270.441 233.248 cv
1 .745098 0 rgb
f
287.309 213.613 mo
287.307 213.042 287.278 212.477 287.222 211.92 cv
289.402 210.661 li
289.485 211.201 289.545 211.747 289.583 212.3 cv
287.309 213.613 li
1 .847059 .2 rgb
f
271.944 233.161 mo
271.937 230.828 li
280.582 229.88 287.309 222.554 287.309 213.656 cv
287.309 213.642 287.309 213.628 287.309 213.613 cv
289.583 212.3 li
289.614 212.748 289.629 213.201 289.629 213.656 cv
289.629 223.835 281.87 232.201 271.944 233.161 cv
.988235 .8 .0509804 rgb
f
256.834 202.512 mo
256.736 202.505 256.638 202.494 256.538 202.481 cv
256.47 202.472 256.389 202.46 256.299 202.445 cv
255.741 202.351 254.832 202.131 254.509 201.698 cv
254.578 201.609 254.647 201.52 254.718 201.432 cv
255.219 201.733 256.013 201.875 256.392 201.925 cv
256.623 201.956 256.848 201.971 257.07 201.971 cv
257.153 201.971 257.235 201.969 257.317 201.965 cv
257.153 202.143 256.991 202.327 256.834 202.512 cv
263.298 197.744 mo
263.419 197.505 263.457 197.224 263.479 196.954 cv
263.494 196.75 263.491 196.546 263.48 196.342 cv
263.525 196.245 263.568 196.141 263.607 196.032 cv
263.642 196.509 263.682 196.934 263.729 197.309 cv
263.727 197.357 263.724 197.405 263.721 197.452 cv
263.717 197.493 263.714 197.535 263.71 197.576 cv
263.571 197.631 263.435 197.686 263.298 197.744 cv
.156863 .176471 .176471 rgb
f
257.07 201.971 mo
256.848 201.971 256.623 201.956 256.392 201.925 cv
256.013 201.875 255.219 201.733 254.718 201.432 cv
256.266 199.495 258.174 197.858 260.341 196.622 cv
260.722 196.83 261.288 196.965 262.136 196.965 cv
262.367 196.965 262.618 196.955 262.892 196.934 cv
263.128 196.916 263.322 196.676 263.48 196.342 cv
263.491 196.546 263.494 196.75 263.479 196.954 cv
263.457 197.224 263.419 197.505 263.298 197.744 cv
261.01 198.714 258.975 200.163 257.317 201.965 cv
257.235 201.969 257.153 201.971 257.07 201.971 cv
.0705882 .105882 .0980392 rgb
f
262.136 196.965 mo
261.288 196.965 260.722 196.83 260.341 196.622 cv
261.357 196.043 262.431 195.551 263.551 195.159 cv
263.569 195.468 263.587 195.759 263.607 196.032 cv
263.568 196.141 263.525 196.245 263.48 196.342 cv
263.322 196.676 263.128 196.916 262.892 196.934 cv
262.618 196.955 262.367 196.965 262.136 196.965 cv
.156863 .176471 .176471 rgb
f
263.762 197.556 mo
263.75 197.476 263.739 197.394 263.729 197.309 cv
263.682 196.934 263.642 196.509 263.607 196.032 cv
263.587 195.759 263.569 195.468 263.551 195.159 cv
265.424 194.503 267.425 194.123 269.508 194.068 cv
269.49 194.313 269.47 194.558 269.447 194.804 cv
269.398 195.335 269.338 195.867 269.266 196.399 cv
267.332 196.483 265.48 196.886 263.762 197.556 cv
.243137 .270588 .266667 rgb
f
263.628 229.705 mo
257.929 227.428 253.727 222.204 252.905 215.916 cv
253.063 216.221 253.334 216.387 253.67 216.387 cv
253.893 216.387 254.143 216.315 254.409 216.162 cv
254.691 215.998 254.958 215.763 255.19 215.484 cv
255.904 221.34 260.002 226.151 265.47 227.902 cv
265.472 228.64 li
263.628 229.705 li
252.794 214.772 mo
252.771 214.403 252.759 214.031 252.759 213.656 cv
252.759 212.195 252.941 210.775 253.282 209.42 cv
256.338 207.644 li
255.725 209.038 255.319 210.543 255.158 212.12 cv
255.154 212.12 255.15 212.12 255.146 212.12 cv
254.924 212.12 254.673 212.193 254.408 212.346 cv
253.618 212.802 252.958 213.822 252.794 214.772 cv
254.36 206.383 mo
255.012 204.98 255.847 203.68 256.834 202.512 cv
256.967 202.523 257.099 202.528 257.229 202.528 cv
257.773 202.528 258.298 202.437 258.832 202.251 cv
259.569 201.996 260.008 201.548 260.411 200.883 cv
260.744 200.334 261.062 199.734 261.584 199.373 cv
261.843 199.223 li
262.394 198.955 263.085 198.895 263.445 198.405 cv
263.485 198.35 263.519 198.292 263.548 198.232 cv
263.846 198.059 li
263.904 198.357 263.971 198.611 264.051 198.824 cv
264.108 198.979 264.183 199.114 264.272 199.233 cv
264.008 199.555 263.747 199.88 263.489 200.207 cv
261.682 201.088 260.079 202.323 258.769 203.821 cv
254.36 206.383 li
279.91 202.428 mo
277.641 200.43 274.761 199.11 271.587 198.782 cv
274.646 197.004 li
277.454 197.781 279.976 199.248 282.016 201.212 cv
279.91 202.428 li
269.039 197.853 mo
269.066 197.719 269.089 197.584 269.111 197.45 cv
269.167 197.099 269.219 196.749 269.266 196.399 cv
269.521 196.387 269.777 196.382 270.034 196.382 cv
270.517 196.382 270.996 196.402 271.469 196.441 cv
269.039 197.853 li
.843137 .882353 .984314 rgb
f
253.282 209.42 mo
253.548 208.366 253.911 207.35 254.36 206.383 cv
258.769 203.821 li
257.776 204.957 256.953 206.245 256.338 207.644 cv
253.282 209.42 li
271.587 198.782 mo
271.076 198.73 270.558 198.703 270.034 198.703 cv
269.697 198.703 269.363 198.714 269.032 198.736 cv
268.993 198.578 268.96 198.42 268.936 198.262 cv
268.978 198.128 269.011 197.991 269.039 197.853 cv
271.469 196.441 li
272.56 196.53 273.622 196.721 274.646 197.004 cv
271.587 198.782 li
.886274 .921569 .992157 rgb
f
261.584 199.373 mo
261.629 199.342 261.676 199.313 261.724 199.286 cv
261.762 199.263 261.802 199.243 261.843 199.223 cv
261.584 199.373 li
263.548 198.232 mo
263.645 198.031 263.687 197.803 263.71 197.576 cv
263.727 197.57 263.745 197.562 263.762 197.556 cv
263.787 197.736 263.815 197.904 263.846 198.059 cv
263.548 198.232 li
.952941 .968627 .996078 rgb
f
253.67 216.387 mo
253.334 216.387 253.063 216.221 252.905 215.916 cv
252.856 215.538 252.819 215.157 252.794 214.772 cv
252.958 213.822 253.618 212.802 254.408 212.346 cv
254.673 212.193 254.924 212.12 255.146 212.12 cv
255.15 212.12 255.154 212.12 255.158 212.12 cv
255.106 212.625 255.08 213.138 255.08 213.656 cv
255.08 214.275 255.117 214.885 255.19 215.484 cv
254.958 215.763 254.691 215.998 254.409 216.162 cv
254.143 216.315 253.893 216.387 253.67 216.387 cv
.0980392 .870588 .992157 rgb
f
265.477 230.324 mo
264.845 230.152 264.228 229.945 263.628 229.705 cv
265.472 228.64 li
265.477 230.324 li
.0745098 .109804 .0941176 rgb
f
266.98 230.663 mo
266.471 230.572 265.969 230.459 265.477 230.324 cv
265.472 228.64 li
265.47 227.902 li
265.96 228.058 266.463 228.191 266.974 228.297 cv
266.98 230.663 li
1 .756863 0 rgb
f
281.031 203.523 mo
280.677 203.139 280.303 202.773 279.91 202.428 cv
282.016 201.212 li
282.388 201.571 282.745 201.947 283.084 202.338 cv
281.031 203.523 li
1 .854902 .192157 rgb
f
268.005 230.814 mo
267.66 230.773 267.319 230.723 266.98 230.663 cv
266.974 228.297 li
267.311 228.368 267.653 228.426 267.999 228.473 cv
268.005 230.814 li
284.318 209.218 mo
283.652 207.072 282.516 205.134 281.031 203.523 cv
283.084 202.338 li
284.519 203.99 285.645 205.919 286.372 208.032 cv
284.318 209.218 li
.988235 .811765 .0470588 rgb
f
270.034 230.932 mo
269.348 230.932 268.671 230.892 268.005 230.814 cv
267.999 228.473 li
268.664 228.564 269.343 228.611 270.034 228.611 cv
270.166 228.611 270.297 228.609 270.429 228.606 cv
270.435 230.927 li
270.302 230.93 270.168 230.932 270.034 230.932 cv
.866667 .901961 .988235 rgb
f
284.981 213.214 mo
284.941 211.826 284.711 210.485 284.318 209.218 cv
286.372 208.032 li
286.798 209.27 287.088 210.572 287.222 211.92 cv
284.981 213.214 li
.941176 .964706 .996078 rgb
f
270.435 230.927 mo
270.429 228.606 li
270.936 228.593 271.437 228.554 271.931 228.492 cv
271.937 230.828 li
271.442 230.882 270.942 230.916 270.435 230.927 cv
1 .756863 0 rgb
f
284.929 214.987 mo
284.968 214.549 284.988 214.105 284.988 213.656 cv
284.988 213.508 284.986 213.361 284.981 213.214 cv
287.222 211.92 li
287.278 212.477 287.307 213.042 287.309 213.613 cv
284.929 214.987 li
1 .854902 .192157 rgb
f
271.937 230.828 mo
271.931 228.492 li
278.86 227.614 284.312 221.995 284.929 214.987 cv
287.309 213.613 li
287.309 213.628 287.309 213.642 287.309 213.656 cv
287.309 222.554 280.582 229.88 271.937 230.828 cv
.988235 .811765 .0470588 rgb
f
268.82 198.751 mo
268.81 198.712 268.8 198.673 268.79 198.634 cv
268.849 198.515 268.897 198.39 268.936 198.262 cv
268.96 198.42 268.993 198.578 269.032 198.736 cv
268.961 198.74 268.891 198.745 268.82 198.751 cv
.168627 .184314 .168627 rgb
f
263.489 200.207 mo
263.747 199.88 264.008 199.555 264.272 199.233 cv
264.407 199.412 264.574 199.552 264.764 199.658 cv
264.329 199.821 263.903 200.005 263.489 200.207 cv
268.722 198.759 mo
268.746 198.718 268.768 198.676 268.79 198.634 cv
268.8 198.673 268.81 198.712 268.82 198.751 cv
268.787 198.754 268.754 198.757 268.722 198.759 cv
.0745098 .109804 .0941176 rgb
f
257.229 202.528 mo
257.099 202.528 256.967 202.523 256.834 202.512 cv
256.991 202.327 257.153 202.143 257.317 201.965 cv
257.768 201.941 258.208 201.853 258.654 201.697 cv
259.381 201.444 259.814 201.002 260.212 200.345 cv
260.569 199.755 260.909 199.107 261.508 198.766 cv
262.068 198.447 262.825 198.415 263.206 197.895 cv
263.241 197.847 263.272 197.797 263.298 197.744 cv
263.435 197.686 263.571 197.631 263.71 197.576 cv
263.687 197.803 263.645 198.031 263.548 198.232 cv
263.519 198.292 263.485 198.35 263.445 198.405 cv
263.085 198.895 262.394 198.955 261.843 199.223 cv
261.802 199.243 261.762 199.263 261.724 199.286 cv
261.676 199.313 261.629 199.342 261.584 199.373 cv
261.062 199.734 260.744 200.334 260.411 200.883 cv
260.008 201.548 259.569 201.996 258.832 202.251 cv
258.298 202.437 257.773 202.528 257.229 202.528 cv
.168627 .184314 .168627 rgb
f
257.317 201.965 mo
258.975 200.163 261.01 198.714 263.298 197.744 cv
263.272 197.797 263.241 197.847 263.206 197.895 cv
262.825 198.415 262.068 198.447 261.508 198.766 cv
260.909 199.107 260.569 199.755 260.212 200.345 cv
259.814 201.002 259.381 201.444 258.654 201.697 cv
258.208 201.853 257.768 201.941 257.317 201.965 cv
.0745098 .109804 .0941176 rgb
f
264.764 199.658 mo
264.574 199.552 264.407 199.412 264.272 199.233 cv
264.183 199.114 264.108 198.979 264.051 198.824 cv
263.971 198.611 263.904 198.357 263.846 198.059 cv
263.815 197.904 263.787 197.736 263.762 197.556 cv
265.48 196.886 267.332 196.483 269.266 196.399 cv
269.219 196.749 269.167 197.099 269.111 197.45 cv
269.089 197.584 269.066 197.719 269.039 197.853 cv
269.011 197.991 268.978 198.128 268.936 198.262 cv
268.897 198.39 268.849 198.515 268.79 198.634 cv
268.768 198.676 268.746 198.718 268.722 198.759 cv
267.34 198.879 266.012 199.187 264.764 199.658 cv
.258824 .282353 .254902 rgb
f
265.47 227.902 mo
260.002 226.151 255.904 221.34 255.19 215.484 cv
255.709 214.863 256.061 214.027 256.061 213.3 cv
256.061 212.558 255.694 212.127 255.158 212.12 cv
255.319 210.543 255.725 209.038 256.338 207.644 cv
260.667 205.129 li
260.671 205.14 260.677 205.152 260.682 205.163 cv
258.643 207.406 257.401 210.386 257.401 213.656 cv
257.401 219.022 260.745 223.606 265.463 225.438 cv
265.47 227.902 li
258.769 203.821 mo
260.079 202.323 261.682 201.088 263.489 200.207 cv
263.073 200.734 262.662 201.265 262.253 201.797 cv
258.769 203.821 li
277.766 203.666 mo
275.629 202.009 272.947 201.023 270.034 201.023 cv
269.742 201.023 269.453 201.033 269.166 201.053 cv
269.182 201.027 269.197 200.999 269.21 200.971 cv
269.339 200.704 269.343 200.399 269.318 200.101 cv
271.587 198.782 li
274.761 199.11 277.641 200.43 279.91 202.428 cv
277.766 203.666 li
.862745 .890196 .980392 rgb
f
256.338 207.644 mo
256.953 206.245 257.776 204.957 258.769 203.821 cv
262.253 201.797 li
262.215 201.846 262.177 201.895 262.139 201.944 cv
261.756 202.441 261.372 202.944 261.071 203.496 cv
260.826 203.947 260.5 204.556 260.647 205.073 cv
260.653 205.092 260.659 205.111 260.667 205.129 cv
256.338 207.644 li
269.318 200.101 mo
269.315 200.062 269.311 200.023 269.307 199.985 cv
269.261 199.561 269.132 199.149 269.032 198.736 cv
269.363 198.714 269.697 198.703 270.034 198.703 cv
270.558 198.703 271.076 198.73 271.587 198.782 cv
269.318 200.101 li
.898039 .929412 .992157 rgb
f
255.19 215.484 mo
255.117 214.885 255.08 214.275 255.08 213.656 cv
255.08 213.138 255.106 212.625 255.158 212.12 cv
255.694 212.127 256.061 212.558 256.061 213.3 cv
256.061 214.027 255.709 214.863 255.19 215.484 cv
.105882 .882353 .992157 rgb
f
266.974 228.297 mo
266.463 228.191 265.96 228.058 265.47 227.902 cv
265.463 225.438 li
265.95 225.627 266.453 225.787 266.967 225.915 cv
266.974 228.297 li
1 .772549 0 rgb
f
278.961 204.718 mo
278.586 204.343 278.187 203.991 277.766 203.666 cv
279.91 202.428 li
280.303 202.773 280.677 203.139 281.031 203.523 cv
278.961 204.718 li
1 .866667 .180392 rgb
f
267.999 228.473 mo
267.653 228.426 267.311 228.368 266.974 228.297 cv
266.967 225.915 li
267.303 225.999 267.646 226.07 267.992 226.126 cv
267.999 228.473 li
282.247 210.413 mo
281.667 208.225 280.516 206.271 278.961 204.718 cv
281.031 203.523 li
282.516 205.134 283.652 207.072 284.318 209.218 cv
282.247 210.413 li
.992157 .823529 .0431373 rgb
f
270.034 228.611 mo
269.343 228.611 268.664 228.564 267.999 228.473 cv
267.992 226.126 li
268.657 226.234 269.339 226.29 270.034 226.29 cv
270.164 226.29 270.293 226.288 270.422 226.284 cv
270.429 228.606 li
270.297 228.609 270.166 228.611 270.034 228.611 cv
.882353 .909804 .988235 rgb
f
282.635 214.569 mo
282.656 214.267 282.667 213.963 282.667 213.656 cv
282.667 212.535 282.521 211.448 282.247 210.413 cv
284.318 209.218 li
284.711 210.485 284.941 211.826 284.981 213.214 cv
282.635 214.569 li
.94902 .968627 .996078 rgb
f
270.429 228.606 mo
270.422 226.284 li
270.931 226.269 271.432 226.223 271.924 226.15 cv
271.931 228.492 li
271.437 228.554 270.936 228.593 270.429 228.606 cv
1 .772549 0 rgb
f
282.351 216.475 mo
282.493 215.856 282.588 215.219 282.635 214.569 cv
284.981 213.214 li
284.986 213.361 284.988 213.508 284.988 213.656 cv
284.988 214.105 284.968 214.549 284.929 214.987 cv
282.351 216.475 li
1 .866667 .180392 rgb
f
271.931 228.492 mo
271.924 226.15 li
277.075 225.377 281.208 221.495 282.351 216.475 cv
284.929 214.987 li
284.312 221.995 278.86 227.614 271.931 228.492 cv
.992157 .823529 .0431373 rgb
f
268.217 201.153 mo
268.493 200.988 268.743 200.801 268.882 200.514 cv
269.025 200.216 269.012 199.868 268.977 199.539 cv
268.949 199.273 268.887 199.011 268.82 198.751 cv
268.891 198.745 268.961 198.74 269.032 198.736 cv
269.132 199.149 269.261 199.561 269.307 199.985 cv
269.311 200.023 269.315 200.062 269.318 200.101 cv
269.343 200.399 269.339 200.704 269.21 200.971 cv
269.197 200.999 269.182 201.027 269.166 201.053 cv
268.847 201.074 268.53 201.108 268.217 201.153 cv
.180392 .196078 .156863 rgb
f
260.682 205.163 mo
260.677 205.152 260.671 205.14 260.667 205.129 cv
260.659 205.111 260.653 205.092 260.647 205.073 cv
260.5 204.556 260.826 203.947 261.071 203.496 cv
261.372 202.944 261.756 202.441 262.139 201.944 cv
262.177 201.895 262.215 201.846 262.253 201.797 cv
262.662 201.265 263.073 200.734 263.489 200.207 cv
263.903 200.005 264.329 199.821 264.764 199.658 cv
265.127 199.86 265.571 199.94 266.023 199.94 cv
266.501 199.94 266.987 199.851 267.395 199.725 cv
267.888 199.573 268.358 199.295 268.651 198.871 cv
268.676 198.834 268.699 198.797 268.722 198.759 cv
268.754 198.757 268.787 198.754 268.82 198.751 cv
268.887 199.011 268.949 199.273 268.977 199.539 cv
269.012 199.868 269.025 200.216 268.882 200.514 cv
268.743 200.801 268.493 200.988 268.217 201.153 cv
265.246 201.581 262.609 203.043 260.682 205.163 cv
.0784314 .113725 .0862745 rgb
f
266.023 199.94 mo
265.571 199.94 265.127 199.86 264.764 199.658 cv
266.012 199.187 267.34 198.879 268.722 198.759 cv
268.699 198.797 268.676 198.834 268.651 198.871 cv
268.358 199.295 267.888 199.573 267.395 199.725 cv
266.987 199.851 266.501 199.94 266.023 199.94 cv
.278431 .298039 .239216 rgb
f
265.463 225.438 mo
260.745 223.606 257.401 219.022 257.401 213.656 cv
257.401 210.386 258.643 207.406 260.682 205.163 cv
260.715 205.229 260.762 205.287 260.82 205.339 cv
260.826 205.426 260.839 205.509 260.861 205.585 cv
261.024 206.154 262.106 206.253 262.799 206.254 cv
262.818 206.254 262.837 206.253 262.855 206.253 cv
262.115 206.972 261.481 207.8 260.982 208.712 cv
260.402 209.343 259.997 210.248 259.997 211.027 cv
259.997 211.1 260 211.17 260.007 211.236 cv
259.82 212.013 259.721 212.823 259.721 213.656 cv
259.721 217.708 262.057 221.214 265.456 222.9 cv
265.463 225.438 li
275.553 204.944 mo
273.957 203.931 272.064 203.344 270.034 203.344 cv
268.87 203.344 267.751 203.537 266.707 203.893 cv
266.943 203.26 267.164 202.587 267.678 202.153 cv
268.154 201.751 268.855 201.576 269.166 201.053 cv
269.453 201.033 269.742 201.023 270.034 201.023 cv
272.947 201.023 275.629 202.009 277.766 203.666 cv
275.553 204.944 li
.882353 .901961 .980392 rgb
f
260.007 211.236 mo
260 211.17 259.997 211.1 259.997 211.027 cv
259.997 210.248 260.402 209.343 260.982 208.712 cv
260.552 209.497 260.222 210.344 260.007 211.236 cv
.113725 .890196 .992157 rgb
f
266.967 225.915 mo
266.453 225.787 265.95 225.627 265.463 225.438 cv
265.456 222.9 li
265.937 223.139 266.44 223.341 266.96 223.503 cv
266.967 225.915 li
1 .796078 0 rgb
f
276.863 205.93 mo
276.454 205.568 276.016 205.238 275.553 204.944 cv
277.766 203.666 li
278.187 203.991 278.586 204.343 278.961 204.718 cv
276.863 205.93 li
1 .87451 .168627 rgb
f
267.992 226.126 mo
267.646 226.07 267.303 225.999 266.967 225.915 cv
266.96 223.503 li
267.295 223.608 267.637 223.696 267.985 223.766 cv
267.992 226.126 li
280.146 211.625 mo
279.697 209.377 278.516 207.392 276.863 205.93 cv
278.961 204.718 li
280.516 206.271 281.667 208.225 282.247 210.413 cv
280.146 211.625 li
.992157 .839216 .0392157 rgb
f
270.034 226.29 mo
269.339 226.29 268.657 226.234 267.992 226.126 cv
267.985 223.766 li
268.648 223.899 269.333 223.969 270.034 223.969 cv
270.162 223.969 270.289 223.967 270.416 223.962 cv
270.422 226.284 li
270.293 226.288 270.164 226.29 270.034 226.29 cv
.898039 .917647 .984314 rgb
f
280.067 216.051 mo
280.249 215.283 280.346 214.481 280.346 213.656 cv
280.346 212.961 280.277 212.282 280.146 211.625 cv
282.247 210.413 li
282.521 211.448 282.667 212.535 282.667 213.656 cv
282.667 213.963 282.656 214.267 282.635 214.569 cv
280.067 216.051 li
.956863 .972549 .996078 rgb
f
270.422 226.284 mo
270.416 223.962 li
270.927 223.944 271.428 223.888 271.918 223.798 cv
271.924 226.15 li
271.432 226.223 270.931 226.269 270.422 226.284 cv
1 .796078 0 rgb
f
279.266 218.257 mo
279.613 217.562 279.883 216.824 280.067 216.051 cv
282.635 214.569 li
282.588 215.219 282.493 215.856 282.351 216.475 cv
279.266 218.257 li
1 .87451 .168627 rgb
f
271.924 226.15 mo
271.918 223.798 li
275.144 223.202 277.845 221.104 279.266 218.257 cv
282.351 216.475 li
281.208 221.495 277.075 225.377 271.924 226.15 cv
.992157 .839216 .0392157 rgb
f
262.799 206.254 mo
262.106 206.253 261.024 206.154 260.861 205.585 cv
260.839 205.509 260.826 205.426 260.82 205.339 cv
261.187 205.668 261.998 205.733 262.555 205.733 cv
262.697 205.733 262.822 205.729 262.92 205.724 cv
263.128 205.713 263.329 205.691 263.526 205.657 cv
263.293 205.846 263.07 206.045 262.855 206.253 cv
262.837 206.253 262.818 206.254 262.799 206.254 cv
266.078 204.13 mo
266.196 203.932 266.295 203.713 266.387 203.47 cv
266.63 202.826 266.846 202.127 267.371 201.682 cv
267.621 201.471 267.933 201.323 268.217 201.153 cv
268.53 201.108 268.847 201.074 269.166 201.053 cv
268.855 201.576 268.154 201.751 267.678 202.153 cv
267.164 202.587 266.943 203.26 266.707 203.893 cv
266.494 203.965 266.284 204.045 266.078 204.13 cv
.196078 .207843 .14902 rgb
f
262.555 205.733 mo
261.998 205.733 261.187 205.668 260.82 205.339 cv
260.762 205.287 260.715 205.229 260.682 205.163 cv
262.609 203.043 265.246 201.581 268.217 201.153 cv
267.933 201.323 267.621 201.471 267.371 201.682 cv
266.846 202.127 266.63 202.826 266.387 203.47 cv
266.295 203.713 266.196 203.932 266.078 204.13 cv
265.151 204.516 264.292 205.033 263.526 205.657 cv
263.329 205.691 263.128 205.713 262.92 205.724 cv
262.822 205.729 262.697 205.733 262.555 205.733 cv
.0862745 .121569 .0823529 rgb
f
265.456 222.9 mo
262.057 221.214 259.721 217.708 259.721 213.656 cv
259.721 212.823 259.82 212.013 260.007 211.236 cv
260.071 211.855 260.421 212.207 260.911 212.207 cv
261.133 212.207 261.384 212.134 261.649 211.981 cv
261.909 211.831 262.155 211.619 262.374 211.369 cv
262.158 212.094 262.042 212.862 262.042 213.656 cv
262.042 216.364 263.389 218.757 265.449 220.203 cv
265.456 222.9 li
263.288 209.37 mo
263.297 209.286 263.301 209.202 263.301 209.119 cv
263.301 208.372 262.929 207.94 262.387 207.94 cv
262.165 207.94 261.914 208.012 261.649 208.165 cv
261.412 208.302 261.186 208.49 260.982 208.712 cv
261.481 207.8 262.115 206.972 262.855 206.253 cv
262.975 206.252 263.08 206.249 263.165 206.244 cv
263.97 206.202 264.684 205.995 265.379 205.598 cv
266.056 205.211 266.406 204.691 266.68 203.964 cv
266.689 203.94 266.698 203.917 266.707 203.893 cv
267.751 203.537 268.87 203.344 270.034 203.344 cv
272.064 203.344 273.957 203.931 275.553 204.944 cv
273.185 206.311 li
272.218 205.895 271.153 205.665 270.034 205.665 cv
267.198 205.665 264.706 207.143 263.288 209.37 cv
.909804 .909804 .980392 rgb
f
260.911 212.207 mo
260.421 212.207 260.071 211.855 260.007 211.236 cv
260.222 210.344 260.552 209.497 260.982 208.712 cv
261.186 208.49 261.412 208.302 261.649 208.165 cv
261.914 208.012 262.165 207.94 262.387 207.94 cv
262.929 207.94 263.301 208.372 263.301 209.119 cv
263.301 209.202 263.297 209.286 263.288 209.37 cv
262.897 209.985 262.587 210.656 262.374 211.369 cv
262.155 211.619 261.909 211.831 261.649 211.981 cv
261.384 212.134 261.133 212.207 260.911 212.207 cv
.12549 .905882 .992157 rgb
f
266.96 223.503 mo
266.44 223.341 265.937 223.139 265.456 222.9 cv
265.449 220.203 li
265.916 220.531 266.42 220.81 266.953 221.033 cv
266.96 223.503 li
1 .815686 0 rgb
f
274.708 207.174 mo
274.236 206.833 273.726 206.543 273.185 206.311 cv
275.553 204.944 li
276.016 205.238 276.454 205.568 276.863 205.93 cv
274.708 207.174 li
1 .890196 .152941 rgb
f
267.985 223.766 mo
267.637 223.696 267.295 223.608 266.96 223.503 cv
266.953 221.033 li
267.284 221.171 267.627 221.288 267.979 221.382 cv
267.985 223.766 li
277.987 212.872 mo
277.759 210.528 276.518 208.481 274.708 207.174 cv
276.863 205.93 li
278.516 207.392 279.697 209.377 280.146 211.625 cv
277.987 212.872 li
.992157 .858823 .0392157 rgb
f
270.034 223.969 mo
269.333 223.969 268.648 223.899 267.985 223.766 cv
267.979 221.382 li
268.635 221.556 269.323 221.648 270.034 221.648 cv
270.16 221.648 270.285 221.645 270.409 221.64 cv
270.416 223.962 li
270.289 223.967 270.162 223.969 270.034 223.969 cv
.921569 .92549 .984314 rgb
f
276.774 217.952 mo
277.566 216.712 278.025 215.238 278.025 213.656 cv
278.025 213.392 278.013 213.13 277.987 212.872 cv
280.146 211.625 li
280.277 212.282 280.346 212.961 280.346 213.656 cv
280.346 214.481 280.249 215.283 280.067 216.051 cv
276.774 217.952 li
.964706 .976471 .996078 rgb
f
270.416 223.962 mo
270.409 221.64 li
270.416 221.639 270.423 221.639 270.43 221.639 cv
271.914 222.501 li
271.918 223.798 li
271.428 223.888 270.927 223.944 270.416 223.962 cv
1 .815686 0 rgb
f
271.914 222.501 mo
270.43 221.639 li
273.097 221.509 275.421 220.071 276.774 217.952 cv
280.067 216.051 li
279.883 216.824 279.613 217.562 279.266 218.257 cv
271.914 222.501 li
1 .890196 .152941 rgb
f
271.918 223.798 mo
271.914 222.501 li
279.266 218.257 li
277.845 221.104 275.144 223.202 271.918 223.798 cv
.992157 .858823 .0392157 rgb
f
262.855 206.253 mo
263.07 206.045 263.293 205.846 263.526 205.657 cv
264.081 205.562 264.597 205.375 265.103 205.085 cv
265.546 204.832 265.846 204.521 266.078 204.13 cv
266.284 204.045 266.494 203.965 266.707 203.893 cv
266.698 203.917 266.689 203.94 266.68 203.964 cv
266.406 204.691 266.056 205.211 265.379 205.598 cv
264.684 205.995 263.97 206.202 263.165 206.244 cv
263.08 206.249 262.975 206.252 262.855 206.253 cv
.211765 .223529 .133333 rgb
f
263.526 205.657 mo
264.292 205.033 265.151 204.516 266.078 204.13 cv
265.846 204.521 265.546 204.832 265.103 205.085 cv
264.597 205.375 264.081 205.562 263.526 205.657 cv
.0941176 .133333 .0705882 rgb
f
265.449 220.203 mo
263.389 218.757 262.042 216.364 262.042 213.656 cv
262.042 212.862 262.158 212.094 262.374 211.369 cv
262.863 210.811 263.216 210.06 263.288 209.37 cv
264.706 207.143 267.198 205.665 270.034 205.665 cv
271.153 205.665 272.218 205.895 273.185 206.311 cv
270.274 207.991 li
270.194 207.988 270.115 207.986 270.034 207.986 cv
266.902 207.986 264.363 210.525 264.363 213.656 cv
264.363 214.899 264.762 216.048 265.44 216.982 cv
265.449 220.203 li
.937255 .92549 .980392 rgb
f
262.374 211.369 mo
262.587 210.656 262.897 209.985 263.288 209.37 cv
263.216 210.06 262.863 210.811 262.374 211.369 cv
.137255 .917647 .992157 rgb
f
266.953 221.033 mo
266.42 220.81 265.916 220.531 265.449 220.203 cv
265.44 216.982 li
265.849 217.547 266.36 218.033 266.946 218.414 cv
266.953 221.033 li
1 .843137 0 rgb
f
272.404 208.504 mo
271.752 208.203 271.032 208.023 270.274 207.991 cv
273.185 206.311 li
273.726 206.543 274.236 206.833 274.708 207.174 cv
272.404 208.504 li
1 .909804 .137255 rgb
f
267.979 221.382 mo
267.627 221.288 267.284 221.171 266.953 221.033 cv
266.946 218.414 li
267.267 218.623 267.61 218.8 267.972 218.941 cv
267.979 221.382 li
275.679 214.204 mo
275.696 214.024 275.705 213.841 275.705 213.656 cv
275.705 211.371 274.352 209.402 272.404 208.504 cv
274.708 207.174 li
276.518 208.481 277.759 210.528 277.987 212.872 cv
275.679 214.204 li
.996078 .878431 .0313725 rgb
f
270.034 221.648 mo
269.323 221.648 268.635 221.556 267.979 221.382 cv
267.972 218.941 li
268.287 219.064 268.617 219.16 268.957 219.225 cv
271.754 220.851 li
270.409 221.627 li
270.409 221.64 li
270.285 221.645 270.16 221.648 270.034 221.648 cv
.945098 .937255 .984314 rgb
f
271.754 220.851 mo
268.957 219.225 li
269.305 219.293 269.666 219.328 270.034 219.328 cv
272.981 219.328 275.403 217.079 275.679 214.204 cv
277.987 212.872 li
278.013 213.13 278.025 213.392 278.025 213.656 cv
278.025 215.238 277.566 216.712 276.774 217.952 cv
271.754 220.851 li
.976471 .980392 .996078 rgb
f
270.409 221.64 mo
270.409 221.627 li
270.43 221.639 li
270.423 221.639 270.416 221.639 270.409 221.64 cv
1 .843137 0 rgb
f
270.43 221.639 mo
270.409 221.627 li
271.754 220.851 li
276.774 217.952 li
275.421 220.071 273.097 221.509 270.43 221.639 cv
1 .909804 .137255 rgb
f
265.44 216.982 mo
264.762 216.048 264.363 214.899 264.363 213.656 cv
264.363 210.525 266.902 207.986 270.034 207.986 cv
270.115 207.986 270.194 207.988 270.274 207.991 cv
265.422 210.792 li
265.44 216.982 li
.968627 .937255 .976471 rgb
f
266.946 218.414 mo
266.36 218.033 265.849 217.547 265.44 216.982 cv
265.422 210.792 li
266.927 211.666 li
266.929 212.396 li
266.771 212.785 266.684 213.211 266.684 213.656 cv
266.684 214.109 266.773 214.541 266.936 214.935 cv
266.946 218.414 li
1 .870588 0 rgb
f
266.927 211.666 mo
265.422 210.792 li
270.274 207.991 li
271.032 208.023 271.752 208.203 272.404 208.504 cv
269 210.469 li
268.548 210.616 268.139 210.856 267.794 211.166 cv
266.927 211.666 li
1 .92549 .113725 rgb
f
267.972 218.941 mo
267.61 218.8 267.267 218.623 266.946 218.414 cv
266.936 214.935 li
267.439 216.151 268.637 217.007 270.034 217.007 cv
270.428 217.007 270.806 216.939 271.157 216.814 cv
267.971 218.653 li
267.972 218.941 li
272.201 216.212 mo
272.925 215.597 273.384 214.68 273.384 213.656 cv
273.384 211.807 271.884 210.307 270.034 210.307 cv
269.673 210.307 269.326 210.364 269 210.469 cv
272.404 208.504 li
274.352 209.402 275.705 211.371 275.705 213.656 cv
275.705 213.841 275.696 214.024 275.679 214.204 cv
272.201 216.212 li
266.929 212.396 mo
266.927 211.666 li
267.794 211.166 li
267.42 211.502 267.122 211.922 266.929 212.396 cv
1 .901961 .027451 rgb
f
268.957 219.225 mo
268.617 219.16 268.287 219.064 267.972 218.941 cv
267.971 218.653 li
268.957 219.225 li
.968627 .94902 .984314 rgb
f
270.034 219.328 mo
269.666 219.328 269.305 219.293 268.957 219.225 cv
267.971 218.653 li
271.157 216.814 li
271.543 216.677 271.895 216.471 272.201 216.212 cv
275.679 214.204 li
275.403 217.079 272.981 219.328 270.034 219.328 cv
.988235 .980392 .996078 rgb
f
266.936 214.935 mo
266.773 214.541 266.684 214.109 266.684 213.656 cv
266.684 213.211 266.771 212.785 266.929 212.396 cv
266.936 214.935 li
1 .905882 0 rgb
f
267.794 211.166 mo
268.139 210.856 268.548 210.616 269 210.469 cv
267.794 211.166 li
1 .945098 .0941176 rgb
f
270.034 217.007 mo
268.637 217.007 267.439 216.151 266.936 214.935 cv
266.929 212.396 li
267.122 211.922 267.42 211.502 267.794 211.166 cv
269 210.469 li
269.326 210.364 269.673 210.307 270.034 210.307 cv
271.884 210.307 273.384 211.807 273.384 213.656 cv
273.384 214.68 272.925 215.597 272.201 216.212 cv
271.157 216.814 li
270.806 216.939 270.428 217.007 270.034 217.007 cv
1 .929412 .0235294 rgb
f
271.157 216.814 mo
272.201 216.212 li
271.895 216.471 271.543 216.677 271.157 216.814 cv
1 .988235 .996078 rgb
f
328.627 148.659 mo
328.627 144.835 li
331.939 142.923 li
331.939 146.748 li
328.627 148.659 li
.974902 .985882 .998431 rgb
f
101.896 280.029 mo
101.896 276.205 li
105.209 274.293 li
105.209 278.117 li
101.896 280.029 li
.941176 .964706 .996078 rgb
f
111.696 338.872 mo
111.696 335.047 li
115.008 333.135 li
115.008 336.959 li
111.696 338.872 li
.952941 .976471 1 rgb
f
135.372 360.022 mo
135.372 356.197 li
138.684 354.285 li
138.685 358.11 li
135.372 360.022 li
f
351.583 267.024 mo
351.503 266.701 351.417 266.379 351.327 266.06 cv
351.327 263.348 li
354.639 261.435 li
354.639 265.26 li
351.583 267.024 li
f
351.327 267.172 mo
351.327 266.06 li
351.417 266.379 351.503 266.701 351.583 267.024 cv
351.327 267.172 li
.964706 .980392 1 rgb
f
323.478 179.615 mo
323.478 175.791 li
326.79 173.879 li
326.79 177.703 li
323.478 179.615 li
.968504 .982284 .998031 rgb
f
214.934 338.955 mo
214.933 335.13 li
218.246 333.218 li
218.246 337.042 li
214.934 338.955 li
.964706 .984314 1 rgb
f
235.187 129.91 mo
235.187 126.085 li
238.499 124.173 li
238.499 127.998 li
235.187 129.91 li
.892026 .901176 .908497 rgb
f
145.529 242.935 mo
144.718 242.935 144.06 242.278 144.06 241.467 cv
144.06 240.656 144.718 239.998 145.529 239.998 cv
146.34 239.998 146.998 240.656 146.998 241.467 cv
146.998 242.278 146.34 242.935 145.529 242.935 cv
.803922 .862745 .984314 rgb
f
145.529 261.767 mo
144.705 261.767 144.038 261.1 144.038 260.276 cv
144.038 259.453 144.705 258.785 145.529 258.785 cv
146.353 258.785 147.02 259.453 147.02 260.276 cv
147.02 261.1 146.353 261.767 145.529 261.767 cv
.858823 .913725 .992157 rgb
f
145.529 280.599 mo
144.693 280.599 144.015 279.921 144.015 279.085 cv
144.015 278.249 144.693 277.572 145.529 277.572 cv
146.365 277.572 147.043 278.249 147.043 279.085 cv
147.043 279.921 146.365 280.599 145.529 280.599 cv
.0901961 .866667 .992157 rgb
f
145.529 299.431 mo
144.681 299.431 143.993 298.743 143.993 297.895 cv
143.993 297.046 144.681 296.359 145.529 296.359 cv
146.378 296.359 147.065 297.046 147.065 297.895 cv
147.065 298.743 146.378 299.431 145.529 299.431 cv
.0980392 .886274 .996078 rgb
f
145.529 318.263 mo
144.668 318.263 143.971 317.565 143.971 316.704 cv
143.971 315.844 144.668 315.146 145.529 315.146 cv
146.39 315.146 147.087 315.844 147.087 316.704 cv
147.087 317.565 146.39 318.263 145.529 318.263 cv
.913725 .94902 .996078 rgb
f
145.301 337.078 mo
145.173 337.06 145.049 337.026 144.933 336.978 cv
145.056 337.012 145.177 337.045 145.301 337.078 cv
.941176 .968627 1 rgb
f
145.529 337.095 mo
145.451 337.095 145.375 337.089 145.301 337.078 cv
145.177 337.045 145.056 337.012 144.933 336.978 cv
144.355 336.743 143.948 336.176 143.948 335.514 cv
143.948 334.64 144.656 333.933 145.529 333.933 cv
146.402 333.933 147.11 334.64 147.11 335.514 cv
147.11 336.386 146.402 337.095 145.529 337.095 cv
.964706 .980392 1 rgb
f
145.529 355.927 mo
144.644 355.927 143.926 355.208 143.926 354.323 cv
143.926 353.616 144.384 353.015 145.019 352.802 cv
145.7 353.314 146.403 353.817 147.132 354.313 cv
147.132 354.316 147.132 354.32 147.132 354.323 cv
147.132 355.208 146.415 355.927 145.529 355.927 cv
.952941 .976471 1 rgb
f
147.132 354.313 mo
146.403 353.817 145.7 353.314 145.019 352.802 cv
145.179 352.749 145.35 352.719 145.529 352.719 cv
146.411 352.719 147.127 353.432 147.132 354.313 cv
.964706 .980392 1 rgb
f
337.442 114.248 mo
336.631 114.248 335.973 113.59 335.973 112.779 cv
335.973 111.968 336.631 111.31 337.442 111.31 cv
338.253 111.31 338.91 111.968 338.91 112.779 cv
338.91 113.59 338.253 114.248 337.442 114.248 cv
1 1 1 rgb
f
337.442 133.08 mo
336.618 133.08 335.951 132.412 335.951 131.589 cv
335.951 130.765 336.618 130.097 337.442 130.097 cv
338.265 130.097 338.933 130.765 338.933 131.589 cv
338.933 132.412 338.265 133.08 337.442 133.08 cv
.92792 .928581 .929243 rgb
f
337.442 151.911 mo
336.606 151.911 335.928 151.234 335.928 150.398 cv
335.928 149.562 336.606 148.884 337.442 148.884 cv
338.278 148.884 338.955 149.562 338.955 150.398 cv
338.955 151.234 338.278 151.911 337.442 151.911 cv
.881046 .884967 .887582 rgb
f
337.442 170.743 mo
336.593 170.743 335.906 170.056 335.906 169.207 cv
335.906 168.359 336.593 167.671 337.442 167.671 cv
338.29 167.671 338.978 168.359 338.978 169.207 cv
338.978 170.056 338.29 170.743 337.442 170.743 cv
.85827 .866144 .874018 rgb
f
337.442 189.575 mo
336.581 189.575 335.883 188.877 335.883 188.016 cv
335.883 187.156 336.581 186.457 337.442 186.457 cv
338.302 186.457 339 187.156 339 188.016 cv
339 188.877 338.302 189.575 337.442 189.575 cv
.861438 .871895 .887582 rgb
f
338.868 206.142 mo
338.053 205.957 337.233 205.786 336.408 205.63 cv
336.685 205.39 337.046 205.244 337.442 205.244 cv
338.07 205.244 338.613 205.611 338.868 206.142 cv
.88589 .905452 .928274 rgb
f
337.442 208.407 mo
336.568 208.407 335.861 207.699 335.861 206.826 cv
335.861 206.348 336.073 205.92 336.408 205.63 cv
337.233 205.786 338.053 205.957 338.868 206.142 cv
338.967 206.349 339.023 206.581 339.023 206.826 cv
339.023 207.699 338.315 208.407 337.442 208.407 cv
.878754 .895594 .915802 rgb
f
337.442 227.238 mo
336.556 227.238 335.838 226.521 335.838 225.635 cv
335.838 224.75 336.556 224.031 337.442 224.031 cv
338.327 224.031 339.045 224.75 339.045 225.635 cv
339.045 226.521 338.327 227.238 337.442 227.238 cv
.945098 .968627 .996078 rgb
f
82.9963 88.207 mo
82.1853 88.207 81.5278 87.5495 81.5278 86.7386 cv
81.5278 85.9275 82.1853 85.2702 82.9963 85.2702 cv
83.8073 85.2702 84.4655 85.9275 84.4655 86.7386 cv
84.4655 87.5495 83.8073 88.207 82.9963 88.207 cv
.92792 .928581 .929243 rgb
f
82.9963 107.039 mo
82.1729 107.039 81.5053 106.372 81.5053 105.548 cv
81.5053 104.725 82.1729 104.057 82.9963 104.057 cv
83.8198 104.057 84.4879 104.725 84.4879 105.548 cv
84.4879 106.372 83.8198 107.039 82.9963 107.039 cv
.870004 .871219 .872434 rgb
f
82.9963 125.871 mo
82.1606 125.871 81.4828 125.193 81.4828 124.357 cv
81.4828 123.521 82.1606 122.844 82.9963 122.844 cv
83.8323 122.844 84.5103 123.521 84.5103 124.357 cv
84.5103 125.193 83.8323 125.871 82.9963 125.871 cv
.812195 .818747 .823114 rgb
f
82.9963 144.703 mo
82.1483 144.703 81.4603 144.015 81.4603 143.167 cv
81.4603 142.318 82.1483 141.631 82.9963 141.631 cv
83.8447 141.631 84.5327 142.318 84.5327 143.167 cv
84.5327 144.015 83.8447 144.703 82.9963 144.703 cv
.814379 .822222 .83268 rgb
f
82.9963 163.535 mo
82.1359 163.535 81.4378 162.837 81.4378 161.976 cv
81.4378 161.115 82.1359 160.417 82.9963 160.417 cv
83.8572 160.417 84.5551 161.115 84.5551 161.976 cv
84.5551 162.837 83.8572 163.535 82.9963 163.535 cv
.835571 .847751 .862976 rgb
f
82.9963 182.366 mo
82.1236 182.366 81.4153 181.659 81.4153 180.785 cv
81.4153 179.912 82.1236 179.204 82.9963 179.204 cv
83.8696 179.204 84.5775 179.912 84.5775 180.785 cv
84.5775 181.659 83.8696 182.366 82.9963 182.366 cv
.921569 .952941 .996078 rgb
f
82.9963 201.198 mo
82.1113 201.198 81.3928 200.48 81.3928 199.595 cv
81.3928 198.709 82.1113 197.991 82.9963 197.991 cv
83.882 197.991 84.5998 198.709 84.5998 199.595 cv
84.5998 200.48 83.882 201.198 82.9963 201.198 cv
.976471 .992157 1 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.1
%%For: (MSI) ()
%%Title: (1902.i039.011.P.m004.c30.cloud services isometric icons-13.eps)
%%CreationDate: 5/14/2021 9:36 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CKoOQo/QZ\^9;=e6[FIg_=BmtJ[QhW['WXXd*fh?e0GO"jO>1'mI/$oZTg6,33qRp.:l)VhS&Aq.SD"G1`FV1UB_<em6RdV
%Dk.Zus/b:?glc4c7a?28Qg$KL?iPKBi'i&YkZqMse?04K6*%cPD-)<qDkl-%GC(jNNF.,b\)X*t(I.X;BJeF-F2`l@3JTMH/a'WK
%DZo0F\*<X.1iMkMl^0V[gOiN,!.XT\G.c@YU4],rLQMRQhXCI8U>@2V%f`*sZlbghHi:,)YI@`.kHSc1M[If96,sc`!8'o(^qXs[
%0in]srh.XTIHH9li+IO'LEI@Q],`HenQ$>b,5be8r[[t;gos'B]0u.<_ePs]n@+glEjk1EDm+hBR%aZ$fnRhMCd:HN^lg]A83V[^
%G,OSKc[3d7KiJV8AuFV^"2:S.l/Wl[bS^=<ni'Ph(5c1!Enn<E"&S!?4EY_*+oZ@_eBM3pX?Inbi(#s*\WV:Opsl#f=1uuJ+4U<$
%<Yl!Pb98mdqh%AbIG:dr@G$g2H"+U5g=;hsdkPZFDYT_)[+XAear6%apGD(9iO0[->d'E_CT)0T#L.,c=+JdlA1,![TQSn9`s91D
%LkcWI315'@b7Vd;El>16[B/jV@VVsGi$&^8Tn"q(a??3Kh/<1uhHF&+$msLZ*D+N%]CkHNR$j@``?-(\]W;"g;u`3%"m#RZTV]Y(
%bi=['D-IkQSHJ5*ZW5gp2fTRYpt$^+L_f?B7f-/6*WCbB!t^*F7"uKt^MZDkH4'cRotT,<RsVg"(r42Th=dMJeZ-%WqVPPOg-,g`
%g\"U/'-D;nl[3T1QhfJ:cZ]%&rjl)=r8Esfqt884,sW!dK7;o5%T\m%#Oo?udVj>\$EL_nPAfq,KRsUZGM)R=J2-sbXHNi2X@cRQ
%%rM,LeUQ&T#OV\H*s*"MS#mbuUYX;tMgB([mPXp.h[Lr-XjRaTikqc+6"7g+s#q/kT^<4_$\o@#PY3N?T2KgnpWqd%#[5bb#[R@N
%3-)r,Pbir@iAV\Je#qRgX&j>\m\"ci4)DAF+nUHV@8H_YrWuf+7&(iG>IuJ<cY0Mf6G,\DEh^e]pD120l3TXL;_Mlp2QLuQoOE^S
%_E%odIGd`Pooi@nGjqbZdVdQ]bn.HmZ3S%E?>0NI^O#i$eS[UMnA-Eq;=mdH:U9afZZO[0i3Lnu/W^]f#D7=e)",XlZ\).hmbl=X
%"FPr'c%@01k8;K%rS1R[](AB8LA6#_mPu71I?[Wq_r&!>ptP\:mFNJ4nDC'g"XOMjqs0D@X1>cjRZ/)1>_3:GekZMK!#XB5<%N.'
%I_8G;XPTn!K,1Y!k*EK,6&-QPO8^e#)a;Ob&*@rV#6;&P)QiSJD[^0IJ&YH%q+X]g],%00<"seX5iL>^Tg4Pn8=TkVe$FK19N9!Q
%7d"Etg-85]NN@>.aL&KGVeN9"@ohXESSK;rn;Gf1/M%96a+["GbWdG@UK=Xr^^;SDVAo'$n\kF"HNNJBWtJZ$(S]HVZOm8R22!SP
%V&T%2NATuj<P0o*bfb!?%@Xno^AfEKZN9aA[s!Sh%Hhc=:AeEpmKVPR5b)PKZrm:]6E\j&kgr+j]c=j0YD3=V1^b,!SW_Zb_gl!F
%_;uY$34t2aBEQ"o*H#GF:qXLNa`]&qqOjmb=IEUJgS262p7PUrSdQi+`L/Uos2^VZRWKTWDiJ7e;*<',h_/4>lZ'$X`HJec;/jYC
%nc:;.Jm*%L;ro>-KhRc$4EN>YDA#r04&b6U>ot?h`p7f]QRR!4aP=3ZQ\%c+:mjsb7EKY^9UEqE\P/@5FLb)3)ki?>EsB"^F@]*:
%5%i3-5*lVI.FI<DdjYJcK#YWp?Z#he>ZW%I2?r2di/B,j]md@'r2B5Fg/MOY?N#$N)Qoq:=`NR^V1@b.T\$7AXl=RDS8>aH?*!XM
%rWU33`\!F8,>>bkS:VDRdtgBA>Ejoki/gDHWrBU&]tV\!b#Ig""q"`Tbu`kj4FWl]f39H>bcaJSgRtWl>9nqXdCY$N$^:+agQT6J
%O;P(TT]()Rg9"]=Dl$U,d3c>WT9122c$qeA<cB>fLJ;Xo_%b9W]g9-i=+Z'^T8lo>W_]V2Z/c`kMPZqe9*I%JTeYN7MBt&!)ZQ-*
%NW6V5).TjUDtUTgfi8f+DAWVA"`6oC@4Hu&foleUcH22pM'cQ[\Y=4V2SC)o`W7"N5/4'W6S-%Af)'+)TV'4O3*!%ff)2(??u8tR
%#*Z(.SQdP)^e0fL6^i]g^Vt=d+m,AW__ZlHR;<k_)%@fMfX#WY:88GL(!".tG]S%[mV.2-3TJQ5Cp(g<NZsDPq.%FN#LdTP9,18Y
%iJ+[A$h>Gs']ekX\[8WhDE!I/+S`\cm`8Ol@nL/hRMmtN[>qffB$<Z*`j0dl)P%'ojb+RU83TIKKW\[a&(3.#<UmMohKHALL7&3D
%#S7ZJL<S(7XdN^0Bs(l<3ZH80=2qmjA8e7t'2K)38qY@+n+9SG`[6)204e"bPH_T1n7);eRNl?Hpf32j_^W56T43M[C[i3IMkAXm
%2>N#?)@9eDS3^)FT\s?cJAa9bl86T[k;LBAZDks,0\T=]'APS=>HOQ<&2a0g&ntU(,>E%`^Hr9OiRRH;D/rkUV;MTlZr]YuF>r9X
%:7G.pf4k#F!2"bonN0Zpj>;8bQbml)*L]_1*I<%WcTdqsDK:G]8O#Fp07`.RIZhdubE:mNdjR2Ui[sa]nM]#g9Ob='gIVa)_:5]B
%1m_dO1$qK"7@JU)Q\JlI@6JqbG$?P0Qqjd?BV^POC/"8;X**1A1jJM)[tR>Qh+FptI\ef5%PD^3lNla?D[S/3n^ILqmNdd4pV,NZ
%akfJ2gHm=mo@?u:FoIiiE;?4slee-fQ"&!5K%!]#;V&H3<1FZ$<7<+@'")TbNCLSrpaN@ZJC7`>B4=ft1TYn,89G$;S#=n.eS6+s
%b=o6p_Q((7E@Ea;FrENWIES(5hl8V6SMc<a21c]:bZ:..8<bsP9YM,n"6PUi2iC(lJB^60OXQJtMF:%"fkUp^;6oBYVDAu6c/+oa
%j"lr/ON!sl.n_TiYpa=Jq9No<a^nCR/BVhMC<UuT8dZ:\MadHN(M0IQ;(AmdMin:4aZi"&1)>RSYpe)<h^Vb[b2gU;UfjM8B6CZp
%M_Y`JRV@_[8O\_>ZBit14>0^%>.,'mQeGko(?.eRELS2?WVhI(XlC&?$?Q-#m>fY?Ia)DPS6=$'T#TDIgKA,D^317*7PhcEn[0h(
%CFSI(j(fN>gH+3X6:iN,rGO=(M9*3\7!#b0>0FG0't@EoXCYXR$Fj7dX(>Nf'j&jI6H=R811;)h>Dal>Xt+[q*.Z^#])"<ofeuGW
%"kbfV[S_]ir\KW)m+)+B)LDqnfC:Csdr^P=P9N7e9`BL@(ce_dPk)S,ctncV#!ZtH>I(%Pdus@aZ;$Wr4IMk$-R9-R;ipR'jN+?8
%jG3nf)EITm.f>&$Y/5tLbsY=a:.Coe-?m!?Te*UpXf$?A\#M`rhAZDnFG.>O!l&)7[El4k\#P!a-0*1EM+/klT!4fTf_p:ce",E.
%RX"5\`nk'm.eCQRnUO6DfkL224mrkY4J+ep]O3;h9WMAK,nlYfDqL>gHWRa6J")C)6g^YJk5quSIEh63qe+0HT8(poMB,r]D,1IB
%81bcSHm4OaHg#i^\<DpU<gmP=dO`?4/ZqGJC\[]b4<lhIai7bZY<7Dh4ZeG[1cch`GfEL:#*ds9>Km#[e*m=-Kfk!Us#4@a1B2:T
%s3:JV2^+N"rndiPDUnd1%fl5%S&T3c_dI5,^=dQKREmh`q.;hJ-p!dBGG6sXbi_'E4J5l]eHT`Zhj><?O;amNh_?qHk=q(;XuGRq
%5k[3/Ruf[/rRNfZ[$rBo>*7MPN0W1,)snCheu^bk@ALkZ@J;9c1tk/I8$PoU4mPIhV$^hq9n?`c6-=7_dZ/t(6C(cqDFL6pZ/%/k
%fd*!-B&mN*E?M?SG(ZHq$3F;5>&RF,VsW"Vol_SDYBGQ`C:if@`d/=TqcRMqbNrmA8c'BF;]+'`s/S'`rGaL]7>O[g]Id<^.F8A>
%n@+YE1Tg'sRqYK;Y'4]WQuT13.4(YnD+f.e.`oEV#q@&!GA$6-^l0+7d_+85(@VY<r+M;K'0O_g\G8o*<5:"-3,C@t#Yq/.$q0@(
%n<+Yq1;casGknhrbR?-rR,"_#7@IA4iC-pY\G[^0]OZb`bj^c5?7n=IB#)6T)3?TUdM3"-+SF7.Ji%H_Um]C^EM[68Gg"_KhCH?8
%c8=A!-5uRVSmNRTTpnM00XH$OB'hI1oRWa#T4B-?@Xq$G16Dcr8P_+(-;d6uA0O)TYB2a9=dZ)EFA+@09`2_O7Cdp-&'$4'dpsGY
%=U(bV4<19HhgU9cF^"2WB%`Lds2qW#9kj<tK/:9rrqWIahO-jY1h4#c;^Bh\b$4\pFnSC+RG5,Q0BhHc]0S=9i_7TtRZS0C'T[N?
%a.7:6n>1U])i#+\ipo^N]]XM7QME3!!5HE&VM14@9c9>*Q+91^e+>1`VP-_:L:0L?#FAA&Re,k]O0`q!UcHeNh&[3I1/]67(8QlI
%$7jsO3d)E`Ib(R!@KU2TgHt&;B#j\a.AWk=\sb?8#0lKOdj&O;G)T#L8i'qsE+ctHOTpTbN\TK?D.^hU<&U?$0eti1Ph7_i3uV;[
%:DJ:;lhXbdlW<q3j)qu*-3de`]6$5'n@+!I-&(&92,\I`9KoREEu,V^8#jc$HKEmJb/gL%DKFh3JoWgF4pY>W1r<n,rb^WFC*3*6
%rQ7*8>f9Hhoa^;I<9k=!4ipoDipU)QDB[_Pdb+Om,oTCp:28U.1CY\Dg?gVU/7m7OUeFC%3_b+DU`%90PU5+QRY3al5/dV!rH9)*
%Uj[SlA8-[6h!>Xn%_=$?#-d"L1^_N5Srcp__5)F!ZLf7u[ps'n:mr^\B>VR"d\&;Y_-Y,t"ad(4-O]VTN=HW\8f.mZa5cTKs+_R$
%rQE-bBlbXE68R\!8.k/BL&M3"F!t;FTl?LlBr9'JQ7eMak@NB&mHg-4S'/1L9Uj54\P/L)=`#dF9KDFmg^Jpmc'U\]+pYpul>nDY
%b1*sqS]fNn9V'AV\P/QP&]t`S!JN-H&sKKH3O>R1V*ZP.kpB'"4)27*Vd2O3Ys.LMgl/(>8>.A(ANGR1GN1(LVT"L#I*M4S9JTCW
%?^(S!RWd#9,fn%>IEl5PN8$'V2aEH<Dj7Gq2#PMlC/,JN4+=$_s0\$4DV4:TC8A+4bBgWdE[dViT,P/.&t_B?JD\j7.O3nHjY!"d
%_ggfB[lp<SE9#8_Sr%%\P:k>^?EU-X1e:C\InTa5kL;2noM:]HqYm*!PpSq-88lkWq3Bm2ihmGJ,Lp]?YLH?AVF<"5H\/Mc4)C\J
%lLk+\Y;\p-\Tj%e_X?SiWa!IPFIYUMV2L@A*PluQP\8F?SH^'n=iac6X;"p[s1`l$ONR;3f"<S^BSs`/5m.+PdVuD?]k-`5<9Gf@
%4.T/gnKnLXH.9:Xa\sY5?0N*XWKHCV6k2h/ZE!T0_U1EujOWfn_5#Ln2ui-L>JZR9*&bnAfh<gj[tUPM-H]kns.2o++F.lP'MY)o
%1jc\.X";`<$[Z%Ko`T::omluLYlVUDn"2Ii<8#s&MB1J[1u*br-*G/pDWf$mj]J%69CAQ"JX%Q"LGTBYIZ*NR_P2!5Y"f*)1>1tI
%/l!jIK:O$Cg#;]J3?6MOe\n)<<ttNZrbP9GP:-<F9S:6YT8dR1Q0`=W^9_et/]cUTK@;LGbiX6,kU<<k,%`Nac_Uq;VGXdoaf""$
%bcG%qR(fKTB(ACc.8NXeoDr3S1_!C"_k0<^h??b&e&]D0E\:)!*J<D]q/=]bYiKguq9LmV:K>&Mc*#I^mTd-N-C[`RkhWsU:%g<*
%-gfFHaOm'FCU,m3\@J/0BsWn2@O[#*PU2a-nRXtl/oH`ffh)o?F2<!#:`h$UJ,RYqP==.&qtqSU4i41,#UIZiku0$,?]B\N!qj=<
%/FR@?[p8CIP0)mAcCnro$MXL_1t+,nek%Za_AgB)I[AWs'rcW)gn[&G<VE>RNQ`#tj]TmMbrV7UccGI]ac+G-1Fq<sE!TNbn1+0@
%f5L=sBjO])5ak1oKJ@emA@.a\IU#U5Sp:.QQ#B-'VN64:=a8"lU!^@f:,%YGc;cmcZksUV/]@477W?=:O<,+ELiL)\WeQQXnM1?-
%NaK8"HN8b4$X&YS`Se,[d_G_Q^XjM*bn].0)?]bUQTr[q""I:)-UFof*V@Wt4+>@;%D'++DAC09fuKWX]&>Rdoi&\.A_"\A]<Mco
%%Ou)tT9n_^Gr[!4,!)555]+a?&;+sIS<o?eVO\rd_>fSrRN`a5cO\nHh[83=!@@s<_014VCB&,?^YtcS/$ug+oJI29fWDrIIK\X(
%AUXmn>1MSY=`YNpI_D![<Q^KiE;[nbc=1h#K>(\Q^O!4C]bUKP]b9S0gHH-#DIi=Q1j6L:nm[Ok_jn+2qa%%f<*A<i77B3o=uaq,
%?[r%#aM!76hk9<`XD2W#pZ]#HX8W8Ep[KL+[u0ZplfDM1cY9W#I0lJ)`lp%'q;$KD?H#C\Wa7Fs(ZW:S6r>YeTV)aB#\*_Q01KHH
%h5UtMrGa5R)uh(E^pUo-bTVMq`9kEhjUKu<*%M7YLd@sca<C"Tb]Fj&6#C41r8CM*\[hGu:@]-uL;^&<*!;gY(k!"k9lBB90A-17
%[!&M#RAZn7_$Sh3rY&683#M0_]hXs1Tl\Fd<lV!m2P%,;X0ZN\V:=M[3H&#a3i;]:RMKPmY%)]/kL(\s=N70n/q"`mD.d*7j3eg3
%^,hT-VWkY4LCN![CoJ!KF1+6L7.(IWg9<@kS[%ED_PWl_9kS9'A(/2$o:V>:"PGVCVJ#HAQKM,jXcYJ>O)o*WFTpMH*[M]5cFEOi
%\2DO@FiLO>DLH)6%1Ln]R,]=([S0:F8'GY<8Z<V#9[D#:F2jfT_k(#NShp)1Z0/0nB4SrP_iRHZ2W68UiYj-^3=LPN2B&KM&u9AQ
%#g#&K`i6/XWSNM3B:M$Ce5nSU0\<Z;EbNU_a,i_ObdK)#5u!Q1)!4,#65]`r!^B4fX.Dq\D,(eop+iM91$sp6B2![;-u4!F\gl0P
%NJqRa9KQb<^VR8ti7aFMVG5B&B-JY!c#"TQY\]%?`1\gFjq/E)pc-aJ6EDu?I9i^E18^Tsm>PadSS;$GV&igG$#r(d!6OaBCM%Y>
%,6J8,Am+J,`hi\@QSpWPST3nQ9E,3_p6\3E['hO+A*UcPG;US6k#W:O5b2oYN'gs)6YBI81Cfsqkhh6"Fr\gD(Wn=!-%knba6#\<
%B]?8&qrAWYrZb)t];_/Pl&82@NCdJim5&?94#gN6fk0sf1M3+2gFRWj'TgbX*,0'HXU4"9fhKAC:M5(O[pn_e_rT2`^nYaWaj`4#
%/7?\EW44R"1)kj'0U2nC,]C/&>^OW'p12:rg%E7AB4j@(GBgRXg)b9Ha!EVUn^/+kCV4OUi02Eh-H[Hkn@q<^c?ONPZ`h3OZ\sVW
%cd$e/n*k-c:!XI3[I&"s9g%Q`JnHkA-#]!f8)k+o*AMgXVMo/#4Sq0%41g98na)3Is'D-)MqJ;qO*2M(0TeQFi=XOn@b(Z\0l_r.
%s37Vh)7R<i\+[*8L`*\I\Fjc2fS$gOkLG=Q=K]6YJei,8]iD5@@XAqMS`S/?f^uT(FEZb"A()<brXCc&H.4,;1(1@(P=[\"LsTfl
%O''=e0(+V_/K(&'f^q&RFEZh$A()<bcJnSqJ<^'+pcUM9I/4M@qh%B<Zd,HZlHN(6aJW$5FT*rPrsF),(O9X%riQE9*[lR:LLHYB
%%1?o$Ot9jp5`$]34kPbm#R:3LhT]*/0RTAanje0'r'o'%#6KmuPP!n,qm6n$Hi:+.;u(^1cbTGX_jQF3q!3EV(&38u31@(tX1^C'
%%6u-G1Q&K:ns`Do'17.0pshK@2\=L=Va"o:.im5o*-A/c))QtH^Z>-?+s%^WWrf(9r2[7NG_,R;Hc"t9YG">Fn3-Dn$d9^XA_aWR
%%ur;jG5f>Jgr!1]pkRboX^:kd4B0<2^!!!%%nG*,rcRM($H12/O2sh'WR7l=#Luf&UoH%B"G/#o<YYg4dNAiQEtItNF)4_sW`T4a
%6ui/s+W!pH\uDY*-]K8!c:G:i[n[4M'In`A^YQOg[P/:q?B+W[r()kpf"D]mh^F>aoR)n4n-k#!R%@4UNI:m2R^DV/elM4hISTn4
%4pfu>f;Mb_LQ1'Dj@XL:qgmY7B\Cidq1Q!>-.?AfkqftF&c7h#Z!S/rR-@a[SsYaJMUu!-5<VZY1W-4+Jt_G%O7lHSJ(C\!ZW-_A
%RM15n;$O/-Gb)5=+B*+^[Jk'Q%]X@q'Ls*:N**plj["7?XTV)"EDD6n!QX"aN2%9_r@/(XIpate[0LcV.]k%sBMPVQM[[")MiAjX
%+t^OXJ5aLn*'(mQQC%3TrKF\IXl_,#7_>-7\^PF-U2ju0DQ"+R>4lDc#04)FGC3[p"++`^ICPVEf#BtRj]Z(uAZ"2N><i&B62ggQ
%pdAPKOPF/$kQTca61-H%Vk;_Ff),G<]i"7u)G[sK#aId+(W`P-:2\g)SIYSH+Lftj$p&.p`u,stI&ku#kETj+MZA[</@%T6U#T4T
%_qr@7Rssfg55nldh2g1Z)g+k//8XDTK75nkn+ZZEG;oaqA-s$Ujj%)tb'A?\LD=KXplMbe575WXFo5"]c1UAH6%`B90CH($CI>K0
%(,=aENu4W^JGlY.l?.L,Mj7X'Y'Lh5lZd+?iiq7d[tUS@5&[f(r5O34))QZ%+_bffnXS07&%?9$b*QPhrLa=mEr,%`1t,&&(l,j>
%oZk><k;/:U%fko]5@Ghi@!Bud^^=?',b.Z!X+d>=>Q&jXBY[\;0LrdgRFb/*kCp&/T[?RA]aMD2.I_JEi6C9a+L)A\lQ+n\is7bj
%g`6NW(OdIa".5an<U0,#a[]iCGIq/N)`W\:g3S`Ge.&\KKIJU^.003]e6>5A&,SAqgMhW'b2H=4)>L_hF5+NlTTKk%O#pZpM)82m
%P!Xg)h6=m?b]>/ihXTbo`Q+M,2ZN"PRJ[5ROlJssNZ2T,;=D<_6sIPn^iE4ZR<kXoWjh246<j9e]`C?OIH%^c8Xr[sdnr66r?LNL
%ctguI7iS[aT`Y<Z/T:X;Bm9HaP_C1FS)14(f3#>9(X*bB_JG-,gRtERBJ_k7>bI*oR'(!=(5^Vi:DKg>;;62[Mj<p<g2R0][pHgu
%?!qU-+*gA[R<Q%<RdE1`"c^:*>4"N2U:kaUB#:XSgqfY9e()V^S^i;?mA_$3JLp+.`#.&M*_&+9'L1H/Ke#]C]N%Rm`.Z\bKe3gh
%f&b1ko/qMS'\okAnj;25,/Dk-9tu&3)l^"F2]hmi(B?bjr=\ZLh*\.W6AGQ=9dAS@Bl#],X'WQ'Y6nBZP(W0.2ih%,oecL1K"@Lf
%'DPt1Q$sF<lD7=2V0?%j8=IFk=4XusU7mb:=0WIcad\,[#ZZ$'c*^-7]&RNpZrgf#8MXF6c$C&ATmQsp<VkGJFsl@$,]D<OfC!B@
%ED;aC`o8B28'#`]#S":g20\UA=6]j2m>dl"Cu7iEdN_^/T>^9-+qo2%0\@M]i:;2,nTlFU^oMJ&l%2Obg*]-=^%uG9(Y-_a2>K^%
%O_X$40R:odXkj?3<:kMbomYBY>e!S6G'#l:;/ULIc(U@WY"GPHJn=DGm!KBd=>`4s:)\TCr1_?iC;/N+_\j8SGnXuEi/Bj8GQ2S0
%VC#@0[!VHk+`XmLe,70!-n?a%#Vj>"l[]T_K[;?Rpu;u\H^.@$o'6@;,q;nu]aJNl.eQ(R$e9n"=MfYIr(`.6O;0E8J0/!gQc$pf
%+_Sf0]eEW&*!,YGJqIhXj+=j-nbmc`\:sLN1\N@(VN8T.N#,c=&78J;dLCKmfK(&2Y4YhtI9F7d(.3.W^Skn;ptZPXHFuA6SM_j2
%pN=,$X/mC#.0Lf2,UmI=8!9UP5*D^i<,;0ue]&oj:K6V$C[K],X:OXi"t/B$[$"Ij#NuZ*VF5-oQTqIE+F;G0p[YHEe42[bi``;/
%TG2e\%:M[bH<QY#CCl0^LBo6u3N1Rlo;b/9\7i=T<mX@mW!23#c:9(k=>cD_qu>pAUKSKV?;e1K2f9BRcBtW0,?;c`PfKPr4=@8u
%YbKL"0<#9`hSm1&fn*E[,"t2"B"M!PLu[tC]o/2Kf;K03&9a^9:F^3G;.g7qlJ/;.TNWEo206u$N<N]p,-H$gh-Q!!Kib;a>*Y!o
%92q)>Gt;5_,NEope6=T0G,`JYC$Hno>]9Xf0t4R$6&A+r;Uk%ICY%b8!b0S55UFq(L8sg3!@VGGV>9FD)/WK^h*2;,eulNe.:gkh
%?*bGQNA5%QT\AJHfVP+3h/KRs:XI`%]!\1D(Nr]GQAKKnD7,/]QX%5CXZe-g#3i'$c$R"<en(.@c,tj^A2GqTU)R)kGAr?WBS5$#
%2Q6S1%;M^,Xu*1"`6E&=eII@NM%)T]U5lIF0#&'SXCBtH'reea[p*-%=X:JeGAr8h_V1>NQ[kKE^-q)+-S/G>b`%BN.Aoj+][55r
%?u$[aaXK.Mkbk>Fl%j$Mnb\['l@L_<m02/>ANRMJ?LND2f/gZsXULKD7cQfnaXb4deM4TCTYeF0aAZER:UWNgei=(%eWknT&Ff:o
%?U]B!kI7J>`t2l`RT-%cD'MI`\tTr6GE&tep*Ec=b+4B$.=0J,ehf#?Q#hXoqZOE;W@W67.S/r%?Yl#V=+_sGm>=^9ra[S&1\>FN
%HZ6Mt=!V'2f\"nuSJ%$,Q!^#*?pECoph=1(kfKT"s8CqMlf%80EP;7^H+%bI](<4TB6!@e7buDbmaJWu2X.o?os`8>mb#id[f:f`
%Zec^%=F&BNE?>bH^1S:rd^RZhU2b[2oh5;SqV#DV\))IC/jhS`X4qj0Wn,@BnaseimI`=u37t/oH!2ZYo8cX:qV&*$J.>_]r*Y5,
%I,6N)qcpKm/hIj-mHn4gl_&a9n<DcKPY:`KUZ/c&UEf!"<&7jP,XT,h]Gc.kk0r4A_i=T+n\+5\<^*^jSX2REYOqD1L!nt56$_mD
%[0GIVq'pkWhAqhqT9!*ZZ/0`?;Ce@32pU&G&t+lc%ndYCrI'+]fqTbm#R9,>pi?5-%DNs505X^umM)#CDtaVE9D;V!&F]S_!4q^7
%bq2mQ/'aWpNALHVFfk/KHFQe!^%c_YIH/`0njY<Xr:JggHY9CEMLUZ$l3j)hm5*-I0p[7=Xl'/i;ZH<n>&6<Gp1UG;nFrT[IIQ_f
%+u$dGqXVj^DWpAtcg-9cj\^*Xaj00,C]=:.cId0@AehnB/[B?06:-d!d`^K/QoXjg?q6M[?)_`nqln.PkK2N-@SgmF]r&U(_tJ`U
%NNKU88"5F.KD/YD>G(,mVei.,ARXt3p!\eDEpkf>qm?"r:jP_Uhns%$7$$Q$(/EE/iqY]BOp(Wa\o!PTpNB0Prn>9\SV<,1m"XMT
%0,t>&!o4\@GIMDfQ\D@!2>M%TB_.Lf^Tk<E<Br?)Qs2hlmu<%!:H'*7d^.CM'%#$i[FOQOf3e;fL*HnI]1#54"1=">_]aCK%Y;he
%fuI9Ic-)V=`R6K5mS_DYB%)h5>GZ:@qR05#/\h.rl2-P0([9&r2r<DDpMUGO)o]Kgm@aH,rVPcC;s:)lIlKP+'Ddhl5AhO+Km,u_
%I:9TiqK?tn;?'+P=)6%cVr`ol@fg`HoIFGKeb647pY^Di<FL+KnZ-\E^A:IGNgaag"crl`Sc"t2BCGce!i;gEp"*7Uqf`F'0DgB!
%jC4=Rc%K8ZpY@n<e,ep/h$q$pZh^m&i7.\9p8hehs'E/o*NXZp/!kcU*\T,[gYS:lH:92_?X0uUJpa/\o`ff8&0$%t?>_t\*5<bh
%DUoRaX'a%k[9*0UZ$,oiSA5)89oL>Y,BU0Y"m*:MSb\7$\pqH)YamEXknWp.LGid'#Fe^=e90DLc%gi)^%mZ:ZcsOqXh<ICY`IpD
%Hl_oe1u:ZOhgN5L[!:RV/W4fo]\7mR$AU^n"^j5a]i&kI_g0[TGu_!'o+.o,RqL2,bie]F./EN0b4Bt>eT/e-BJ)DqrY;V,%8d5?
%.^ehZa^IWL[/5mTSih;gDNXZs>5m6$>l<0V2N*RG]6<0&m/;?_nS03Md+MZ?^Ga7GQe84QIdQJ62#I3T8/J_\,jUsReK2Ds0])Mk
%@#:BAhS2l,*I;u'q9UUpT0@O]r;LKr`'-74]R<W@7I*)fllU[k\DJ2tCRi!GcNWZI=J>]A==]uhFmA(rk@@=tocNoMqtd\8fqP`h
%@[mibkFR&c)P0'rY=R#]I<Gr"$k>`V\6g%Q[sBpihj&O`OUN/#$3spFDTK"fiTp?oMiBhuq>(Tr_=kbjq)C>d*"3>EiE'>'GoDo(
%f=R<5LLSBtNOo$rmFgnsMm6@_4l^,Re%5'aY.4jg</\aH;D!]300_Shi7Ik(;!+tIA`U5>>@9C9<F<1^20ZX*>(2*2oA6'P,b(hU
%"<[`I;hfVEp>OW4P,KQTG@WYk!3qh"Lj.<!`F3Gt%pQ\/YEn6g`0bLc*"!++G9\g'+E:NT`</saTlI_i2qU5V9AuQ(]l($qf`?=!
%RnqA;jtHVDCJa?a1\g!/6(^m.s4ir`23DZmZq1g-qXMsK"m&Bc34[[9FL@:`pSs,`>DZcIk+1[M^0mnFrhlZ/WZj5Cl4*bCLk_*(
%G!.mBES.'i(64%BV*N2,OhW)Wn?j-$*Z*2Ca#i$:?:0#VSM0tnGEXjj!aRu-C.:%]Z#\j:EWXXmQ?,$UZoI'l89PieL^lr0XTIHW
%:F!Os4ONKlVdeNlQRo_T@epY3W"5)SZt8=D`+HLiFAh4KI?SH!'s9URQP'b"p%JMJNRG\o+#Xc/nT<g#Llj?K6s*,$hp^6T4Pa#P
%3(f!__"H+4;46oniUG[(<dFX@E!UbTc.(&MYL%mMo5qVBFm$Y7q9J"_*c"5aZJm>?@-Kkr1Ss^9UO-oT2sOb1f/G5Ch]I`^9p7<%
%rn_mB8!cX[NjuZQg0.J9iBo2f0$QTo1?%*@r85CZ0;=LFpX\4bRe&G_#5]K8Y?lW1l6mC.K>N)<[(CeVV0dg2D.C7NU>7A>eRIXJ
%d5YH:qH@dW^FnE7rre5E]?Y#"nSl$0(X47#[3W_Tdo,[[o>OPeiW@WQJN')<.@pG)mV:IH/m3`(M@-T>.(<tYC`<EEhM,W8mH'o;
%^C*"T'VI^WG<T>'GtF^?Duo6mb"E)d7>ZX?Te7L/6EuPaaC!5J)N<FlG@/F6Gl-E(MG<PH(:f)[S>ma2R8Z5X^9'5p(OqcX($Qt,
%@K*(tB)U3=igU1Fqcm)Y?9T_f@B+ELKiA"MqC5k+qSrHlbb=$IP:)]id!EOb27=#']5M$Wfu#]_1ccVu31WE1ku11rL\p"TYsD/M
%ESUW+)6*q:6Oe33cd*[9Yg;1-U%tGb^D?^m4*OI_Ddh1F*JM*g7Yb,n,alpK_Eh[[!LfX0-^FXC]B8tE4.]Da%j)$1?g%,/`W>\k
%q7Vco^[J8>Ll[T3$%1##_Kk2D`UfW(:fR.'G.:CM:iH,,4?&nf)1Dj*hH6a8)[7qFbD7K>Mrh@k^[iT_<rV[cn\+L*COk0gI,Hkf
%6!oQEQTr$^ZMh*(AoE+DSH$r`/VcC^n=]:5ot`^hajl0ADjHpUp-XJ'%o2hWm7tCc]XJi%@pQ/&)=.5sG7EA]PZ_>]G0f%!.m$8I
%GRpjpZdl7X!,`W2DduEB^=t*N.,'<J5o/AOmR5Xbe!GZqqJ%JWE+jaIf*aoLgK\"PhL53or-3\<#1do"$IE7i"io/B\U6Mhk6u@<
%f%3[2[+:;p/3I/t><&S!C$:!*jKA%<&Q?`.V:*QTj0+Wo7d9'\k#5,7grU.Al*dig$P3&qaDEi%m::!GVn@6nCEpZ4%,,1&[ScMD
%.5sIBI0-*OoD:ucA.!+&#5?@_36]o2[`J'"<t/JIKt)>5,8ZaIYh(P@qEV&i/YB\%>qK'GhP)41\\"N[5;PnN0CF\7BrQODBjMVb
%KXL42M6dhBI2L&)HEjqaCuk<s!'P"8=Tl;JID10rIbm3do&(/is7FV5pYqOMn-D)`W=O5-^&J'Z_qW$ak]HE,q-uQ;fl6rhM6$FB
%#i@g7!K%obF:P&.\Z![%XNb/EbO3J,81^g_HYW/APm-4:Jj&;1!EOI+$Mcs\Dr"W)HhR/ABrbD:<-7!1cPPG#hE*=U+"idth`Q/_
%R2+%>[AsZhidc<[>h]%]r>6iBI9m)%p"D^[nD2!;pCGEepE"c3eR6OW%JTj2l/g^u*#EmT>_%_KV[q((1;(6"[JL2A$,,&3XR>g@
%(EV%oIbs%0FcMAef&,<PpVX/C@@9p[d/J2+Q,98:QsY_uHZ[<\qXf/0_?c3-DV*_?<i`@P+2->.=`:QA/q&!73!m,d4_Ff,=oI.T
%o_1e^hE>JS/$$:e.]^CPq/^Ft>BtY.>2NS$IjDfV*E"k9b+G:bqi;h-]l,(#)53mR4ZHYhc@gH6N4seUnTs6OZP\6ahadFd-P38l
%n&%c$J(MV.$-L?,$m/p+,47Ze=GK"Te5qku.=ZiP<bcG46NL=BjHk4;9!s;Tm>^tuq[Uu^]j#/5h.e;L&mlTR^"mk.j6b?^8RZgS
%o@<\PZ(m6=EboN4leNk*J/imK^ckh,QYPC/jiriPs']_9]l2^sLEHtPq+tasm68N]Mipa^7Ie.l4WHWole.Rn.Sl[5.u?m2o>9Wu
%JU.,tSieXUhXp<!(0j4epVji:7cErQH"6eps2FpaA?4W?T,3Zk'HVa.Is8EaQe+iXD)f=tn(h8V3=8O5h+m^3RkbYgfehk6oCW/g
%g,hrcX-!@U:tD3sG+&e7g%-#)hL,@5qB9)q$b5>2%o)t?J4@79>^og:*,*-[d[,SaI_WJ$^@M-T\L+l)+,BK+\[<Sd2rVLL?80bA
%;/F*p(g2G\NTIM)b?$RWJZ[8>Mqp\``Kso7[!5L*>arM.i%7ddL[W4EmSdb_B\qNuj6Z[g(SFgN*&'PQ!Q]58bGEp$(\C"gf$q.f
%<q#Y3k7>^Z?EJG?IHd)5m;>+=DETsL:Zp+coY.t8HY*_rOj\/E@UNl`'r"e*rqgVV_fX2M9$a+n#XIhIW3G&XhL4aEE*(5(>Lart
%5lX;kn\,^=I6g;2YV=Q=6T:/#G])A\\uS=D/3X#6fHiro[..ellYB9Xp[h1ZUa,Y7?.L@NkUh7Z:Z'lq"_[)M)e9g3Tc7<r&+rTK
%4A7l5mZt=dRh_h)>qb=&'B\UXJK=*A@3%Pu(#"AqgmDtep0YAj@*F0uAXopi/6Hl"*^76#C<K)F?`qY`%1q7\NBV1A_cFT-T9\:6
%Bmhis.j)>tC&LK`];iNr7R<(BC3okf]trNc9&s*!o((g6D1^[_qHRj@p%r"CO:G-FSdG+8J?371AZ<,h%<9p8'g")2NFJ[1q&7`R
%2+l>Xnrq<3A*oC2hb0&1HmgiL!.>d[d+MnCp=n@#dc0]hWY1uM#N;m3k7-nBiF_1(r=#.?SSi`%h1$$'5eb"chra4rC9@=$+_^W-
%kYOZ>O:$/]IrFKFJn$_U#TBa6RgZih(17We/6u6Dkmm(#=8/ESE^$I<kU,ZpBRR![T%=/<34+>.)\Dc7pPmdohH,0A/3N<JoS/;;
%=XR\OAF@_?#Lm-f0A#ZpX@ZPreLDY"Q74L]g/r"V:H&[Lo3NLZktC-KQV6d*aP1<F2->.V"K_@\orap9DfYB2F6I8%+Nc_M"o"g6
%Wgs]krI0.S^AoF]D62:m5r[)FgQ,"N>)UbJbUEe!*8cTs!5eLs\\*@u`-sC"XBnZAP\\9d-;[@f!?+!S5tG/5.3'nA_qLVEDFM.q
%1qHg-gc[:"9DQ1J.af/r_>2RfMY;>'9&I>\r6Am"2I:3iIB)-m($tAbg)K?Nl.)iB]:n+Bh@/MQZN"lbIJ*29O@\&o"iFUC?3-r'
%nJmSJ>,SU^E/l+nfmgcnRt#pso]i7Ve:4[S8`Hm&#[m*G4$4RkctmoFDrXFRe=h*<('f?@l-o*^2aL/ar4TaDY"58qGu_q_'RQ!*
%XXA7O]nZtkf%Jjl%n;)3I,869eb0o=lCIfZQA-1&Q"m^I\75;qpPOqVEqoS2a7h/fRso?jrtAC=IlSC2^O@5o@0FUqXun;D((Y8r
%)#Ah'4NjO&OkTBS&Zkud\O,WCZkr;D#fnZ2PFm_9gdVG74-46m$t'Q049-/kAha-4.IF'Qpm)p1Vp@G3s0`BX2if.p:7URP7rW'_
%N*a>&Hem'XWI2F;O4Fe6O6auS[D`Z[M?S3D$fO7M,;sr$L2t_PfiJP,7DDQYZ&4g`m]./fG<PnT1LWbmo]@cr'u?eJs/>l*<SZ]\
%D\(![?G!rIjo*k:i&s^T''atCDg+EoPK[XNr:a=Ojn\mjHa?'%S`7rmI%@[RhCNW"4`88g"1#^;q%6HrrK!F@+5G>>I:OpD,Z+NH
%GZm'XocDTNYP`$/5_GX1m;%\L3t.fFIY.IZAEE_\l#Zg@4cS5`5[=8C1T3;DL@o0=Cq[DZg1kFD`P_boI.R*Go%^:?MefZnENuW?
%6,\@M6QT)p*S&h*3S\_2CbjH37hd:V<4Si0),i_Fh#,#HC!3GEm5$8^rmu(HL"<RlHf_GPT2")TJ!XKuW>WSS.cA?S<k!6Zm*h6o
%DbgA&TIaYE+?7J%?5dK"7epsDHMC^Ro@&tOT2S013Ss;Ck0AP`]5M*ip<mAfZh!_lJ9q*sF5M>Vq<>V;HA%_DN9pf&o^cDsLM)l9
%Nq335*QBj(A*Z`L#>;(YdCE%WNQ-M+(2A&7J*L&g7O7Deb/Z!^LXl^mqZ+DNIRdrIW.uP(agWl:W1A+4>rh5ZRmF%PZR(e3NC5]P
%?LPDXp%tQI-4W;:M80N-Xo=oJV8l`kCH(MphRHJiLdX#kejUbRWpY=T\q;r(;H2KD:P5e.V6GkIYT^4B'Y5+;hhhiPGhHAD2*D1m
%^K's=(Yu/hJ.K9bAdl@G7^3uEE]/(LLL%[D\aXX[E%2dnDK0pgm@n<Q-P2Y,49MV/q;!1F57;N&rcbL]oT?A)\Y!M#/(aBBi:c\F
%3McV!hG3Gn,b:I__iM\P>Etm.T6o>QJDnhGBGU^IX$+OHJ7`li<\=r1M%;rR4iKP\op09Xe$e(A%QY(#ZsZXMrAF_W"M$S.c/@b'
%^1d6K'@OZi!b%!t.(qq.$jXGq.e1^*6XZX$fcMd(!(PeI%0ol$jT_i.b`88:_c,(=!TZk^hRW"PD1jGM0>'*?Wg7)2*sF%\lG:fr
%OS:E=rWe^*5&-Kf+jEIkBb-<p&%)gc%_[fp%q-Xm+rPVX@rVe]=Y?:nR<AIp`n$@A+R4mg-mOn_M-S-8%gFDc5K`@oIih63(%T\_
%ri^FR?^Qo;,)-,&NA&JKIbFN@/dG>_4-&cee;XDfNm$krLM)8%8^":rd]dk>mH%0f`H9MheW<l&1^.GM-@s;=Cj42_cDb)+Lc.to
%1[1WJiH2ZImjIhg;fdXSHnj^@]=<-ZOenUnhbk7'L>p#bVP>Q0[!u>$]VeHdF6Q0M(g`VY<Gu05L*S6Ki;4udotXTCNduGX*o<kf
%^0dmYOUK+$X-&:bo1X4a,W3O6lLUN*;_fXuWd^`,?E%-TM&%Ssp5.\ap4!8%Mm$u(,53O49I6tk;o[@RB6`'7ZkMO,[osM+qGVF6
%bHl(lD5:lV`c+)]P/<SJior8-?.<qY2PI7s`Od`lr^kis/]rC3l$Lo`NQY33QaMnHHoP2:8L`7GEHIP)I-NDF^68O="lnJG(!`'/
%CsoV?b15_Ko9K#7b5iqBc#'l6F8.:ZjR/Y+\h8.p\Dt'j":X96h*K6Q*1`dn;XpM2;q+7J"91lq""HVX-DqEeMAUr%-_Ni2A%UH/
%UNUY4$Vk\`,I$2#5Zg)e9hL`s[^ZX%<sM#/:q%]?Do*hF:hVZq!aM9mqHZft&FF>.fX!IHn6m<,f"\T4FZ<_D0,5)pYS$lV]GrZ^
%SEW$&(C*UB:]C4J*3YnXo==6(-Optt;G-Mh>9tC-;>V2FMq'bHU&*LtNuJT$(nWSCD^rI#q:GZ9rl"=l9LYX"k&+8e3JVj>C$1Gf
%D:o[g-oV!30TV#&%q"Qqq!m2WYRKpT-N&5Mb>%a4hep:fFO75YP2)5b&j&l@LZFp%"!d:oQf/2(bBjF<3NW_hSi8dTc=m8@gWWmO
%Z#^Y/kX$fS@5`RB%,+RE!tL^-M-f1fH-71ElfLpjZh/^$7H&2bgMl'ca^mm_N59^QZ(*_8YUg*!hRkaac0($JEuiGF2)2F>/6%/t
%p=k^_;0/qJ.L0U8-f@dOmD48!FL8U<fNN:c6/jS7gZ-W%)8mZIP&Gnt(?=JFpSc=Fb$URsYCe<F+;&WJM46F4l6=dnIT"3$X)4:V
%n%$*$=aAVPT3@@mjU!.cO]lhXL!FN^f?8[T3"YlC_/+FVk(lOuY&2TXR1!Sj=<deGI,8uTUA(OOWBobK'ES>def+cj1/'@!O")\R
%R"9a4h$[:dpUBpQQ^aJj]g(LmU_@Af7$`[r#d;E;UAX&gGMgDZNbe3FhrbomcSM`C0d`#i83-bc/E5WW_jm-t,C_[2k9A,[=Q3_>
%a+"'s_,p=MrXQRbLHM:"&(@JooUJ#uD8*,G$g,A]q81mj3$.asfR`GT_&<iB49Kaam'`G8g9[ln9asas]:!j_PHQ`qf#2T:h-&SY
%NZBQ)lo_U+)Jec.a>8Y/dBH.N7r'%RS1fBE%J-6t$Nnt71Fu27>7^eY.s$:/_JGV]0cZ]P@![Q_-&,h^bLE/"#(lLV?:%?jnC1-9
%r#^?aJbGI=J<lV4@6+-O6g)[5"D/'E,]#0:aRes*fKa?,fJ@A0`o3[M/I)Ksq4EFh_D>S+W"&XBn02EjXuqV$B,#lcT&,N/,Y+W;
%%EFJ"4RC),*=Ct3:)hK_C_UYBc*36H^A"!"ekS@*!Is+hWq\t05m#%JEZ/AgELPGE3r6eS:`/*IQnd-3$jUFr"It"bGVR0iL>f-C
%bE)]T3+K>X*WZB`5-r%AQq[]l;k*iO+(<*`<hp.#G(:At)A<2Y`NbifMdE8MUGWMdNm3@X\1m_2iie>S=I+KHRTncs-@]9a=K[XH
%"K\V3M77;hGe+Z`)#2T?r]jYq_TAW!9YtuEaSe)$TK;=65/YUd]8VPU)L`mrdECG^-T4rSRX55B4J3afA!dLZ$E=6[DZc[g35mJd
%oHK%j-.un30nE%#dZL=!UR.tMB[+Ggo/R:BE\65L%PkBLG_Tc9R"oa!U2_*;Q,5@%#;BuH3a>.l#@3E/^^p@^ANGFk>r]mm#^\f@
%BGl3J*S?@mJT-WXr1<-Z&I4-D-E,r5b?U>\%NNK7Et<FH**%BHiGeB>K6%;0TH)U!+ElFCe;TVh$I+tXCJKECHh`&BersF;7\htE
%K?*,lSm7XR)c!B&2POV_!q'N`V*OZ7!cq=G*[<4C92rX&TR9Hgq3jY@,`9Yc+G\s]at3bHEkF\VShDK!1O(A"[QtfiD'0'.r5U[2
%UC@/Vpt'JDa?MpsiBMg#Zt[BAVQ<B&^N.]r%l@?P6g3ZGFk8%-j8\&9AFJ-BIlV9[T,/,tq;P\+W[:U^-uRHe@0:#J"[<(Y_LV#)
%'N(tP3/)!r=D#A[O9q^j:E5V<JSg#f9D('6Lk:?]I,3::Qo8nl98Ff"VI$.rQWB%6!s=9R5fCcY5T+rm!J3LeY`&Z$N]&F1iY6u<
%5lY:Fo^Z&u>R/n,+-JJ9qXp,=bsnJbkliRf)ZdO,h^^2s0OIb*qCPV<84u/eRd6]`n@dYMoe8TXJM#t+(=!)3Iu(_Y,BX]k(0[VE
%2G#o$1U4cS+MjHeWNk!R@lDao"!83+N<H.IlL*2TK>-71leRW(M9gNaoi=M@mJ;loo.$^!GPu-@P#,qsmE\mu(OiF=#eElkFem=$
%)j`,)a]k]C`qOT9!sl@aO',;sG$Rs76-b2,g7AYp`1@%HcEo$Y<X/BMP*JD->+*+,+s5#kW!0t;FJ'`sH1;Kf1'p2bDHL%/.g.mo
%#QNr+L+\[j?"6f;IrnVM*FZCMrsMlFjE(?)VuAR"r+ho!f/`<K0nfc1f4Ehq=Wh2pP@lk0O.[g-X]4'QH80*++DS^FM?Y^XN$t9_
%VpX>(MR_3oc?glm[8PI>A#O(Ai9=hLhB*Mc!X4rVlQJOU^nFPSk4GdZb4sNu#<AkH6q0I96MkB^`YS1:2RVS.QsT-p*]4oS0+?XA
%V<n<n<(9go;IqgjJ;<4n,GQ_H.0K!N:`Z?<VU+q>(es:gs,rlVP/1eWUi'_K<>eR*E1k+K6\Idf8\"e7o<C`T]P"SG.Adp9$loI)
%*1Q(rf+LPXR\rXI,RMXDdeXB2>;%m?<:-Nu<eAiEo_I$p%2^aE]/5Vn-$ckI7-7R9iVX/j3io>)Ud-9cIPW<]bCRoROn^1495Tnh
%@+/3n/3.\R&HWi[;(;pr&5*+R4i6'VMG4U0bHN36oeLrU[:4[I0b\`W&0unSTHTH=*31j]I5oS^eKI+"`)4Hk`dhl.0%@-r(p[1Y
%R<aZG$p'Fo4D01s'BR6."RuSn",KIN"us/j0\o>t>)A!)?4?CWNKg,h1XPP_U]%2J5-r--L/g)f6BDKjs'`8((cD)W9(4]<i+jgX
%f2R5I6I*hTj&qXc1N1)HDo!`3rW3%k&MXGcgBNCJE;o#s=8]GD3MN)#SGChEg^h=WgYkI?H=N?jHtL8ok*d^=3k9*6$;uF+ZlRW5
%6@pkXK%qQ(C(M:s]GTJ;-7J&i(_1PE65X(R`DVd:GqjEdGR+fqRfk!=*/C)?K3sH$0Mi^!p.2/qia]o[#nTk'R6guEJ>\i(63dC[
%Lbfu\=pH;ZM.(ci[Q-EsHbjb#mQt;$M[A/Tn\?rBJqVms@e=FTOlGb10cVU-^cDO-9^r\8GYB1Y0iT]oI)b0EW8\XD->IJ'%^@aL
%.Fs%!U0e0sC7q!5HWA%i?ASj6LE2.6VK<(FqL&3alkEc=qET!$bsiVJ#lJFp;FBdWP_*_tMPFUR?KI-1_G?Q3OguE0m)&a`V'DbF
%6'?e)B0(DC%!3kdnUM\5ToL?lHOfI[:&uETZ^Z"\B&Y.]A1<THB1E@Wb*K\K"K\C6K7LNX-A[5a,_S8gf`A3PR/YI6BSi-2JG^Bq
%,QuqgRT*+XJ`/i!fELeHY_NA.Z;6&Z!0?\[BF[BC%IXuZ8ehH7,Eg^lN-Z^8Ns>SUjJmaKjP[UXYltcN@$h7n<Mpm/Ro8]%W8[?9
%-,e&4ZIf1('9*e6#M>P^$:>+%/6kJ8(bR1/Tpb)dOc2VmI:><mB:4oY1QP%l@]?>!&IBYsJERM2i7!BW/qW[-$lu)If6eSIi3VN9
%7Nfl,/W)FiEU9>mMt*H0/2h(EmH$WcQL#[b<DUPl!p=2i&.9OWQ7>@8:5i]tZKr7M&sir('E#59-)MH,'+qmnCj^D1_Y/M!\DGJH
%,\nkg.dRP9'4));N2$lu;:%8CE*PLSCf_\>(?+T@g9>!*]l6&2LkZgL'On_X&.^J9b-<O$aumS(<DCLLFg\A[LG;(fUBA"l<\s*d
%,P]Wr'?*ue7^0is1]n%;1>"=X6NFN-D2_XSA%g"$88g+71P1!&!]RYh"&Op,-HO\HaG$J<rh(,u,fTUQ0%D(44*8#n)P`k-1tj*l
%A'9#STT`#+#gj,BGI:rZahh_8(p)kW4f#J]/fb"Lp'*Y)Ym?>3Vb3`_3>AU[FprD3W<OO"Tu0=](qkU!d11_cJRfaQS62_tO*1b5
%M;cPlm7rp9]<dT5$HZV,OBeeOLis&_h_cu$lVNj94#C[.AS-=hP"RY<d14Rr@1k*ATdl%F8:^#9'QXt1EiB6dg*&3@3;6l&WmYR9
%(d:Ys%!#gNeiqfY@HIl"18E[)dO=k`i-;/CCorjnFU5BgFc`asHj>D&d15+p!:;DY.`[cg&8pjUe+c(tbdJ6N"WXl]Nj/6<;O!d_
%Fm9PV*"KTAKEidoW3#6PZ)J$7E3nO]LfB[._6QKh\&TKmU(ejf91V/d#Zcm7)L.EB8o,q`KA+D[oK[pZAP0[s_c6ar%`B,=!J?$B
%91dch38uEM#BF)u@,$^`jH7ThSJ8:o-<'Z!?o51_-tq-[a<XGK*B6Ec*cr=P'r?/1JLUC56tT@=U!.\t@[G0"eO0R;BT&XIQ$hu]
%6&=QF#uGsKTj5[j%&QZWK05)HO:inE$Kd19C/e:<+%E4K\lY$LT#ZL5,lt@cYUP`tB]*7uLmVEq-C,m6D,(X/K#P`a3kSbA#mG66
%%2$dBhDZX)9n7YU\h<3?[O5OL4bR2L<%OM?kN>&8m`nWEQ_#B;-V#R:T_D>OL9,057fe\.@(Kq>>54IirSkc8?q5a/bNT%GDX\6m
%L"fcSKeq.Fh]EWn)<5b@1o9F'&/lT*j/VZZ?me8Le9[m_\V$hK@`<YC2e9ER%CFn.\<EkL9Yf[9SnXjn_7)H/Ak-ZWOI:h,npj)Q
%Z&,q.`/p)b@+:%7D&Jon*ef#pC_EN-D3'K-'3#CZ`?GC%\E39j">"eO8MEi1F%VP#ntmR@8JClo6b-]]U69$m(6Sf)TRpqe,X?SV
%L:.J0&HiU`>>PCXZ*D68DjlKCbGU"rYd81N'uOL=_8+a@BLk(%fWnQlh/b3H.)qN)EQ&/'59:EpJO9u'9Y?AgU4Fc8P"D1:e><)7
%*Q9ui>DSb?TOk$of6\8tp5k4R1c@0ZZ"``f9dqOmP.Y5<>N0ZAKtUq,M3B6hRUIr)JS!q?d'?U&?GIXNI1pPnLfLkQn8JMPTN+K%
%bbgAT&O3Ftj5I]di)-V#VuUb/4&)eG!c6C;1q(=j3\F`%Zph/NaSTFH*Af@(UBF=9?t*(Lj+TWf@ZH-`CYgQ[4J7SqFVM:N'lQGp
%-5o-R:L#r6%@7=J'hH0/m7C1Z9UN_7Hk\iW_M/TL3Zc<C3hU*lM)PaJlkEL:0u_WEHE\eSA9t+T<?'7O8ZBe^$qh9r5]!SC$]%*'
%+iXTLDC?hl$Mt%R,Em,P:2jdO;DGFkN/MJ6ipBi&9SkTsR]nFc=):_^p5m@?0bB-g0f8LGPq]Qdq,g+ELHXK2k8STb5cB;+`JNOo
%(.[m!2?jFb.lQO0`>XhAX9"iB1d9Tm1cEr.4#sb)p=_VT(Mb^>Z2,:;k0`r*X5[6Zgs!`,(2$=G"shbM>.Br0`d:_)Z!QtG]_&>j
%5fOLR5[qD^jGre=dD=#c=K`F"1UYe$+Cg9d+L,6%*)NdLM'LqiENE5LAW2YnA9+XR,1\.<8WX9gIB)<%[KVLB>\n9#,o:>^rWNeM
%:gF4SE+C?=in.#e;)0C\;e(`@5gftXf>@qk<SQTWN/:kE;[A4<8fOWXMr?K-k's$P;g<B1r!1B4UP_A:k92K,LY5Q46.k1GW[D]V
%nmVu/OC`J&N12RCiVa>nY_juQ/C+]"<0ThV(cIL&/63NmYOpT]L@#ItN+$dK!]E@/7#7J6i%U+E7i_mGDaOepW"$9S5"S"K@?.jn
%%qQlLR_4S7='\9!dWTXMk^)_de;l"9>iefSn73.K_gu_s,n`;7*g=Pi3[_.j(ud_/Q=7-O_+U_#"SB9MeJP[9NFW`@nhd[(coq0+
%J'UIQYpJ&)#r<_[O2*E125K/d0t>ZV&"CEI'*6@/I!B316R#6-GndQIV]>c_6QA3%V(H*_a#iG5jqNK:(b@/UBtWaao.sLBdER?!
%Q6e%CaP^V!-toG<i&O%++ds8H-C=sf;,U&S83D!Q9&1*b+O)dR3)]J2c9PUQ9#,78eR90#m+"@Yic7%_Zp;M@]qRkn=cPbOF+m!2
%1am\,`*b,m;JiBr@JmJU/4pVa-S^tkfW&#?8QWb0nVKm<^5#i`9OV8FfQV$Unm"!\#t#3hD-OM$\3_XoCU@u1SgMK;$<u4f0[.Ki
%3E!X$LaDDu"K>K?q>b<_Pbn]s,8*[]C8,a#$!Lh$='0Jk7O-(0US)1rT^.3.,R+cQM?n,IZ9fbA.Y(3&#doOtpl45^>Ee4VNLBj^
%Z42?t,&N,B8,t7="He;XfLhMm=,*>t.*IFC/67c]J]"_p^f=PI+B`-p!]AUg>a89=8oI]2B\=cSr/;I:r80sGLBnS[3<P=F@@FKA
%qqqnrZ()Z)"(^O[OeX[kGSnupR=`t^!\''r*X45i],'!)*@>RV$uj(4<+Z3=3SUbRK]*O^lCJ($X"C!)Nq=ZP!"0R*$:;$P<m_MB
%)ecqq+X/(dKh?pS%i3BU.Q0#7;sMIG`\#iK2OpmKWN=S_gD"G8[QFSQN+`LO,srf[Ok_5F`]/-G%aMk_@&Z"^oQ!jO\s^I3HApHV
%KG>M02mK0)$sG.sn7!3OaolKOJ??1j#L=Yonm1Me[i6)%VV&AF7E:L&J:kjLOX^Rs%47qTQ"e*?,nq2:&J@>ZXVj,%Tp"dEHPN*'
%AEsh3na967TZEp_"WD5=-4.(lfS@TYi=[IhJ>9?6Uho!a!+iG`64?6+e.AKh%"%OrW=cqF0!dD9ZNRgrWaa:/*6B`Pl+e0j/:0d]
%`"U1L_(YD:K@*,Rb7s\\d\gomBZ)fn07XT_k<cFhakA//Lm:L2/NZB[[B''VSEV4`&-d(Z!Pgu!6#Hr=_euD.[(D@Jk0O]Lb1\2^
%Cl>85JUE)t^d<MWQ!=^WKW%LbA36qAq5NpJ@:dJ;(&)jH7)s(A6a:UVVOjds>g8H`>\]5u$A:L_4W/tmO^[@m3,Xlc^j'6+G`pb6
%N\-TY!3K2]a8iC(WWcg)SjgHaWGnIP&<Bu:^B'f^/<7VKFGfKs_j3&-hr.9qA!DfY;D.fq4\:_NYYL<?$]e7gMHDK+]Tdk"TIV;E
%(hC#n?/aGP0=L?O8S-4Y@Vo@4g71u@p0=TEi7&'bAEZR*6tHa9XCUiLB[nO_Ke)?ig,aHhQnocgn"0#GU8aLkBao`*T:82RZpGFO
%j=l$185sd(b$:P==YW!#FC^gZ)r4+Q6$GT4'.Np2"W9)`eo]9a+;>3<(LI=>1/YOMjA97X9h2M);:(3&j)g*F!BpfnT0,etB8Qd&
%6p;?dK;GfA`LUK[4t3V*[YSd)ilQ9ngQ][PTOk$o)_/OYU*\Dh`b&gBU(f;X7VFuoM(QO$*?`I4D'q!R^K``-/1F)M!kqM<"I<>>
%e_n)m7Uj1b]I>9R8ap8U8eIrOPIIsh(mYLCS0!?/Wikn1,QRgfC_-`X,a7KAp^uWqWEO%990<32aV0o3o'9.ApPp\!7Ch:k('q!8
%V04s.q'Oc>&,^NL>e3?Mdr7:=Vc%I654&fu&s5`s'KmR*W[%^L4sG[tU.j/FY_OusAXFs+_,`V)KCNT_.)no"P$"F1F[Qj$O=1qj
%;DP"tVT9F-8tY3K8k=iW<kA[oTi.gCnIiS.h-cnU8/DV*T4(=/SrFL+f9J+FCJ!ng,dLCcH'TWL8HN_]X+dtqU9]p@)CaZiKJJ3a
%T-8:VUjg\R<LQTW8VnQLF%;N-A1STWPQY04$L@+V.;hsTHB-CP0@a/l7?_1([!&5Fi(5aW4<GRe,@M:U0X;t><>Gs@3!>MT-J^R.
%8%PR^$\7Y>AL)4WU=,PLQK9P_"qraLf+/="WT#mNA[+N#Y:Wa,7cbe/GfjZVB=R2_BMl,K@/.&j3"7<!UE'GM7&:lF'\=<.XXj\e
%Whmj_jl5B3l(L"(PWU#GQ6T1K"(_j-*Ln8G&7rj(6scpkBLe3iKi-LFEe'_^;g^mWO"$;tcP-[;`$#UOVko=Qe.sD4`lhQ&%>6uO
%_mH3b5X"(c9S.\VLB0l^$W`8l.$/jf<!1$o5>UQ7E))1g$E3;`&Y_%`L]]Ac@Ul-f>,_rbh*S?db)SU6R42lAcjmBK(pSYI,c:ee
%n&R=4-Jj5`:7)77PY;]#E2`iS\l%'W%%&a5p2eX-/5\^&QW2?F?n4Om`fqgIjOhB`eEV)27O@Bm/EmT+kEJe60X%`/>pX14on^b1
%l?^nR4UQM606nbD0A6mVjsl5B'Xu%ALNI4.0G23C,khI*1DHrWMe&!q.VHpQAC[NC=54-qb8'1HnhWdXa_t-7WIOu6'2oe(QmJIu
%/8i>I.D)$j9oT2i4n?5Ae.0`E_#4#a?>']t`0(PaQ<"`l1"m?).H_Cc,_2=TKJD%3Kc[[n%/V@d6Su#&fc;\rYZThSCJ,$50FNUD
%5d\$387$X1':gG-Z*p>?7ck#X$A\">K-C[&Jec*>Mu?HY`0/-RUljHjQGccX*17!H,D&<K004GZ\m/XIXu'nPdb<-O"*@)eE+t^l
%k6%K=CfMAYXU']TcKiR3aYot0K(6."-sqhOUi+!2dShmm%*^SkKF+oK&&^:nA5*\Q[6a<1U%j5]8<c;qgsn6X\d&Thp8!VB0#IE<
%IAeuTRi]%[\FM>[jE8!9cpQ[-o,N\;M&Of<a"S0\kS04)fi#s[0:ZuTTK!p/5h?d^Gf<ftH.'Qs!*a050Et1K$Lj6Oj"h_c;R/WC
%:Ur"F^`^K\bEYQ9IIXJ$6_t\,;^C&_-toH?EZn&&1!kRrUK1&2Gp-Fc_M?NO;D:"/RN!SoAoESPd.'N-W!?47F%Ln1PNO_ObfgOf
%1/iI/31.),OU<=5_*_&a3l7\R??A\++JBo,=9mE#PTW0t3h<htqebn^`o^jARJ@O.3(A1"*<QKQr)I9Ii;&3`CIX[@_fNA$4!FF'
%JH9=+[L3PKnj4L\L9mfa+L!T#h9%VS&qPGIcARfm(-4$EY*3T6Q@]$%Ea0G;q0pB"1Jn)XpC2B2>o)s.kbZ)nN\2DM,t/]U"p;(p
%&^N:&0:k^6Z6=TBY.2f6JS!%:@j3<Y&.q?eC,2ZH+_"r>15mQu9Z+)d+ooqT8d)DA6hm@BnCI/,/K:K5*5!la%1E:/?t+1Ke$Qq-
%pNnfRf:0[a^]"I;h7=q5-_T5,!H]j/$t=6a,\#^eD!GJSY)!quc(:SP$sdMq<O"5?*3^WO+I@*p#brN1%87"@_E]WBVrDhYq_UT.
%TVc3lo!'n;GS3_MY"KG9jC*$;C_R2G5!8G9lc96Rd.NB)A2qFW=m"ZDMu"S18QKf1C^bEfLj]:S9I-p:Z']!-=D5iW@fUmr%Qnhf
%X2n3M?_p:3lUD^4*!\%&fD%$<;L:94a:i/>j)Y^NUr^K,AX"Q79-E!3"hP`Bb*fQb5]Hsc//d?)/h<OJ.Uf7plEEh)+_-7&NtIO*
%[/0Fs51<\RSaHXZZZ\3ti!ph/)gd=Pq.#tk9SYV`!\I.02)[VZQ?s2kMCre?VP'R=ALrd-"3m=!/P7leWo>bGB[B)l3-F>#2?Y_H
%cOZ6dL]Eu[+ts8NB2Z"TG]J6VmGK2rGd/hJ6</knmt+ApUD3%uY:pXXPoh#]G^rIP*e0!&O,g`<4CXfb$n^L7(lX&)d'?7t@Z<>K
%$$9>?TIu2(pJg3.CggO1dXi6Nc]na"JMD6PP[`R@\/aGr/,h63%`[qkNa)c-Q([3KXX1mH3@REfJ_aa.3X]TV2@U''_a"]aaf5Q+
%[G^a'EN&rA\Vp30>^Z@fVNU%=f+m)/0mn75**[)]!5=3XJ=+ATOp=A+=OK_d%LIZT+tt9'Lk[$XK?2GLl3TS!GZ9Qq.QYe^''Z8K
%T#B$ABKKr3*bL8hd5saNnuGiT&k8=pd49,sF>*t2%d%f:?""qnr#DjeOoqJ,C)V\9dC`*UIGsIbV2\j6'-9(HW!J+g-#MCr`'(gd
%0!#Z&%.C!"js5=\ae@]J7e<(b@,E7=Fi[%M*fiP(7^"c^BH,oRAVud-HsR16PSt`Q/EK>F&'HXb9upW(hT%=\MR\jA#f#h#d0kP\
%,D:s=IiOs@,nW%$@)_?7&so*t<"B!.q"7=4bE3V^"n.HWs2,Ja8k(MM(,,<:QZMYF(6=-coed_/57K86+ZHIC/!,c"d7<YWck:R[
%X._/P&\M<MJ&#7196lo&'F?$nU_8G[\4ptP2*QhN\516uWA7lf'0`+D\pud)0io^YG>0:%8g6:d1QnHT<p;gc-&]<<Lkl(%?%MMn
%N^h'WERCiT3fJW36sa$/j62=r*;E*:iaodsLO%W^>o7lPGu_55;.'Y<buC2[0Lq4YN[u`e%?\NJ7"6rCehG<8"S"8.2/(sc_bq6n
%c.eKD4A6ndRG;Nm&SF2jBN/:S_O+D+4MGDH,(#K/9#dDcas]02fa?V_GQV)2+\;+R#8/KNEZthtb8?i?\4*AEP#UCeE%WLnm[iIJ
%!\nm:\,*[2?Dt`.(!+57LAXB=86eZ1-omX&Y`t"q)L*J:_hMD)Y`[77U,<U'86D2I^rVgXMO*VTS;mQgP#qFAHYD%FH*\J!9L:tG
%LcJu][st_(,4(.cCj7<DY;njP(IQYgnbrU+(HXW-a4kYZ"U.]4KeLU-C^NfLjpCYKqK0T]=0B58&dF#12EH)Q1PTg8n@Bsa]?MVa
%@Tm29'QH,@aPXuVhL[:UAJ7)lH,McLLoD+cRr.X?)a'pX=^6'#I:D3ge7O;XbU&3D%"&b^86lks)lM:VX.(\"MJ!b9G!s<o'8@[:
%*Y;Gj*j&[_O&g.-O&gq$ACr(D)dZ^A./[ILMp"K9E$7pI^l6RcJ+__AEYX4(e7*^o!(1=4#Eg2N`J4g`gVNb`Oj)Hf$lA,bPP/#c
%b;ZuOMAOX<W!Q?N#0)ZXeL)8SP75-]2IT:^@%6^R4Mq.+Hn#jOS#.qio<:npApZ#^Jfteeo4"u<n[>Z[[#EC#L;h$r*;B^e>,`AO
%q[o$QHGURn7)fIoAWl%!H'+4%0>r_6Ms0tY`Aun7KHL+$);%DgH!'Eh8N;LFCkflFPI/"9Q'"K5/P48-B+l3Ds1A(9p3(P%,WZUB
%FeW',.S/>#A,HLA)(K*L)/.B1L4L$J&aJX!VRf<O`7>KnI`Q'qP%1L*_M]'M$\ta>NPK0.n3'[%>KL\[%9L4b!nnfpOi+<D+(Z#X
%Adfe8nWYW^]<pXQ+eIprUn-QIT9]gEE.np_Y7/T9>s&Za7eks&$AOG;*/,pGgi=\QM$Z#aO)(>e_'UWse$aso*hQstgu2NA,4;?Q
%T278B:s<a<YQcn5&f'q!$N"9cqH2'iBh/WH0t@Sufc7Kdpn4\;3[KW9`NBnj`2\lpOUIps'K<f'3sWkA4_=[c_qc(VbN)'9:Ie_K
%(e`6mj7#,\61Cj[H2O.VV,DW8JJ/Egk@#Df&L(qIlq'ObiqIo+(o(IY.CZ"H.;t_d/g;N66>\e>AeEKoL_N&^D)(=YgrM1ti9Rn;
%M?c9%]R`FE]W>SPVSuWb%1chUh%@l"=2c_B!ZJaSQl'LYdVb8N&,qI"CNnn)MT(,(9A[N!J=;McWq8A]+j\*engD0]nH:Wt&h^b!
%0P$]p-X[cH5Z>BTLQ[NSl;@T#b6rPt_]_?C`lk-EYtcsI(^D\KjE`82YF(/4LPV9o0WBia3SqKdlm3B$p2HO^\F:EQ#@lSgPoE0i
%P1Q=#8q7SQI=7L'n5GGq)fMXi6(rmi_IB</S6:WrTc,XSl^u:eU8sA#d'n>EbP$0c!#ALl5f]ZkbRkHtIm=Jd7EQSn[d`E_Z&Ppm
%dTco#3b0ep3E+_YZGk;FO`Bs1/Qc#jLHi1UkE8[AZZF<`b3-r1[(eZe:8fZ)f/YC0V[K\7$Jg^iCr.:rb**9ZZHU46E;])UHl%^@
%M;Yj]n@"-#Ps3@."3bEr#gK68gL2i9AGAcd#1@M=l=3>17h6_[fnp3:P61uNSYAUuJu=!j4:1aH3k;MG1aC9:)Ou.i9SqC;j6u2_
%VW!5\Uj*5>J%E`j2O,,HL,+1%b=pd*dgDM&TckVC_p6FEkBPYjjWIMq%+c)&G^0H;Hp#&:-E_.Br0pAJ6ofN1rb^Rc!_Ao7gp'DG
%becbSng:?eg2o^qH.`_noP!,0Q3\GJ\&u47*QoFB;%9_c=[]2[]NE+H;G<Ql$#bP&!Q5?RZ_lqL0db=-l%="RUUS48L>s(["f==K
%F'(8h&$<*#F-o#qFX1gU@5s:`@sd4YUP6Ts.lV;qQXF&U:#"]?&D4;IK6<i7882NM>q;Mc'NlUZKpAit>D1'VGVL7F"t9+W2BYCV
%WdC\B@SED(&/CgUi+8mF8.VGP1$fmT/K5nmLOt&MhImqWHbuFlHs@k(p++bO2o"P>9gGKl/QQQ.\091_R5l,H>/7?N:Y`l$<tt^J
%&V._,>?tU/bRmkiXVdi(d887&q*#Jq/B1nfH;A3fG(=t'`YtS#Fo<Y$1sK^=)LFi)h_8-gZ9t%@3nt=i`'"g),oaa3P'@0)%ti0f
%ai"/^PCML#`oqV8R9U$:,1BB?lTJ0,Qbu^k!aGF8[-!aW#*WT_]t"!#\!P/`&>h@/SlQAST/7Nnrq;A99:D^Cd+]rubt+g#Rr^ni
%RqAW6`1U?Y-Ua`!Te97\%P09IR0&7+<AT1e3Y*_X(1UrU9840p&24M&0B;=\nT\F'jUt%__?rck2P\6+'U#!ho+SbET1)%%^<,j6
%$?cnqb&J'?Ll+5<jR)Tl).C^8'+CKJ[W7Ljn4d.#SJa<7bW>bcep0qDalL@;kiX\>V+aQ/A]joC$puM,@j@tqHTJ)3@J6KbI\1^5
%-_9+(2DAQa2oo%u@)c>#1W3eiiHTSML`u?dnY(lcJOpXuESUl+=aO%?T]-TU/2M?=Leik!>-9dV(ga&W]Q9+RPkC&p*k9o\W^1$k
%[O4DZ?'lg&73!m4(6LkL;M(B`)mYi5@XG\2q\CLeZe`1N7`P@R`063O_#oK:r1Z1.N^:Pk-MUOGY)C?e8<IKDbmlD`)Xl`"EA*l\
%iimYEOX]i'\GTYeh>uSa3fui4hmUCXnI6'L"Y-pS$I9=smC]m.m&?Soq$K'LW3dF)?TJ\=1k[uK`a\%JEc=gr6m[(2e$D&33OWEe
%b4nt<R@lo_N`.;F>PM*SGkRRj$m6#@GSA["E_1$\\Ohu:i)D=:Jd*s'Ro_'NKZNdQr:If"@S@=`dhe^sbJG2`4Ea"r+gin#2Fk01
%WOn+\+_.2XJh%WVV+b+gH\k;^JVQDF-r6<3b+I<O"udEF.+83;*qdAf[iM".nEG.&N_Vj9.>q\l9,5;e@4io0M%pa*a)tCMMd<"2
%8M-rA.1^E\.Kj<,ALc_9p";rkTI*UZN@`;i_0^3Y;P\.di?jOa@=E><Gg]uq"q_q<f-!m,$^FYC$O/NW@[R8J66A3ZA/AJW^sk!&
%\eaY,?G],5R>qUVO>&X"b7'dTP,F,#dP)Hki^,?]MJ#i]_ISAk#ndq+nR5HLEsY^q:b<B0P8FK?,>;O>&4.a*]lP/hRIq@L%<)nB
%@A^1nE='-3AT8-"c4XFU637Ml+=l4%T]-SOd0iB!"Y']\P>@0HkclFcCID]`.6!?$8fo9EOP,K;JkC;*Y8\ssBZ:7%4-qd)V+6IG
%DMmHK0I1.PASs2\-,W7ucKsZKDk@!dEYFLlb/MDT-]Cb^OeXL[O_+5^]F]W1)O#oEkn1\H0R-V]+l9!f0!e2\\f61=f+A[Ni\G#3
%-S?e*@s4f7N+MlX-Zmd.5%Y<=^/mkX'1#((`QL_=*t^Ci7%B8S4B77A1W<,+o\>**77(OL'."ojK_TYg&Qa0Gk]T#1_k_,pDTp&B
%Aqgu.Amu;_=q>_%+Q]+IU.HPEG%Hd':m9u6;1=XEW(D_TRO5#Ceu['A&&k"X\eWrXpY]`'7Y/,n<P_Bs4#U.Z%2u]cj3o5j`/9Pu
%L3_/iTu.BC@:E8R5#O69%$:sVL9mR2f&t;on1XFi%]:*IA"k+lBmgUW&D?&;c/S\I-cA_3I`r<'a1@+1!d--t^Aik\Qu;djF#br;
%\/tcZ8og.70n]PDM8]W1XX=ABGB,iaA-j`8@/jKd';86ZGp3s^0i%oZpR$k6pEOW'!2X,KI'!OtQmVra)An5Jo0cFS,,#hC7%j/.
%Mg:$+=T=I16B*>SM9pAcbt?=DCV1Ue=n?pm2T&-t(bneh9)SV<o?`afq)&/LS%j54S%'[E`'Bn+0'\8./-mS6&OutR9.QE5`;C12
%T;X=#LO_B-ps<m+*;pa>KYf#"LQG'Ig^k=d@9Y;BL2aYK&[A`RNegM[(`)-XF!e)-CB/0u\.3_XerbT)*)8+pR%mC^"ZGLr:kOQa
%+n1>49HpAr+WRkrQmD3`Lj:0'LP5:dn66PaM0L1[=>@IgOYkW_Haoph!gA)%1)`jX6<NGU[*=CC!oKm;f3&ctIF?6-FF]G*^7#i^
%lppY6M",^%08(0'Mn:,<-;9]!JoX53AI4`"Qi?LOQ:qrpWHbFC[q&r_B2^Klh3*W"i0\4F2eC^15nG'^ROQ_Emt&&i1H(hDYaV!q
%>Erl&.>Nu$M&W_))t#K4XOq2._AICN/7DD)%jP])`oOR-hDlVqZ+97VGS)/YJ$7F7&Ui4s*bqph&KA\Grm8__6WQXE0!.(`9W6SS
%AJ#<MM5CrUjc\1Bd05XahUF+5+*Bg'm(178&"n)"/p1n-#G-qe@gt7N]Rp`M\PCr[JEJbFNH+uNNL(G+h?U^fNu$HFl*(#9]lRKJ
%K0gjGI8FUt]FUBn#6UlHmfPc2jsbYb1u[I>D0Yk2k'b$IEm1p&o02(a4a^:0pHJ(G2g-ffW.2h_TZ.Uc5,aUaS.GNP3fH)HS.?Gg
%nGfihDEY<X96K1)-2tf.6)#s%h0Hat*gU@DpHl1MVIa:@Lu*Zd[FYFi%`n[aF,U]n261KC\l=)"S.0h?5$f7:brPA.&K)IQ&ZO&S
%9lUhoJ8lXI\-bD">(QpP#8_cA#<^;di'R]$^-tF"_1t^^FLqlDi)\Ok\ZWFK5-VL>&Z[P##B[EAQAp(";K!4rn@@<W++330_1t?@
%b?)LbP]eQqo]#Ns5d@XPNJ$73]pO[Wp)\er]P0*DHjMtf2&#7K+3qlP++3PohZP$K(cT891gpkG?NhN,>92k4KAsp)*u#K;86%\6
%LY0MU%$ciTkK-8E\NRS@HU*XFApp*XYm2CQ&)ng?@Lnl4!Qmd#Ir[N@*8qD2p^h`/GEAtLLcfW=2-iWlI-B1ULQ8ZJoHN+bLC<3S
%hES3E_eYs$L_Dc@>6cKcEkUJPJ[okn6#ueK"c,VfaC7;;+4hR2V.FSXf@Xp3#!-'42skR4jO<MIH&ZDpB^U=k4XXd1Q#"-&8kMUf
%EF,E(A9<UOjUH4^=a0WRPRUf%*ljN'q!7%mI>sp%FSmi99tDmriSih6iB&Hk5HJck#J$?gS8HVem,=;eqt]U8gBShWF8'U)%li/!
%LcL2"$6ll;Je.9e6;R;q)gm0fmtMm/Gf/71#h/\GV2X72V`XD.)p$@KYm6oC:$f^ZI1prm0P$3Eci\.ckid!X=M*73'7._bLS+B#
%oWZCW0ZM-DAc2/;fg+FCnDIfe#s9323=!#UD/2iCi4asUm[/&Sg>XII!+R*^dYGmEbgVN?f>Zd@R/o<c!Y5Sd;.JGc*YSC,Z!@MS
%(9Pka:Gp*cj<4VY^Se-R6gg7.J$MU`'7')H>Xoi_g,G^\N%bSZ1mc9L7PC6Q*ICmA?#266@h00<^+aJ8%ql*<iL`8\$&u4Ki]e=F
%IIP)1HP:er;;;9rcqB;9CPUgM:^k_:l0OeI#sR,c',Gs\#Lkl>@Lj(<^@Ls>peZIN4hMPWkib0/XF]%Jp(5TeD"ap^!up6sp-@B)
%*R&0ZpB(F[`#e]ES??<3(_9es*F]P+kh!(pNrIkZ/-Uqp>\GK@s*7lmSp"UeJjjsLl/K\cVEVBeN>iOe:5C)8]U0#I@qbmjn7&-8
%hU49jhWkTV+ge$AHBShFWT2G4s7Q4bS_*;q#b]^SY.PD2I>8SafD]R01H:ch`IA=Fs%LYgMuPiBK)ReS(/ZQ6h`kFrToMUTG$o7B
%iAuC7r89o<AEA.!6Ub4S$1rb34Z\Kcr3Cl<Y75m&(rZ=>rCmPA!MftspCMpIBO4uJ9-A7WLOI:R+UBpXK@PGbJm^N#?mZtI&ElW@
%["bmrq!fp]kg_)7cfHJ\iA86*6=_3'L[,iaJml+R)@1S.0pe@X">I,o\Z:8]R7SHT-j61mf9uEmCohOgL@E%7KHYa,2dm!I%3$;=
%LG2,N5:`!tI;opT8,t.+f/4*G4C$<7(a?eQB]5G54$6!>%_eupLgUbb/pJ4b0SmE6C5eW9`3MQ^RI^uE=KAa1XOf<@^/Ak_L@Db/
%KHYa*2dm!%f\'cn&;H"f$#O"&+TP]2"_`#M_#s!de@QWTd*TH]?A0PgVTB\Dfi[^\&H:[Y0SBts-4I0/5\b"<Kd#sR:rhgGn`,t^
%$cO8MH7e\;ZGR4RVp+tJ"N!\*b=1Ee0LSDA=7jkN%RY=ppb)(d$A$d'3R*=Os6P8"43/L7n0&:H^N><"fRWfQ%\^/>,N08j!%8_H
%qCZcD9f\X:cg)M>;B,biWO;B_`g;N$<?2-i55=pT6!2m,0/Ki]B0'?FTp]+)2kK@=`6Fc.[S8hg-'(hD*6e0f^o!0QkPtaAUPAp2
%cIMmOgQC;hn(1LQEFef$AG@_dT:r9!f<08[Q/,s713S]L$H:%7Q^'NmH<;tNUa1+0o;0E&(16eHB7"\8K(rp;INBI&k0\s.h>!K'
%".CGj"o8cl^kH=]CY0`]X3l8q?-)>!2&f<:i=1<8#JfEj95DI%?O)+/$\!I*fm,UUi)@/m5PW08_@Nm8#onAL*mjV99D@ARVS/Dp
%D>YO]?/TV[&!<c8\r&]TCU/CIei/IOph4Oh&3ffW#R&E;g9)V2&`EMjT.5bg&B#cjFB/,:lZ';4b(iFNka6<0JQOkOganHbni3<4
%g%+S#&N!B=j&B%6"<c'?*IS'nAf/nekSd1=fB@&Q&3c<D!//\p-31;1+Je>u"8ccWlO<f$jdk#nLF((+ZnQCW&$WspN*!Ct*A-Au
%Q+.q"?2S-GpEomtUUZ.F/FeaAjCA)gM'BW?LT1"kE?0P=4!YMiJ:3e*`6#aCk?<8cKP+fnjkfK9!2:VV(!B;O!q?5$EVqNkJMh@e
%`WuA>jCg_;^E8:#-2_.X\LN$[UH+&N3,h6j3.rB8W#;c=Qpg68_qDD(dC8V@c(S>IHk[a9J'`au#Lj5+I6eejbo4N2AJSC],o>$D
%%]NdCcP@s1LrHV:BGj;Q!ik'emd_p3g._SCq^]`#**Pdk"r2"nXkL.>5&`VjJ^Kmm\F;s1C7]\U3Kd-LrUJMFJ9]_^X[gZZMKH<[
%rK*O*X8"Ba[g=od]Lb(j[AFUC3-6`G#\-Bn]ip=J_?#,q0*Jk"N[g-=F#p%&B\B',,lO[*NbAjA?c(3$o,9i45\Rd<%&`6[:3K__
%f=IrR%=2XiqD9\-7ei[.G'_%s_kUK\H,TB5S61RO>'5Iq@!P=!1jd(ocKS.!:jk^_E^:"`f6]C*3[7TX3lVUBdYTb@]/Qji=\[Ne
%5)R<-;%WsSXCk^!a<Ver80]W3FH.DD5=KM1Z!B:'pn??H=^/N:3^u&,p49ZRV#8q`TFhSVTV*TAalYd%h$"'?BqC7<&tS3DQIQ[`
%dIP)$jI-j"h?iiOEBq8_T`NI',l,J]_R4g3E'HrBJ;NeeO*3@&ob7,ejOnAk96Fh>NG7Nu+lm>r))#S&6W(J'h/dd=Ig4oOEEem"
%eWHQZj0ffLfQm1XYC9[-[G%fu9>V<a6k$p#=\E1mitaXB1ep&)B%&CS[m#\::+.Z6LHR3drAAZi[P2\\O<ZRZ60fj-^gL\f"nLK\
%ds>bPa1V95'#f.p-+H-O];8fO$"W9o1n`*pc!:ti;?S!^*E$juNXc9D,S#`@PD$Y[&^3]aANJatJIEU-Llk@Lncmk#%gO$L$G7B4
%N7DZ*@+X&/U\BGf#g"qCA5gJB=r6N$"oZHrZ3.^iRB8a9RV[A4Vo+f2,/#U4lZJ+`;+f<f:O-oD%l]H<kuBrVp)i,)g(<>+HC3Kf
%s/3Q!7u:LKSRT/l![]suQ)c.&s1n>$LV4A_p&M>S?1^>^53Z37k^U[=SZ0]E;3O!?#tH.02f!PhNlRp';[*0j(Bn.$%@pGubu[A@
%e$tiojiMrn2=R.DrVVQ\rC)G>]N")fp;/cRhr!D>a)Ulmd,U)1Sg4IZR?f%h`?H,1^;;0bUE4QD8Z<#SQI1j"4e%6&Ua(p$9<&/k
%FS;?8$G/DFd'&I$\:jC>5Z9og'+E$lkROP-Oq@a.RF/'_m<VXQl:LK3c=hC/rn`;%JE3<?ROBm`ZQRkcGH\0@h&qu==?%4F8oZ_q
%-X6&)@.A^4rN/s_.KFp$P!4QEeF5a^aLco@*h%Or&+[bNPjDG*Ds(Gt[a(O:rS"<@O9;DWB[n$daL[E\6"N=XP8mCnc(-39nY$nq
%SmI3?`[mLJk9HF<1G8p4(8>!=#(V1JosCgPk^X"r-$m!b7TYpj>;=,o+m'X,Pd@eLUD)i/^O1Fh%P;#opH@P?X?Yp%lYp/3O79J,
%Jf:^jnXB#JnRmE8dX9/K[F3(l=8_^Ie%TNs1Z*"/l8gYW0%(VB+hn#HnYrc*H9b@304&'/G0h_#pJ'_<Um%cW<f1+5as);RNe47G
%^ThIqA0\E'04m[>M_:9uh\EN;.aEO?W%SqB/2Sp*9=?j_A2]:J5E$lTT9dp7#.rNq:p'[91;sf<7oc*Z(shHJ>aH.A5]F\;K3]DD
%1;@9W\'P/;gQAXO1n]Q<Z<3h`LAWn0l!S\'FpOr`+U(u9n-^s?TbB=<HY?<:XDJhEX1_$T326ZW.9c,AT<ar+1+mATB4ON[Jk3+(
%%0U=W1dkJ)a?qV"BqZnEP?Ei0A];Le3@Ka=OVLsJNstkr#'E,KDA"V07=jo:f9,1tX88E#IeUf&p3G9Fer&RdS.;LcTd_WV>5cl#
%dM.p$.M31,\@[74^R4)3\[c)ibP[q##-PRHO]sMN&C<_,*phh."<T2p'LRT+9FXBuooJKC"[]BbnZ3?jPT)?+n]?*2Au/HNRgE@J
%ND.gZ=)@QKrn*jghu2e4bF"W-\!Se_c9PHI[.F\XJOk5mG'NP9[`\6V7J6?<n7,W@=QKARjMA>[Ub=OJTdoCNFO;/pirO0K<M__c
%.YQ>!GY(keF]@kk+jdU&GCTID5*ET:<3^M"bJ;CUdiN_TJ5sTP'khB*=YTW+3<g)u);8i^[FFM_!0GBs"ORc@g4]`C6JccES*J,R
%Il`)R([#o$i.N6JRMH7TYT^E<`r^?!#)75lLmohh)`9U7(Pg&+]fK<p:E&IoIqhFhle(9^$%-`r:;uo#s89A$T*L"s+&7QuXq^%$
%diV>>G5_sMJJ.[SE$YCuYCH/Q^\ND(rC^C/^><Dh&;FD(C,#$s>tc./(qitGRc62kgoe$:3K19[HcS2W;F2&rM(84*kBo,T$8Q:H
%<.&#MmYmG[a3%5`2Zc^Y\2,FAJ_$C*q\qqhTps+S:7I!9c^O8*.i@as!g1lPDdTuOk+tUg>(XpA=4a<?/6B)'?4rE,HJu3>&YH`5
%>Em>FgMf'&c]?,)(8f5A8$I:k[]"VB)@A'h[1`tO#F#%^=iA<rjV.gH)(^Gt[tfmH!6#%-JgUSoPaoq=3'KR^s"eOIEm<E]IZr(&
%#<VKaMJ!$:4S.GfZ$raVRHr;5'Rd;6lbh`KFhQKZ@o6rX'dUl+Pm*++mmIf?:O5UrA+,0+a.9p?RlIJ"aXJgtJJ1U+`N4!bhkgEo
%Pq-hEq9KSl$:?;e.';!ml=EKh!"E$?0>,!)5+($49EG+_BJh@,X^V0<RODZV6Cu6^]B;D[CGFVQl6LgCN6`[qq&jYcAb;DdoPfN1
%#CZ=2T*)^?Wc)cZ="b:cL;P=]@#FSA7G(V\4NW[()%lrjs$#8/*Y6<o\Lq`;;GqB8]KA(&:!U^b18_Y#T8`5S7c$(rKu\b;5YP(=
%2Z+n,#Ul2>8`ZnMd%K8G?Nf2C8Cm+c-2d#oc0ocbSp^S0_pO(rQeq&Jn\GccQ^tU%_X<"0Mp.HmGJEH0GW(T.,$/:a.4$F_Pj[2F
%fD*1LceeTk&bW?3n]CTLa4-0p]1lVSE/Y2!\g5.6*n'd<okF'V2,<TB&9eJtFp+LM\B=F2Fc<Z-'5`JnJ'*1p#7]TR8#1j\qqM4T
%@hV%OpD]LR!#;Si(K+)QPJ)6i/;>m7F",f-!``>m<(7Bpdk?-98qun(T>!\eYC8D>F$G9&%u7bJdZUKj"=E__-TEPrf(p.e7FS$R
%]s"8\160Zk\,VCi84Lam'#c"*;^^W$N]`]gfg'urqWMcJD)A",dd*_r&K,5TlYpeKot1\50aiBpDX_f,o_kS0<($+A;LkSCm*5!/
%B]"==o:r!G-.QEV'd-W#-P-k5f9)$7De(Gkcg-#(m#tk*(:f3+Ll)bfVh`HB53B11ru>/>NNI#qLHHOWZD.m"kA)hW#dgt(8Ta5K
%h<a:A_=<&7]%u09-H38&n5F+lS?i1+[l3prDoVN`B(g3i9>(ORP!tW77iNS6ZcMnQYi8p;%CeAP3Ftg[(<`-<SA"d4cG>\VI""'3
%N/FcUi&VaK:F>HD5ou5D&SlYK\Smp*D@in"e?k7[)KB=_J<#5")rV"$ZTX51!IPZ*:35\%&n0R8ct.2=N:u>W59DW[4q%5g5<lUB
%2Aq9]h?n_T+W."=_9hXYAKq4*.Q@r@ok;'1,bp'n@Z:fo"E?5%["?AgGnQ/c/>e$N!,Y(me5,7GIKLP$osLS7rZG0U9TK+$9tCKS
%A*^pQ5B'3:N^R6SR;C952qO>U(6RO_rPQ,5IQ-A/5D%4Ba,<ut<dP"ZUsLM&;Nlt>oV`,=(*u%fp%oZ\-fb""E<"7o`Q4mO>lp3q
%pRH-CK/oN_jQE2"hU]j;^_1HF`7Io[&60Rd4[_su1S2',>8GnZ<pEQO7_`Etoc//.]79GL=P<G@s86Q/cq..B[)Cg[3f['k.+<NG
%:,SsG?s<#7AD`I-Z`#S^:JEbpIB^6E6U#ecc[jF"fYiM^:m*XCF,-6Q#BGS\9j<f,b=3QT/,F@9E',ICQp8;VBl7b4SD#=QiP-Es
%NW$tg!PXt]I2p?a-_`'G`?Wp,S^95h-Nu2,_V?$fah32_Xlrbb("f]SS\P!6:;Qf.I""%Yn9c>+q8a6Yb+HmCWj$.P3qp4c\pO&G
%HF!!0nQF?SjC_XdGaPe,+0=u-QquT:o+CZa1UA1-oOH?f9.5/e[*?92ML]iJ"rmPI9`5H5p2%fI0;]ohqRt=Octg'LR`c+3<631u
%@7jmoF`ro+j#2'ICJa+"T=t+2%.0'j9_-Jd"1OcGEqhQbc2&100J0t?h%*bC_)N-nR[E*N253(=@CPUcZZj0RMRahFkJuUOhF6-U
%7k'mnHc!t^]Q>Z_R3'W@I4aiMEI<5V!,(Y-j;OrV#6n-\I!W:M&*A*pP+RA1H<X$h`2/JrZAA3a'd0+/XUYc9DBaZX8T@BnIZi'p
%Ja4?CRLGRjYd_MkPtp375.:1,pHLk^D,//]QZEu5T'AnG$$o9Z=Fa&5o?l@MfAJh1a(LOpm-;Bp2CC!nr*YL+N;Dns56mL(A"suX
%_LQd0'k)L(+Tp(N`N<*+D+5T4`\6oA&:$MF*9l7jA;JD7Y13V7lFp5K7Ue:ManX`:k!"fYm2J_uOLJlnNbDlXP@FZSZl0l@o:[J'
%dHYNQdVEuTpW:&)lUX,U_<6U6"ksP<^HqF0CR1]S/FG5e)Z!K=p[<Q<_u!saT1(BMqWE#fM;@aNAX+?rqX!$&+,U"]g\VRu5IC,B
%R=!IB&%b@JeNeRBCS0>;cdu:#UZBjn#FVcI%8J>@S_fiIA@M/li3!._Xl?ZK>$2rDp<Z&P1%Xkpe_e700:,c`h4SUai/ETuVYm*g
%5?>DU,e#GPB6l?,T?^gB2=:3?'c)jRl=BELBr&X6V?)D@RsZuB05f=,.P)VL8q/f<f)!;[_"<DGTq-\ne'G)3_@>f!a61$66RXfm
%hJQqeb]j-_ApIn*8%V6b&3mO>HSC>WLR+m39SHGF@ZN+Z\$,f'cVQ"O#@(Cm/'BW-c+=n<gell3bM36[@$tXS#cLd:>t/lN<]CG,
%WaJ\cM3W]>O??^Aqe?(PrpG9UeQ<.b(_a].AFj327MdU+X;6JrH1^^HGP,pp)Y]a"8^gn]FfgGYH7,?/qHnn5IWn3TNGcWOf>M2r
%[d0;^_Fm?6;-)Nr$_t<l#jCj18V:]%l%U*Z8M&lWHb['N^Of=As1WW"+InNcbWR[hn+)MM7r627IjhuS!oTdL>qq&,=^T6`[X^'q
%j&nTKU6AZnmDP(Kh<RMD&,-#g`N<UI=rnG-0(')6$Zgc@(3o38ec/);hp.6V7-m2;r)+QS1B<>jjkGH"Y`s1.'*oPO21T]=&',eA
%R79H2LsHXN$.N:N(QLj3ns<9o)F4%Q#[NQnK74&^<O4rRBm'S5KSZZOX_j"=">#_r'J35+2#nXC!?GU5ZQ%I%6=`A,?fn8XL1@#S
%bpF)M!44KbZ\4/gF(RBl/EYJl<2[,M?).Xt*e6/1S'T+oJ>J$^'D:k\7)ZqNRjFc.OG[A0H@g946+nS4TjF.U"DEr,o^>a8b/Zq\
%F^QJ31&&'Bl.3oU<>/<`VZ98DJ6,K68h*T:?oHGdnq'RH@J9YEYfGGsUi;u"C'8`I.kbm/boh"W&;K0QRsS&b%0?O&"")YNjGiq2
%J?*Y/E^,#,rUZ2unBL.FDr8K`f5]_]&Q1Heqa9Tbo^lNd:q]m_MfXtNQN6c]?WM+tp8]KMdkLtR-oI2%"N-.]-dkpZX%AQtCR684
%AY:>RYmQ#QE06?%Bf'L^d3OfZ`ch[F_=%W_:_>!e'fSJVH4]jRa4>B*.IaQqSO(t='$M^]iQ6XO9%)`"_?p,0&FoG1Ln6de-aZ>F
%*mF6WeL;=K/8(p+`rorZP'-<1F;eVD>kMMIaj^[kYc#Yq.bk(I&=ebq+bI+<i+(,;+4Y&0RZ+#Q\_@`!du>Fkd+$`^'gd]Xet`FE
%m,[L7EW\='>7V],e3t$6KUg&8+OUZG"->mF9Rf/rATgBG:ORTrc"qAsDr_!/Lt?"\@O]485'h65"F)kT)'jEa'G5fsD.s02/HDIE
%ZtE1haO(!2U>%BmBFI\6Ya\kK\i&HNJVGdH5:ZZ)9(nU'8[/rH1sR:F>gbp=>qdk?_n0Bl(SID7N2$iuNu<QFXb)&4m[hTPkc[N.
%Sps=DnUd+'<[2iTDXi<[,ZdY9[-[)J(Shj#GY*ASJsR`b06gfX21t(g=O02ba*@Ru8NmllT0WG$gPPL?8^uqbCA0c2:W#V4prpda
%%<RU47n!-<CSqN0p(3G9L$l<-,/HVS3K)R$![S7d+6:+=H>u9ZYnV]hTg;J=4@fgKn]S#iO7A@4CPl9=hHdVAC%>539[a1u-MJ85
%>A6<.U6@[u8^q'(?"b.eEfd;T^$Q6s;1&A=DBp\5C-.PM-QfV?I/'$u[F59SY4guJ"#L@N2b'"4A]penSP(T.5Yc[ZOo%73Os/JQ
%M*f_AT@ZIP2':c,gm(B/OY@K]+%G++!a,,t8-W:SXonfP3`+<qoNeQGXVZ,tYe?k?SU^\sOWI>RPY%,C'KE((p-Wpkq]uA-fU!$N
%J'g#fEsh.gl0Z"Mm1[,JD$>TjUYu5e@gac)%1Q#\\r1eBgN6"iN)lULKCi^#65g'l>9&h(gd6!aBlP(eQ?WjZDqZsVh1FkQ+=3"!
%p*KRJmmZEQ:[f#p`?/D!<h5mZMlTVB(Bi;qn>+.jpjQO_AH=qI[\itp(L3Lp08Qckh^=+ZBBKZ^CPVAb!j'FL&7Mo;Se^7+Z$O1&
%HaKikqph&P%.,3GFJ,s0X+*UF'n[Pq4XU6[iLl%4q(@@m`s(7!_sO__m32ssGM)1*3LW,RJ>:;Z"FpaB?KoNKAi0U4dLLa4;6A-(
%!LTgYjV$C<*!h"VAuM"1rqs!K533tJMleu\1Y\Ro!ZaaDUH4nJe?U1X]usPlSj:Lbq^ZuiHJPr16lS.t_FogN^9VJ[!Dnm)E6q<&
%88_g+(Xm5-q#]1D`Q?_q;\?>3TT[C)=")hbBIPUDQ.%W4dNoD@h+eT*GdqS9bYb`F"@NT&+5D(&dE9G#?JMM)TGc`Q"EmTo10T#c
%D;?ng[X6_M"*u6)0"('>F.>Nl2hPCBHrYN.#HK9kRC*Qu%J@sMB==XIm94491A`6`a"?%RE=agQF9Aq"ae2WNrE,b2OT,</mBu`+
%q99W7`/=t_\*?2[K?dKTX4r=P90</u/jeH7MQcp(8H#Mdr)@4Y+'oUa]\k*@`=#ub>eT&udDaQf$*RD!C%7H'nq$l%"g<`d%%.ob
%fIW_o`HYTbcO-u&i-A2N'##L4kMl1-e,9*=q;&45[()UO$%4Mp0Wt\a?'quU))@R:\BWI+WBdSGB(DTh7b_SO.)U>1^h!UO[_"gK
%%Z4eCRVc2p=70^@ZSj7G$9d@$WJ3)[1!+*_7Tt#RPV!U:l!1Zg5]^ZM-Z*ik`=rPpAj)l@Fe@a":D`qZN%3+6$oahlAM=FUK#R-<
%2VX7<WChg^MRSp@)KGd4":N)C\>QW\aoT!gd:ZacL$#IM$&V\g9!f)q^5fnoK7*W?ho6!,#5<_ORS/kR-*+gN@5tP_lnBt63dL7R
%,cK5RnrAriX8<pQ(@"*(X5^0:ZIeC5Q[/G4dR1Le@3/0Jbd\l7V;&JanNk'/?A_9])a-@G)(\`(HfTHI(Yt#Y&)PqkqB/$`$WX!?
%R`?Q/d?JP^=B'q@2X>[^?cHp)+<0<diP_I_ijZ5bhP^.*XP+Qa[']*0IpQH("@"QEHN%'8eIhe4e8"fNQ<PBgcV(F$TBBcekMPmZ
%X66+A?i0iO'!18gQXR#R$W;@)=7:?\^[Ym*G-1+<A?d!4&nODO!K"OuU+Chg,t0Ui,]Y<.6ZFrIZS]:W@eJf'6QSslB"h9!HP2]n
%MP7VLNX8FTldk:jfHf20Al%+jV1O&EgOh9OOGS$=9AIZ`5t,7AF=DQf=Q,sc26A,1lFqYV9'^1VpS!L!UcnsMQY<4%V&UIC!_m6p
%kC)unRD6fkIA"koQ&si>-@!/>od2n'$uc_Ocb*?aA)$%FqIq#$qp.ZfTe\GmbNauO8LmB+,8:Zk$OD7)-?Gh;<JI,_plAcBF97`e
%pu^(cj-au6?`%t<jtLlV50[S\D0V5em-1GDb\qpUEgg8qTBA*!b7!+&(VIP%?W)pAbAO4Z)m+("Der-KO8t&)g.p3ULE4UlDP3rH
%UZ3@;B$l)eF,AZ=';M1BUCZn>//B?\CPIdY!#3+./P\72$W^PDKJ2]VW1?=.`9]NJ*Bp9uB;7V+T?_6[D7B(8]MD8I>q?r8D@TXn
%fuQXsKM00:/pHl"aT:6ELUZ%iJQoKddr:SdcH]i"Z];1V,A/a/rtP!=,hXVt!6pR[3U5N6Rbi.aUX9uN3I9#BFi0_q<eZU-N>SDU
%jB-!JjapIIc4AO<^$g[SJWp%]=1re"?KMiHT#&VknN;^YZM$,=l1*ri9]LVRdA5HfAMpRh$d>L8H\(#0?*1e+V,h*Xc!i2fOo_/+
%SAd@4Po@8#3Gm$q/F/]%i9beZ^C'96Q%:@sjMM?@+%>-uM;lFO6O,;Lo:h[g2LdBK:>*0`r(=KEm@:IA^'==)Xt<GP(O$co`!qc9
%1CJL5Q%h(+k:T=ukg"o%#0Di)A#E]D?l?QQPU6KBM`(9XC04h@L*?0&&TbaH@clSn-`.qu0j^BB`H$+Ug`=tsc(c^o4b9r8V-JYr
%h,B,Gbop@Eq:A:*/s[/'8>]D?[2k4.]WR7tI[>mgg@VpgCK#gsBTjdm158aIc.teh/4!"qQ@@CG>N/3?\kYO?."Vg?81)FSHBTke
%_?=RB>;qXl'XHDCOTA%LS@3:a`@Oe;S]s'c&ur:m/JEVdlXY"]\d^ga3]Ronqnr#7UDH$C3-P%F??E"1T+rD?!dJ%!/<9bC!%Eia
%"VK/g?4\<__$a_J</qat8UL6F.%N0gfDQNC-VF^E`OORa8Bit)!4YQ0o:\8X^DnsSK="JQEl4Br5>$]R)'P,r,aL76Jp0-66VKBF
%A,i]jmAI2.OV*ReLLN*ZRM+RcKGMu-n'04>hu5%1G+&FI\XkPa9!T=GT\e>MenG`;/%N2r$R?=IdA&cPIE<s"!.`fUDV*)E\?8Ws
%->j?P==u3<lS>A):2V5WKi.hja`9CRFD<X&7:W"=H)'FEF0s[o0!h`mV@tVB1/)/C[4ts*#OC6/OhqitV3J<,\^3=D7jYJuS$ooM
%2Eu<7A[sk4=H3uGXJ.!dn1&?93\A:SF5LEL\8LZ!1cobt"PB#7Jr'i._:'-7O"XXV;(G6N68MVi.1q0(Uh8:KM0W,_DgR!f_,`^l
%IM;3aah!lAH?^@/hK&;0]=MlQ@(tfQbDc9Urg3J,?38@)ITcqdDa,lY1:WsC"7lUX.gaXP:Wn>hmgIR:m<_,?//.DrM9lX%Q\kD5
%92`Snk5K>8>q'4h!k9kgg:-^7;SR!hEK<gq_2+U?7kEf=$OAuIlt;:SliX*uA7Qt'-4<A5=7JP]OpZ="BntssX-CCQ>LT$Po=j1;
%'Y=0[9,!i/f1)#VCET8XHdT^,CbJ(X@iMnaJL5+RrUIP"AiQV*kGC[pA(-G?RLM\+qs!'Mg,/MJg&lZ.,(Ij#b@+?NI8*?PY^^W<
%)I*=;s3RV7iHdW$cK\[`q"qj]n+pbe$C1i"H^;Hj.S8l/Uu7K>mRseWJ--$RaUTksU]OZNd84\<gN04K(:B_1G".kGW4H*SbQ[!9
%&i`:K"aVGOVA*<8O\RD\>L]D,&ldb#oH(mhX$GHCI>_/#LT.&o[YJ#`TF4M,+cAsD;HH.;@Bd)tKN4$Y<lJ)MA\_K0WiJSKeKK^k
%&k"CG*@P3ea1`qu34k&O-mBAUr_>N!Ps:PqLW:SRr"HGGXmZ>PgF=E;;Cd>*CnIj@`EBi)F\Q3hW(CZAi.Rr_ZTl1LJS%$niAKWT
%(Ae9.DJo#]c_,muf[F8'mA'5#;H42ec8-Lid-SYuj[<b1N@+IHRXc"?d45#ERgN]ebNSB"O4[",ppi;I\G7;k.u6U,q9[`#dhcTb
%q[jKd0erB-)]/)uVWkcij7HI<#K4#^H5U`A4^QT6*1Tasn1%`'fHi71qe>e!Lf7qt\*J)Db)is-=V3!$)g2;V\<j;0a"FI0]t=_k
%XKtOs=m<#hZ?\^$_RU,=i`F&0i'"RpqpKEe0T(#E[>DpDRf0UYTRqicZNCjpP'4^E@f>3$Nqi;)]nMC:[V-Y\\CrhWDf,h2Z]9Gh
%`[Ja8>"LmB"'?1eB&ZRcUM!X`[H29:2p;#%MULB`qbS'MSAmM'/?!#rOGE*h"(9@<#N_7nWSAt!PH=!3^^L[0n=pM!8&Gc'n,VN2
%V3NE$c/uu;_bV402#c]!:U]r[HC$M2?7a;<(UFjinn-G?00r"4YWZ3+8W^VsXj5(J7'ual6rOK:.VIV3>7ONa$^hEY/m-'8X#;Un
%lCDoaogPgqn1Niorl^ai@U+Vh$+h[*%``t\5`];5dFa?nUMY!g^/2Yl:t-!,jD<\2&p*ZGdqHu^:$R1Pm^bG9OGM?h-V[7mmDY.:
%2!s%`AkFkQ`I5XbH(VmK"Pmg5S]Q@2SI0%s=oFUqqsqAR)(r=95c3U0?i%b^Q$l;GcY]T"Y7n?^`j$'!\pp/jV+o0D[Un2GF[F_N
%kLpntH`LlUL4taISS5$<bejl3$Wjp%C\4V\<UnF0d<nc_Zo9aq]Yg7t7Cn\ps4"+i0NM.UpC4<S/_9\IgcFKjG5.CS:Vdoa)uWq%
%p;`e9Dr&'uAoMfR4O<#Q\+MSAlhM@Lg`i:b1V+%RGujYcI%&^tL#?*Ws,)=$qmcU_!XRNaY`)$qpQ\RMrmBt^i-!IVURNM(XU>SA
%5+f@c:s<Pg+.UN'1a'Bt]9dU.@aT%]N-%1tnSI`11[oj[PRX:G7koLQL*i.1]9U]JX[kb$>JoIhE>U]:L%C3o,MFmu71k.3-"Y^i
%A\1cMG:pcMc"9u:T56:X[Xo&U&.gtO5d-rq$bkffNgV_E'(SCCp=$2D\nA);j&Ze@+u%X3G@6pm'.MA=;[^ljQp:o[)%IhhUEL11
%&[r3BeKFo6m-3%g=Fkc^iR>1p>K4#2I]tUUH[)jF%sW]8HRI.f`I'p1FuFCBO3OioE79JWf(IVl`ZH]=H;Omj7TGg9F1X-uU!DXc
%gd:Ckh7-@*C2[6j<6O'8*+H6\IF0!MCVR!Nbok)./CREeZa%56XC'na=(M8G6?[jlTDR:[4]kI8rLSCSeMP,3.BT(-rIT1uI3/l>
%Wj-$B9KuZ29DQtUSuhhFm[W_*?_?>qi;a0rZbo4.qS'fL58BKh54,TBgS1(_G]<EqdDr]%@ZCB0dCL26]!_.&;r&:nA(?&fVro,Z
%jeFiHfdTk^55KR`GW5oCr=0KbfkO>U%h?,c/EOUHe6?2!PlHRCUq%;@mZQ6\Nt!a$ZXO\;l07,m*\Ddr$9WhuEm:.j8Dc@cJ;m.<
%k*]MsUsSHbWL>)70XkoRkIuN6(=QsQMpdVBU04WpEcd=c4b6TcS**\p=*>D2,8Pu!DE$CBcR9X_Mn4/E3'15k4SPY_4Z)lOY_I:'
%r'r9,af2nCQZpQ%o[ffhe'HJ;[lN+4ghO.FD)mnA9j\/dJMX6*4<N=tiN&gA&>Ca5i-9Kp"\.Eh=_Pd]=.dC>5,/n31jiAA,KP[:
%n>@RVhkuU+Z641+:@%+VCU0@LFarYSXNQ-lA:LSX>dL0'EK@CqTD6pD+-Xp?TY(cN\Eu.0phi%SrpkG\ObOCA=$kL$2(2^k"gMr;
%ZO+J!0?_RB1Z&pp_00$X.60C3i5E^-AI=VZQ&ZZ\ZE!FSO9jWY>^,re6^X8i2lcnBk60gt#0J)bi6Lu=`BtAC;E8pM.6p>%P.%dW
%d8=<C?X21$aTYLKUfeFF5gDhsFn.Wt6H;M@K[SX=\3s3#6jfd<7^5oX2;2VT1sK;cd%f$65R)rK'hY%OCL!_nA2*HnBmjd7(dcs;
%VOZ$ngSQ8qVB5'`B3OuK8)!K>'e;QpeEDbH,Bb).A%9"S*AmRKLl=m+'86U!XP<anS']8Tg2F(;O`57e/&%TdLjdkqTc#:0I[^=A
%l!I$$SFo9?WU>H.!mH8fE:7=ZDpf25.JY*o>t.&qFt#)\eI??:S?n@#\_&Ldh/+Br9+cWUmW*)p)aj,)j\<'c_2-Pd?sPGOf&JQ'
%(KX+oS>`@b`n[n\[9HN*U)a]`qGO-HN7/s=>J,o)FRO%:A?LG&;m=a';N25,BjR)`:$.r)+IaaJq]8\:3[88o+!oD9Po.lLqC3WU
%;n"I4]`%j5gQNs=ECA2COH`.k[=`)$:lr]LSN<F"=[CpJ[g!bg#8$AIFLo9#\?1OLQVCF]pPL*d<8@dD'6Au'cZ2+m`rf.J:FX+'
%_H>>f?86*pFi@K=I>LSdpf.D7S\MRE$['ih0i'Fuers^mGh@s`-PYEPEK5RuW%32F%GVN%<`EliHoqLB1\U<[Sj\RpYh3+5%#DJR
%QB)_aTLF`"nA[@<7`C@Gb>q<ki]C.908j\.YZgMrC"B9P+U+0r$rlWk)tS"Ph"TKaqEb![(UD%R";UEL,0s;4Se)g^SF!rV14e#g
%9Dq<b?I-.0(k?Lum?XNfaJWYsiGuKpChBpbbj%iXHj[@RP+P3"er.)2@b]cp6TV,mM8bsL<_)YXIG5U?97H're$'%g=%lbq<,<]n
%ZO6ViU#q96f+^Bof;9'Q&,LL?qshRlQ?Z=cFG;139jd>V,Oq.[<+=SdkYe@.lHEpAUH)9ajfusq8N/*o8[MFU)Xg;l:4t#nYPX)7
%>nH`sj_/j($5Tr5J9\;#:.5=<"';m*f/AK2*;%*A>CZ/qBL/t<^nGF'B=/U5[B3PgQ))D`HrFe)q\0of*uUUnK%iO^/do!(/_/*B
%3TeM%TK;NMl4kB=c&^S?L@,\`/,j*mNp\=Q?D..DiA]u7dQP+YE%F)o9LsfVU"97A[L!+SUe<ObJ^sEbW\#-t>!P]'d]ZI'r=*K%
%cTC^DkCPlKVmFbm:?H'ZPP6jos2NZsH(Xf]Njl,[^7UWq9<nTh7,#6;WroE7m,H$:,0U:]qLAb+GHXg*U9Mh_CohaFIQlq!qN)$?
%Dm/%63/4^*[]`A_AQ5:iA0RM:"@MD%@qgG"ebAP3oWDDH3Z%_QF>dKhpW$Kd3iD]blfJF3<VlI"(2dS7\-H+V!XbK\`aWMh@qNKD
%a3eGN/[97>/-WBRetKPd[n>Q/?A`eC3%`m%h2nZ,popV+YoJ_A\5U=8grA?B:o.%$%]fQ<!)J+RZ:>TPRr2c'iV$Tn'nF=%9R_r,
%fTJ,Cj79h1p>^E?jErCJ@:s+_@S'XITXI:Y/cPmoFZo/Un>R&dAK^h&(%O`J[_\gFj=Z^G5A:"'&b-dW@[1K2Ob[3p@W3>f;+"k9
%mrdOSX,jU3lD@"&M+UqmmZAVUQp713q_&)q7D%G?,!!7#,FZl4i:FC_7gX(a%):-N\qe"e;-*]Ka*i>.6^PdR%/"n3<^\,O\XKdI
%n%DR*R:+:sdh1Q@TO3S:Ec7mRGF^QW&_Zcg10oGrUbU)a7:XORZo*2[I$&U8O)+thkkm/\BoZqRBXGkHg\p'FBFD[%Q#do%m#XKg
%R!%R[#ErnN`DJ[^`@)m37#$NaG#L]^RE\LD:76tVZJ@-A/+/)"J9X%e`_JMl$F1*j!XAYg)6@YH*<Ai@cl9tHNk%[/)<n>%`S'r@
%]3t`s2HPCki)QGe2dc:e8(CcZGBk=mDXLf4WQ%Y-qJ#O]JsVDCCA"pGa0r`H_XsItaj)X5*VrR^BqWmc?^qnOSp;dI^^$fU'Dj@s
%bQf4l06XX6?b%5\Rr#(]*:2cWHglbE]j%TT0S-QA_?#%`C298bTqbj*>k$I[gJ.9[,-3foG)SP<G0p]bn0J6i,3!D8lbQjB\.kk>
%ek)7,L`!C0f<qp'./5<.p-q=ZcJ^l',EJP95f$pWp8aJ')9(\X/00-Xf54.^dDtmiB>J390AY7RAr4S'Fq5cT_,X0sF77=6]NcC5
%,i"O(gr4pD^7biLpE(aT=E89.MN`+gQ:7K`)6RWcS-Y0500AC?N%N;ohO,j5DjpoVmUG9=p<S&k'Jumn$bhL.lrDhN?i!If\XrRt
%eo`]GM;QPKO.nKZ*g'c*PN@hK*)'orEjDuPW,M/GS.uO.#"`Zf20;gipa*26nC#uu;/#SC8c7C*[!+,U>c45@`T#5Kb0oK7r9_am
%Z[,&\(6X+u&Rs.0^7Z_pm-Ln7+\oO8>2"DA#bQf3Tc?1T9S[T-Q6[j&P]m?)nG",8`a,Rte`2Y")-V9f4+G:doN:lre?p]]?Fp\[
%>4^iI?,5I=duE<G$+iHAPdX@*,0-FHb4$h3gX7%#\9"ku0"Td=&JnF-)===p@CYV^/)M,=)V&Q8RJ4-7M/PI,>7HmID3c$_)7DB<
%Q<@9,,oW\phn?PSW+/Y7/.[XN_DZj&A%&RPp4RSHcMB];]=od8#pW7YnW(upXPU^p>;BRK%h^JjFl/-IS'8,</R.QYeH06)JZH(8
%g47.M(k-U2.NKA*Ad]e2l#8li)5&=GaR,VFd?S2Q<3_$[+I&33Xa5FmgEss_]uIE&UsC@U1p%IaP)<_5l^;RrNWMuQHC;S_bTcSZ
%5dQNHPIM@h<(f/TZk4sI4)4-alC:3Lf.HY!^<<U58%1%,`<RjZ:hUp'o+Rk%gC1p9juHTreF7EC)tVK:O@G^+h]Z398F"*VCdP00
%PuXBgV"M8=RR98^P%V,0$>k9@D6e2-VIb5u3sPfu_297p!*5!2,/os4?_aEqHIu9mgi;=WDHr!e=p2lr7X;][lZ/g_R%_eegkfqC
%66r#=iZ"+\<m=8j[Mf>2KpK=1BjsLs<I`eL'*-";L(H`BKX<3K7`;+6F%ku(HZ6*/U/DBG'%+!OaDRa&GtC3#AbYl_;_9*sc@`'f
%N`l;M*iqfKCr$eB9"0ugXba(NA)JW7d^jReAF`Yu":E2Ym0*%VG"/5n(m*u3[)_U=@8I89,s2/e;o3DW_p+b#;1sE*EgiT](0.He
%)nS7_:bN8h;0=^WoVj((+?!QefW?^-cfRHO2-On'@Z>ateQjEHR\nR@f-FEc=*Fk-W(qK=][:\*0f;d$):Nfj;Bdn9IQ/I.VQ@pC
%gp!24LX7E>F7R,_C+?`E.NENE/"cj\G/ZHK+BHs8-0M6qlu!^$*U\o%=QNiJ$!Qp?3e[$gc*[bEZ__-^C^c.HWR<=DFQ`1M8aaWO
%B5P(:L?67ZS_cHo]VY^B]MqZJj@r*YUt;^?$&d7eTu`ESl:$9@NqJI"S^#YW<rtaqA:)gD3m>f$)Xo0b\-u_G@Gd^Ye,*oGk.mkH
%e;c[fk"-bdL2fBaGG3F6^%,kb7:2n._Glk!gPONiV4<qsI\W2]3.n$M*GNZLKmX$$Pu`)hcR^h+3\p<T0Rg<2@(>m9g)&.P.U&r\
%OAd91[Kb9L0f3)MP\,/22`G*oRaOV`B4(\iK6!E5gjl'&SXgnhp--adBt2,DX-4LUa+5fTo4G8K/B%\V`?fk)cV6auG\;*l@eH`U
%Qa4.V.b?>]c$1OAAAK0ZOJ.E:F#)@c,o[i`Z1Gl^Nb*uLG9V;g^.m(kP)6ZiSDr`7YMT7\9qQenL@B^9)nfP'gQA);4RLR'/6RZQ
%9,jn-32UP(p1Z/g>D1%Q4+huT>[c:nmS?^9LH3>Q7ZT"0&EEpS9,_ub5YS2+VX&!O]*bD7[hcG"l0SuJP`D.5+S@]&+Xk`jCt,&A
%`A)4BGe+^;bhL07hiWM]6:.uKj>/YXR>1I5[Q`+^Q+"#d=Os.MZb?ciFNrPq87ocK;VX/9_65L49u[))P>es29CO/WO">3p:Aa_u
%>Is2P%.[;%G2DlNYO&[O\MRT'<6sW998hdr?b.N`<[D.9Q7Sa/7cE,MWmZ4tIl6b-8u28[!#23"p(_>d%2@.X0D`^BC@)hFp2<@$
%rL"E[g":XqN.V2H=uG"h>DK-7ZXQ=+_l="1"m+(C^ug@:!Ra#gXdQ]W`H0T'%IW%#KEfGmD(jEEVkG_c*&kt5ZFGN2Q`M*l:kS4k
%6u&-Hm_L>kSa830gq'8E0XXGb[_mfnd:n/sCXq=04PL8!>)$7G.43`S9CYb9hf9GR?-iC`:9mhk/)QjOoa8^$k27S3%Mi'"TtZNW
%PbNC%bq@[Bf,0H:mOh&r1OEF(elC:CBmljq(I0V(;7bmq,?M4\E[;(\^+q/'%!j(8%moQAh_>$!Z('Bt**e1K\[0=DF5"i=bZE#f
%%GL:k8nb&KE0o8&1'VBJ<2L^tD9HoJHgE2!7VTuo+61JO`7;nW^$8t8`++:4GpZkeqg\TLr/Ym`IfI`^6W\Db!_4U[rrM#F.%Y*n
%q[`2?HHCq]8BjC88jPg]aqmF/dD>WU&#ScZ%<0JsGQ.aS+=/uLN\:D!7.H9kC]/`ZYo@*B'@Kr,;8Wg!he:B"_%8)VO66t^ZTiRT
%q1oMVqrm_CbEnO&K2gk(iA.'#3h&:)s'btA/EZnW,lA2PYJX08n%\[V^\b&rr9:D6o9]LQ0E0pKrh'5hGCS_hqSS*'qP4(0bo5Mj
%:l=[r+U0nUJsFIO6jmaU6J];)@UROBeXf8F'Ie?]0FLe8[H5JMeRc.4,*a_XH_;Mh"AA.Qr*X?L>:Fi&b;sbH*[pkM4\B8F*_&^R
%ZjcCZAaSU`ES8lJ3@"E2#FZ1gn:Ee*^#8Ih%L3EFeq[+.B_O%Hcb/Y[rf1i.`nDSVW-k[Rj+%'o5983jR;2]3QFPKXiPU.Ks8&@G
%L]6O*$m5KD_ghRPiPT%%hYQ9)+JIgpICuL@?;_fI.#up/`p]YME,;)N%V[8#_eL+?raA?GI1d*mmL'kj$mohD-^$7hR^JgIf-.OT
%UB4TW\R^fHN*/*IDHUN4!5K+hTM5E,iHW(!%Zo$EO!hEOU'=jnR4N/WgX!g'H6A1RG3V$4,,m>OI/M-<jFb!*]8+Yeh]HQ*m57ie
%*QGC!B<uad?L@nY>nHd9#=$cnNFbFu3q1c^S@NTX7iZ9sgBH+-l^SFXi3LW7"[flN+sCsM$NQFq`B"?<ZBp@MY@8c#pZ6)j6!*$K
%7"is_1ATQXD2hq;LLkU3,;c/i[`#n*\7KShAfo]Z4d,d!*\op*q*<+tFlA+,CtdR$\!(nJKJBaF,L41(nM5e8d:FFFcbQ1uqK=(@
%n+F2jZ,6m1m1PP$+^gHOg6rPu$":BnJWs$VO/VI-C%c#:\m%[h'Lu/VnJ8]RGVLF3<;A8<L@BR/[u]Rl(NM`hkWlH4*1ksgkM#@M
%Zppk:_dJFD2J6CK#`fh-[5.0M3$R%7M!M&LIAD7q6?<59qSK[&h12@jel*%[$4((A0#2N[#:Bu1]IoEG5XRRJI<gUgEDrrrWCON4
%PW=d1:4\-P#mI[*MA?e[;qfISE>5Y'>)j[cOF012LOJC]p>nA,(n#BWo.Zb14.H%PirfpK^i"Q(U;--pBJN)67_e%j+<$;c2H]Mh
%]n!F<=nuJ,&<Kmh/Xr_A8lXoC%IAD7+eJmN)TTn_>uKYD3Y-ZF3bg$[PA?\n0UMR'Q3b3Kq_5$%LN7>-G7HGOcf&R[3LBO3SV4Z&
%`K,f5CspG<[DH7#oRrocD'kkoafh,R0,hnbR`DTLa1mP0naWp_#J^8]^]"33l2uM/JIh[^s+C1ToAr3?T9lDHODV?!@K/8Q$3,#D
%f@U%V)Qs&iq=="IGW>RRfh^Ym?hnI7[iY9nm^K+kT9&Jss7,eIN68m6qYJsHAZe\]k5A#jjopiDf86^A<#54]3.br@+'>NJo4Ac=
%hYVmM&J$W86cEGI^SlOa!ta<^_PFI#6^Br7&Q'/[O_@8h4-9JU);28NbY5!-5Eo_-7.`K@.".:7H?A`1^3V[]-8(ReY:Q)EZqssf
%NWtQB+Mm3Ujhf#mZCU+\I97RX!(odE,5(lmCt]saVnaRpd<[l8)]D,JRtEN$""?T:?5FE/+Ym'@hm;+6>X`0Va?1D-T_bGnN<TZ3
%E6grs(s1F"/@0MR"HOiFLaa*4*s&[-hV(]HJ9[BVF*KSd5?+Ioq^Z?A3;2U,&1NGR+NpW;D;`o58<?Z.2)>QidnFNt=/;$_Il'Uo
%+1RJNAD5dH0Q:SRM/,aF*i\bjb`2\F*m49G8M9,N+9MjQ=nW;$1X"d:aFP(,!b2K$Q]X6?j%/0G!**.teLq<X#OQpR%VY!@RJci%
%;SHC(qm**#bmsXT(bk4&6=:AE_+;#dlh!k_&m^]fI8TZ9'c[W_+=3-Y$&.S4b4abY2cS\S%0$;[6C(^-#pkKS(OZ]C.igS.VW]ET
%fb8eE&2Db(@kik&BEqFC;0We3]>]cb1bp33eAA`lkl=anEJ\%hd5?()iY\idn`q%J9Q$.iA=14lE0q52#\b!GbogU3E&jV>85>U$
%T[0k`UffR,5f:_r/_7Sj'`7EV?j=7ICBp)ob,n(r^_t&gk^^YPrjPp&\aE'a`Z=&maKXVfOm>;SH`PhP8iXJm#Tr2pOXJB3ElH*b
%7iGHV/BTO`g[?b"g_E/ek$iShp['sI*5;"O36?28l(Mm_l3hpXL*(nR_l?CW//(qIl$&Lqd+;FW=?i>C\(rR-%&r6oJ:jc.R"8f]
%a\9g5\0bfl@[GZdrl(@\0q'i8<:SW&Veg>.h)_),PJn+G%>=smDi3/dN&hu)*[WF4R$UJ!eQ2Wj@[\6M<>?XtA$Z6")fim]8=C8X
%%`4]7d:RT+?WUJ%eC@?1+A3b^g!i.BL3CtF+R@*Z5VR`ed"=f>"ESo"SSrZrm>P)&+gV`U5fFouQ%?moA\)/R+9b7i1m7B=%e8h>
%80<a><pM:W.ln\N4Maf`j\NpRLq-Qr,I(bplD5PT,7a[6\k"RQ\IgP65(,jX"c0(o<g8-\!3Pq*R<]f.@ckR(]37-u]b4FU.G`F<
%..k^7ja]\N#b""d50`-j>Qj8WHY3<J0'VHSs62NhaUN"=Dmu_C13gVmCdgaB>^7Q"Y[%l5A05""+qfcYA]%:Q.gC6Fa?YSU7hkhE
%[ppm:-jm[@RAl=B:Ei`K]BehjcXWcKWO0o<&nhDsS$<Pf%C#:<\!;/q"[4n"&5>$3H\[T^UnGd_Bm5SqPR7=g=8@j\,$"5kk-%3C
%Yi,\8SD//U@=8]R6d?;]hIUF_;\b4$i+2g'T`-hKjg%$66oH.ZbO68_cS!6$:'p'I_aW/!C*C$!&\*)\#<HBQ`/O7^cs#,O>A&D,
%ED0uF0#^I[/(.&`6[^.U)77bDmaG=(W3:F#"M2eTP\#\fcu!V8>SKG-$gQm:KEoX@%o)1F@b9g+"^4gpD'tWcZH&G_#&5V_J%QVU
%(R(!ue+0EY=:fpp>E:D56/4Kl`O#8/"upNZ_2J]pU7kBdIL)1'<=P*kpi\FPS21!gUqagN#hi,#%=\^40eQ:*W4S^V1i;Mc,FsDh
%pOg0`O!uNWUPL!@J=meJ12+K(bWoK(RGQY>k(+;4I*aD0Z]_J0LA4eX?_i*3l:&`c?/(r-9='[/Z@P@Z,7JX",#Q#,d#l'd(KKR"
%!*0?;JLsbcdFKGT3qQ?>V_8F/6&Z9G!-S3i>R.AF@28j@$U2)?Xu=67B]T,20M"?C&8l<K.C3HFWYd.ppBp3+YCL.oBYZ[$Bpeia
%+6j@iBLKPlH(BcS?dagX_$bQd1O*4^iq[50,G'<T4!O1oP((=W?IFp]_$`;%06gerg(HNO-^?gaJu6Ho?IG*b_$esp;g;JQipi?l
%VI\V!SZ0Y:d$e<niV?fVGm_(Rg[?eqL#kGHG67MBi^^lfS]G0?]'L$bP5!3rjr"cfVC;a^=$ksZ,ctlB?o'0:3^=0'X@Je#W(;=>
%TJ5AoLoZbjD?n!nPkZ4'F!l([L5(;U%USFYNJFY$+u==^p+aRm@oHsmKbVMk;d:*g11Ur/!-a1CY+3(K,6$c'1*PV#*,G,#fhhYp
%4IWrUmY&^m>"/7Pq4(BgHO.@7n/WoI\N"1:O9TAC7/&@TCj$e^A9D=t^&T,U2"u0Sad#7hYPeb&jc^0MOF*1PDk\Y1[m)3jlZ(kK
%QcV[W(]VDf8-QHBcm_I-d!k&P.d$+$k\/+Z`\-^o&"I\grpTu=Y/ao0:qY^4*ec(jM+d4mGa;.qpe.-7'mQ<Onan?eMW\@+f6>Z]
%D0lerj',m^0=Z)^ea@$.c@q)n%W]WU."-r*<;V6:K[B`jDO!IckaG\gX!$;N*hPp)L%-CL'.QF9Zd,eNF]`<)6hpGQ8FcF,INkAA
%p,?"$DDmQ$,o-@K]86?77dpu9@+?As*)IYd:QV#hjo?r6S(#H2prIRH8m]p3QmqU!=_oVuofBJ#X+94qY)(Wl6Xpt8Z-!`i>(Uu%
%D$7a9`]-tJ"nG&j)JEE!_5*cu!&26BPX<g*dTk_g1hjCO80!N8JJ?XhOTMc-'U\AC=&l4UO0M_-GXlR!,%Y=Trs\1:5\d;ojg<:'
%M>j-IlbK7BCCaU)%!?7*&Mfo]18jM5[WW+Q2IFUa.]'sgB(I2oW*B,=JUH+Md:i<C:U'QOj9giYd.4Q)_q+1r@P>ho`VQ(a0U]LA
%/X_4MK^5reg/(Kbiloq.rM3iJ`S)Hk.3k_a'@LEL4JumcmjEWeiGpcEOIejEGM'4!DMJq`9"!3#BOdhrX#?^7jo\4),[^6\ZV0mF
%l`rFi6JmW".ABto1sek'&FGu;X:]^XZ(,/n``WG]Y,!L(Lgs*o-3mY?7G\]q!8qsnqFoci"mtcToSX##hl?rfBbGQXM?($&C'W%k
%9EZu))NWgd8P&L&P/Ln<J`%KDV:Z(qiKiA0^soq;p74-J`5u"i6H]@%7TttN_VF?`Dc/:/@A@%;4(F=U=&KSK(/:Q\(EuN&iarc[
%=s&l4BCtsqC$\*6&?6H;ojW9<%&Jej+45@RAjdQYT#RCY'HoU@db9TM6?%/<7-qfu3Z''1G*%NGF&](\./3e6,D;hMQ4Pc?*9sa3
%a\4l=<$"L(s/UZcYSs:^iaE=+gtBP5/lG"]4kU`DAt$uG:*QtV7^n;sAEDjUD4?01LOodQ/R.7s?:^rN"&h.A:RtcPIUu(_+dl(u
%c<h0.5pn5X2<!b/h)N1&5QOfDg0C5I>!J+LZ3`#O+K@bk1#$tJf7oY*#dHkb]l1X+l6ep4(ep'0>nW:h`Zld)f30%T+RJ&:]EXIc
%(^!s"__p+<;_6V`[";m"H%1./C.?*J'OkM,Vi<#:?'quFMgd(mCo+7!d2Sqh;>Xu5.YR%Cj>0Ai3U=!A[J9im;t,u#'=*:shOTB\
%0;%ZM+N7m9'DS-,m3XAK:Zl.U#`bfP;H5V#T,u:=88assb@#T#AXG#KJ:VFZ/Puh]A/LG.")a#3['nC[T$lglbOg>%*`$rs,&>X2
%)81?:pD(utK]n;IMH64#&_lYIbLr.W'*P-R1dRQ$2&Kg)pk0sr5j4(UN9iRR\Dj=Hb_h^Y+:U>VGf7$98Xq6?)Mrb-'7,NJ,1Efc
%rA"nYV3X"2W9>b=bntf`DT1ef>97+[QN<`\Q)Wc#LmhZR)09F^7R=LE-FVt4@e#!K^IeTj:PTKhd1!`!g`ehu8hh?E7Ro"9)!G\m
%[&NCed$/I;fj/^p3YYlQ5VBt"5l&,ZRW^:e<B^g*"8&1THRplPj@oUPK]>cr7?6NESZ'8bi=;;"T5_:#r?XI-rknT\nF<04'[DH]
%P>A*"oBAMSLMa\j7U61P/_`+Yp.OVQ\o0)WD&dN7pD%GKn;#CC;jMgPf._"5hlW"[j.c.u2LPY^eY&0kh$e._Mh,aU_6)7t:L?)P
%Q(.lS90Bhk0P90EAM-2'[OBC0d4t@=XaX*EY+mb2YXp-U/UF#fFD[=KJWhuN-P,kKVQF+$bAh;u!Fn8uW26DM4PQ@9So0Bs-k:@J
%SsYR0F.-rK<+>0%IPjp?_H#)+d8Ull*B(#6)5_CI^Osd-\'QI/%l=eh;Kc3AO._bI[dL8rI-'jO\JDrXIf&AuHC?<P5nfci83cre
%Ar.-Ci9+4teRcR-BjGtpk^/c:R]'im/M"U)?$.[&_^(H&XEjSAF]4$gg<+qcgGWf4lLtBnL`oW15Q"9CC=%Ks8NZlAS7>c61%m1n
%M2)WD,L(L]j<6$J3NG81@_'u5Q/T3P$uZndH!,u>S5,d0#^D]`/B$K2W:1Z>o+7Y`@?uDB::&0V=t6d&7_Q==^1FoIX]ZR`.+R<Q
%#rX(;OiT:M\WIb_PiCtkI(u(6I@8Q)":k:;RsF+N52H)#eZue8YL-E,k^HWRchH6*L"DHe,Lh[POS?lMe/"R$';@,,+[m4"_-BqZ
%STE]Gj!ZujVhD/d)\WZh+J`kn&DC-P6J2g>4t`1W*mL\eFOng*l4!*NWG&H5COL>:4q&m!b/UV680p4l,.EdqNHn,">8-bkcK])m
%S,G]bQcZ&7I;4^Lb0r4E6Up/!o\u3Vli0QEn(A5(_(qh(I0A_&n:X*7(+Oc&eC8S("hWm3gd5tKa%hJ/2:q73&%W<p=5ASe=jTKS
%7g#=&V"O-'824snNQjEcg"o;UhVi3'Ga9IJ/A&/fL*\@rI+aOY8/Q"rF_B$bRsZb=gR4Dd`e_@s().K2=8Q]KIdF/b217Gmpbu4/
%-V7^MCm!KjM!Np2BSZh17,_Mp3?>Fu^Vpdt"]/kTD)\YL$[_G\cGHX2Le*q5J:&gR3S==3OaPqVLQrAoD-h+/Gk[?f!*ZVR0Mn>s
%FV=bGim'!]c>b+B:D3!oMuq*7DEH&86lX^A%Di)4`HCg"m;,0m/Bg2_`*ArXG:LE7=<S4"O)?".":]IuJBZ.h/k5MeMia@HMGp6q
%=[edsSd+\D,n'c2*?qn)FbX0`J:ihYRr4Y!Pub75#9]pb*]oo*Oo9V!6\7J<3(*D6":mq:g$?@<*_O<aoTIa"AufM,\7'K>BCB\m
%j?t)9.%Y9?JJ/Y&2knY^!,@nlGeu.AiTZe=rd=;\!Se>3i/%&hjT*3QC$DmAhEYOIr#%&P"6gnbE&HrZ!1r_\ZU(,%@H<.n0s`O8
%4U6L`!0P3p\gW1tJMlPA@dR]gC2oEFYZkfMZ%2ZFiTh.9+F>(?ZEdD!p!]_b+K[4/6HEik6Of)YOi_!LN4n%&+0qZkJ-K!=%qc:E
%eh51EJUW[_OfC,`HSR(q+8Fl%3D3Ia3&j/R9enQ`"*BuS\Ng4A<j*$sbu_lV(1g\ej;VI*%#Fea^M/emCj\.SC5r*;bNT8P;KI!7
%.'6b'TW/:sWi+,/`l?Z"8[Y^iUd]W6JMGT-6<O*Ko^CjQhi>hh_0B@RT<IV9/^82Cgk-&aknY\0jf;%('B(0\0m<0s`W7ma5$k2-
%MJu*2mG4OkAdP+j-PF.,"e!Dg>r\$QW(@98E3"_b[iNn;Ef]o2#g<9QTpt)4V/V^"["[a$hF1-(L)QSpD?c9B@3J2DfYaQhp0?Ec
%Hn:kSM[m!;,1-lm(D)L^!A5=?12N!Y2jpW.?nqO)-e>Hln0;u18/KHa^biZl<&!@WoE)0XAO##<k_=M@(nNM8K%&9WR?[+TFtS.3
%U'Qj_&ppq#J?n9G;ptbff2SK/f,m\N$<hmB%RM\R!7u@j[DCHQSN0o^4>6$*3nYZtp^pjbK+>Ku/uM/q_*I9RTnQ>$HhHpY\e!IH
%]O<ocn5!kFXNB)8,/\)8Wn]biFsDs(ebh]n%;Z,AK0;%eJ=,anO2Cg-ErWcT3hd?H>)\_T0C-ah?SW!Oi6[L-^Vb%K[o^,.8!&-h
%oLj>Ni(ZuG%tm=DNGkWHG).Ij^QYQVj_n8Em'PJlbsIZEU(9\l$0E9Zaauen8:FT&1%Hql)DQ]N(X[G$^,aRG,/9c_n:I!K!g5cS
%dL&U\Gu?:t*pD(A6-m<=)jEniJp+p;?I99cs&V%1p?r/*TsV&%[0.P#78F2umV,Cha'[1.GejdAigiu>qD5*HNZ[c'iCj([>plQ<
%DkD1O<<:Y@OpZi+0G_gei&.hppD>'`kSMh\TO/b4XNECMg[Zdd3c#]e3:,ZJ.:htWViLlt5g0O*='k:3Y#%W74[^L"LWoC_c"UT!
%e7+1#AUP`+^`D&!IH:rp7Asg>f*MZ2H%*-@NK!d`gm^N6XjT5[fBuAN>4S$@d0OTsY4G&^2h-Zn<Z?p14t_pAf(B:D3hYnPq#`rb
%dtEnF%KV.EK007,pZqLM2Ng-6)V"XS9mbIY!%DS'&D7/$@gGK0iF*5n_5.3/og^`,CL`D2%D$P(bUQ?U56W-.3t^u$Q?R@i<>$3c
%1`:^-.VR&j\.bM]`NI<=!6>%OcC:fWHrN3NKb^t_k=-%k(!7cp6KV)64jV5&]0S.d3I6E/F!WYN3GU?/0K;7b&fNg#0$70MP*M<*
%8NA9)!VU$OJhkm8%Wj[+c(Ds/;-2&@2'hP\09anUM%S#hIk!3kLR$-U8oMus0/k%hFS[+mK]WOPST^E4P9RmW@G<:m'P<=W(j#96
%E-PUK3f9o]V5Z+rOG>&LI660kiUfCJ!OS5GQhuOXp<^Ffs'T?`&=$n'qif\.DTX1<S2B&eMq,1DIDTkHCrJjW_n@QlYm==:MmZq$
%H0%&X;-k;K+XQl.rDP]Ih=K^(\oh0ZO?71J`b>QS"0S^h[]+f`/mgSmTBHE31O^:_8+7Qq;dCWHL'42@'[MAbHYB!q9UKR9<N^C[
%\-:EN,<^`V/D>UV%5_c$316=?\bX]QO)o"r"PB,:5OHNIU6Tg;UKq@jF'tIVACKnEPk([pQ\'D4#TMbKg)UO]R_=<dG=)^?-ET?G
%$HfPDleAlKY2<%0*0Ih#Us5&@Z%*UZQc[<)Z)jiajt9*IAkBfFf7T[?eR0/##m].MrY>8OF7ZGJ[AKdN)PAMfF;jI?LUHPQ2)`k/
%'qm+0q.QJ+XVi;)gl`"\VRr1'`f9cP7'FAg:$2'^&cLC(7!A>5-]-!F?8tT"O*T\@JL1<DH(ld=(JYYZ!k`KLW"S.d;oL4HSj-:u
%RsEt'_$aR/>;Uoo:D`E6$g3FSnFR#shgbWa&J)Tpb")l25%c.\c_!&B,;5QEHGT3NNBdI0H".M4rkspljFoD1'`>;8cMQCQ8+aMR
%h\S)_8Om]8#3ora*gY,q8B6!QH<mr"1$nc+V"-17"F+=78He/tDH>eXj[L6mdIOl"Xe6PP<B]!=7^\$ZVRUP0(>)7aNJI"F(2'm8
%.3(B=)X=G_?,%jC@@UCc$MJ=p8].5:MQYRMl@PEbOIABTm-@>K1JkS>U<?_,bkp:\<TeqBIqbs$4HM3ogXqSn/:<3jOpt/0X%*&H
%fAAKHLrMKLHEKM'$Hm(ES+;sQRYBg@>"io`=VRaeFS_03dt1k!@>)na$c,@VcM*_(QdO$_hT`>o<cu/&Eu<7LYQ-6?,Go.oO$%t-
%?F)e^pGVqXlYf6kYBF&eV%r_?eYK+<R?S!-QF;EU@q7M*kFC4aa69\+M+T9Zb71ig^8C.d%!YI0>CNR2Lkg>Vm#NMpCr-,8fth-%
%Yk1\<.@X2Y"F0l%7mj,q8:+G:l0Y(U.9!nAI`tX!fd;i]<ER\ahHW-dUsO,s7s#mc1+uA>ifC:Vg+-s`NIb%p^]VrP'oAUH$q,l.
%31?VJ!:DrF`A\VL<Wgi@&c-1/[L'na]AO9\8uDZkk8emh%V]+B/u`9C3D*009H=EQ;,=YIlXM"gdrARBOQi7T.MZRrHG7]@mVB@;
%i.CF^FSg/Gf\*ibrZ,+mhPt)*:OnamAqpUG/>?H1%HRf9Y^IV)_%\\i!XkE0[JCB;q^hOtG/$el@@7ami+Tlq#dTS^6R_hG,)Nr;
%2h.[]4T>4iT(jpC%%Mc8#:<6XCnV$.p.o%:VM_[DId2;r<^du3nPbCTEVG!3;o@H]oRY#R%4/@oR7PCWl[CStR0_Z%NO0FuNg7Ts
%AJmN`DlAf@$TNgd1cF&W7]T%s3/;Wtk^_OW.f$Oj=[h:EOfF;]]]\a8q&s`&ZHT"2c=JKG0]qT&A34(g8qnV6mZ_EIo.8?)jJaCZ
%@dVf-;k-H"ChDV!D1/Yj?eD/+3dH^-0VL!bE>EM2OEEa#rA_r?C7]hYYf,hf>4aN>nVtIcMm0.Zq-(dMp'Y:mK4@^-O`\?k'!\PE
%a9(EQqj-`7a7.-MVb@0kL?XgkHCV^a+^$#MO>YSpf=UY'k,=a_b0WjD(^pr/cN/*V:R=dK__U@_U5t9p9W*Wb)?$IMfYZaaEK"PV
%qse2CN.R,]2;UBk&,I'gNOl\C.F,V@L3\Z_!4Y+L:q<[CXt]$:mHoL:Bot5u3MPi1;@065eFCCt9T8,h;RJ]%m$7(8XL`,c3o+sN
%!C((1-D`K;I4sbj;`dX/`;&_7#K=61STPis9=(iQZ6(7U\PNP3[h"!0n..nV9uKgd?,Qs,c@?4P1qNm&bE7IV,gQQH[9h8HA*T:M
%l5C#OMqp1Z(jkZtqO%hR9'ckIf`"Y_Yusdl=bTj]Xlh++W9D]<eml=b/!Z6m%D%N>+5_X'n:UO9TjjBmW/P4VU.Ws@2D\Z=OV^>>
%!C:m@77e'Yp:R*eRE%"H#&8-c.ZFg7=+cU<1h\1_/U%HZ66t3(80)T+3Rt8Am*K=!>(&G7G&KarTeoso]9,E4gY1g=Hm>t8)N4Ju
%l-.A#('CC>Btr"e8?h7A;FPV6k"5S]q@@o\;X)^a\W-CHalS(UWV.@l]efugi,DL^^ghVV7i6M4ECWsm1_rL6HSZcqh%:4+L!:fl
%jK<'1KX18H#P6`E+XsuIl8s$!d[H&>ROs%Y@h+-^>KueI.U?(VNk058s"'C<B82)/;IRK((81N8JMr>/J1I$2o]"=^M)tTaqfgTZ
%Fsn9-DQ(L8ltjrd8?N8q#8tG(Q1l8@>A_pBS-?M/@;ekk"DTo,ae]k6D<sC!)Y59h4WK2Z*H$Qh9$W9Bpkgs-6n&);Tl3^DmIMui
%G/J"$n(U-F#+*qFp(>R:fRaJ^>qCSW<^u+8FFh5C]bhBX.o^`sU/8hH2!\tnAY<#fT%/82e8u#.7$YKODp<'cr_YaV4_'7a^<SUe
%T=n_cnXOOjLSm-KO2&WF6M,SiHNbej!rjaLn-'<Q$XVb"^#0&H<Z'g"51U"ROd!1[hoO"0$QStJpYq\3"SO4sh$-1"W![**W@d->
%:5U3-F]V(Ynh!#==KgTZE\k#u"qa\5INo?n9P-Pbpu^^D['[)_UQo$\&AXdt[ceIJBM?Co0+0;Xf?_%k^K!:r9TPN(h0Yp\3S6>O
%9'cu6L3#0@Y8k+:8mf=.eo4uDGes-%q*Mpk5=-DY#&K6>USa;g=G(#3`V)MFFXhK+pg3Z7]+?Q&("ceb#(AU_o-[VZkDc8?ICJQV
%Nj;*\WqsNR7f\kU4"IA^kXN3XJ@lg;&.Fh-hN-jkUTlW3e3."p,!,2R(`h>."%V@e9YWQ`_lV^-T,rsTD#D6:6\o[DRjV0^J,7Sg
%H%WbPRr3jQ8:.)oHejl9Ym8l^,QABmbb!0!%Nm$L)H>+-oU,:%1T99>-p!i_E&;Zm9Q(E(&Qp?d,<DQC<'Y82OmcZU`RNH,m=2#$
%Ah&^5NnTcGin#ZSEjiW.<$`nD-W#MsO,727:R^]T/&qcu(4]-GrmdY/\l7D^qg<GK_uKO&^\NY]eGj22a'\l/+9'<aJ,17:n\<Wp
%s7iesiG\_h05i5H'_+)tcZ6A0QWq3f)P/g\^\Jt/!Lf1d.L>bharcFos5?_0=k1Tq.WFsL,!5hA-iAOCp88gnQKS#B]\P-WA`g0G
%[dt)[rmHbNeXQNr?GW1^iL?bAeiWhLB-30)J`9%j`2W&!g>5F&E],SM5f4JR=+\Tj3`1N%B"D&s!k^ZnL$,)<9]]!u+gtH&nj"M$
%.-t7h@\HTJU))ZT0qNmSL)1A(kP"rU\%cn@03n:u_hEkFYB%UB0;$ZRm4RSo"7>u`QZFm1op>EJ]pPeVhcK;*8Za5]XZWD1976Id
%<pQ'Q9JOCNWA?jk$7<)4G-HuSe%1pjohU>b5eMMk^XZHaVkJC^4*?:qFYH7>8XWM"DJ\a(LM-*M<aDDK6eblQ;)JMT[s0ts(qj6r
%QH!h01&qdk=q/mNPKN5An.1k/SMaNK$fb@$T4<ib,d?_3a^</q5m490p8joHh,fXG4KTTCg8ufYA!LF^#k<KL0F+F^L$$Z;b8+0u
%,*-PClrk[q+ifm"7kSY;NS8QQ=cKk,",^"pD:O4g"#XcK,&fN@o[5?ZpY<5IT>m=0G?"FXC$IH0X:5GdlO5*Vl1e\2V-X,NQ7Zmt
%ZfXTQg9Y"4qqC-nXI";F,3+<6h*l!`JTYHp\!OKT]$er-A",W@\4paHOG('n#sMXq+U.<)f+oC>)jRpMX6*@b.TjT-I5jk7$C"sW
%P?(E3E&(R3'm@qS!b(E3%`9f\RT:%hD#^ZGNNedo(J"2P,Q_3l:+HaB1R6ZT%%q,nDkOohA4e1Q'DZ!bpMB5SnlaCUG?Wechs^a8
%r9]T'E!i@OZCr/QYU]<Rfa?2s=k_M@\$%/p`;l>q(dUg6TRSPk*Pba,5.&@Y8r*RM4WVtr!$-b!I<\KZU?U[3N]6(6X1Vri:J2QX
%#=odloW;EkNH8oSS(D=@A.26e=D@pV,k`?U(itU9C_lQVlckb'E[(,s.U\.KZ3V*ZL=:7u#c;*oS"IBL6jW'm^LrT';O$%4-#+Ao
%X3cD^l4uVE-MKtt0UOQ+WC2P2j,%Yp!*IH2`o&X1.:TQ5ITl;Sc;9<tG;!f?<#/U5F_U_rLFU;+p\6N5=\YDRCV*go'C1W*XG]J@
%<F`JeX<h@2>+8eKNYsSe-,X$33*[;9:\HiMfa$#t_ZYacC<0_f76cdVP)iJDP""s^<rhFna(>OSXAW7&h^<+,V;@sHZ6FjPUi*;Y
%!QncE5@)N`MYd3YIEmJ)V^$%M3\4PF15&D^*UE>>%e^9#U:%Br"7!B=!2JTIP@cfoL)K5=7AfAHfjejI)B2[!!IFP$0Q6l/cY-]Z
%&sL6jVuO-efPVdLJ/6rJe.<IYZPr5sN[h9YXAm`O5/qbK+9sHW-kl0lRGPil>OIP[e?p@Bo`1H)GZ.R6Wp_S[V21H9VdYYt:cM:B
%M]Bl$U/.:89V1tF@Bg@DI^"q$!Z"<Y?g"$V1??+DC*BAme*FW<4Fn%Se4[meV/Hf"4b''*^le^5<mU^t9U!8:d]U=+Zh;MgG<J4X
%`TNdsT<CE0.gZ2na$Hs1rSlBGZBI@++J:FZenSJ?25#/PX8\,107,fb$g($EY"6uo3DUAJP?rO8,2Q9(SJ`ts@&G+jIICr:*T(Ll
%b=l5G23TWfnFL)A0#bBQR\0]/d35'bA'rH/=DoQ,a^?E20IgP_J`j#6Y\+rG!JB[?S>+^G"(g$4!IK::d"k9HUhhtPp/rF5E()\V
%:lCt\b[K.($c4\_3[mR3FHjhB/^Dgofgg(n:!B[.IRkgFkcaO(m#3c,Pqe8_(o+)*:RC`.8?6H?gX4cqmHo)IJ@a$)4a5o@)Ic+0
%V7%0WW%oINCE;1mm+Lkonr0'XC0+l^VG0E($6O2la6f7/ZPe/RF>;%X@6WF(p.*n=9&FkH`D"H1k*Cgc`!*XJp;L#22jBKo`V$l6
%,.+l(4_Wdl\D]FX,*,L2c(U6KNk]11KPI0WA]f.bEibq>2.g'</Ud%UelXQBGGsUPTUd.eerI`'\76RgS$ABP2D._4E;,eM`^_/1
%DjtP7?&@9S<E6B^d0u]d`[[3>n1]BU!Dli;qsNI<;IA(5LAZ^R&IoTXODHcj+SJT-=`Ug^'DSO<6pYV##u%XWJRiOX"qu>crMjbE
%TT*BJ]ZY!8.q(Z$SY8$.*XQkhH!38'_bglh,0j12k<L&&EMImaSOt#o%3AMo-!ET=FjQ:/]mu0E4'KU4.[@E*>a:%(KO?$lld7;h
%1\o'iZkF2Ib+ndQ$0ajHHeC*u.8ZO<K?p&7J3=sC5aO3H>"l#`*kiPdAM;$.V/0QV2!*f3GA7D`i_:^YN@GSoV@fA`*-_tSTH6pC
%h3#!C3V;N+?gIQ)FZcdQj14%//clEl]X%c8Z-:KUU16eqok'aek7hc=At)RXoF4C"jB25^fhWPd`_B[Z@9a8f8&"'8S*V?Hg,;'I
%keA**)$<]RhG;JEG,"[!&+,m'\<);hL(d`YS4VF9X;EcR);j;LL5Fi3QEi*qFL^DmkN7jPTUbrFM_hZT^"$S8+57`O%$PgGj\7@B
%2&PW;VZt1'lX$gSkUT)E3OWP$!sb-B",flLr\$ePg5UN4+df$dh5ru-<>7_%`sZ6"JM,lHB2bF9:V@iW46'jP6O7U<CTNVQqG_(_
%fg2[4DtqNpMDK4@b`cq'7CpKJ+ke&V\][qD:9&sA'X"]=/bXEa*p"f,=q!?M\S7*&$$%qPajO97/naKq#FZ)MLFo:?Md8$]\-916
%U;LW`k&8I7iY(0ih.(OD9&`$QE@1<0qfD1^pMS.qLG)Jbos/@I*u'EQGG#c\W.MBi3"rRC^$Ia!3%k#&f@_B6"RAL0O0d@GN[S7U
%Fp7GgNTnoK22g'bh.t$]"N&dal%M5X3d:&7[ErH2%2RH0c",:`5?OOBbh@J:W5aZhXjtR!=Bo_k-EUJfng%l43TJ]GUK&+fSuqR*
%?QrA9)(_WAC>RSE/aQZ'i+<:Bc0=P.1tQN<I5o[eDlSE'?m:&LP_?%7EA)b73^S#Qo6$Yi)%Jl!nR!&4oQ4>-I$MAe9X"FL(Eci)
%G"TBeX4:;G%2oJ(cW_<\(2[4m36LoqB\Rr^n>:Q6@Z;PA-(DeAKWaIt5j+%CXOu?DWrV$CGWLKc>4T^<%6GRooc6ILPApp$-/8ue
%!4BsJDS(9u`9;uH'aUPG$bR>7LKN;cE_NPo!A-9`d0_f:Me*i\SY6?l)]+ddfMCRWe%Wn3KsoQZ<?X^$qf&@Q$#cB*LkZ(#;hrof
%YSlbE68t:l33o<2%dO.1lD]c$D4@JWf@K$N#&Ej@0%Cuh*kmP/K^/11CTOsYLS#H/CW&pQ3)QS+HPtGG263"uJLk/j1q9$`lMqK5
%[-Y.@_sRLYZZY=r=ABqVhQ;KK"/P0cR;T46"568gS%BNRC%tJ:^I%0!r(_IbFsaBp7'EKOGapMPQRU\<BLb++bF$k)1_<\PDjYk,
%DUk;FaH2@-GfSeeQlB:YMmo+*hsI34/6gGuJAfucA^5:_Yt<ua^2817>";MuAnRJ@<-RWUfR8+IAETQA^2aDWDZ+mRf)#,3T.9u1
%Qc@*<3%$-dl*m&"#j?c\/5s'd2i,OCX$"`u)1MCQn,e0l%>b1J_cZr;O-R6XT,E*=:EhG$ieigl:I)83=JU't%DEqMHL'JdhS39Y
%qT\L-]Dlo*E;FAJc[Ynk92=]/c/!9r<WCPEfDf*_J,0_oLHke-hu7utn<^o!rqIl@.Mh]\s4),0Dr6KecGon[I/H3c>g%g0GVRWY
%fJH\a8M..BVFgB"!Lpod+TikS[2uU@0r1VQmd2b^oEg#Oepi,I@[k@(0PhN\\hS.?W^c=qA3`Mb#']$h`/p/k(ikSkd`=/cJ0`0;
%n-*?i1Sgk"V.<8A1K:!b4X\r/DFa6]r7@RT>d<pe=hYF=e)110dk.I)qe^N7OHIU!`rCZK4snFd./ilhd1>r/hu4:c_4C!3rc#Ga
%pqoc%VGEfMSGr#phH;&ZhuBaHf&,D8a>grFjKlQ@cTF0Cc=cd5s5AZQ6_?J$3U@:&T,koQ&'b^?MYe&TIsBo\0tt4`7?"FA5"G="
%:<sR5oD@"tr/$nReUO`leGo(d+1k<L4e,HcI7kOE4&.p#`O+]t@(MC`.r`KCQa\0*Yg':K/*rjoIl`)RQg92r2*;_?'!b;fogM/2
%*SU<JY1W%s\+oF"2!Zd*?0]rqUQAL0gk?J9[gFfca%lVB-h@B%d-t;.UAOrg`'-@i6"O,/s&``;%h6_<MJ=,[1=Y4'45J54:&k&s
%)fH^s=;aFqNRpS`".dFT#u\"%.1DrrerVJKNb6h?5M6M!PgSYhn:[SQ>Ef^N'aESKdn4S1@C.i48nAEICt']2!)[Z1<oqBn<A@Jf
%qf]nJ6tV\4[(Xa^R4EJKe`Pk4_m;Lf1#KT=U3YGodd(Z<8[K?uJ#8!1>?e,R\&G5$h6+STV[N3^AP[L,`6:u(bVni06nHQc3uR;'
%2nb![a3EpWOlZFE\Tg9i1Ap*Ie"$F0[XI,YIW=\6pTB!?Zhj7#lW(?1"2%S!>*9QLDLZn;\Y$(U2WpZ5n6VW0Y2hJ.'/a]XG[Adi
%0&]SiPin>1RpV?X`@aStKK8R.5/7C5BYXc=Hg4;;_`'EBpNUdFIhC(sV\3SaY^Cg(9Q=)!IK7&h>MVs+:8r+2N''3TS:fpGh[7=%
%HTm:)L%fg2d$!]T=Z>bk&1RCrAqo's411aL)>g=elh(]gb4@oudE'G6^*rTN6Tb=f=0@e&,6/QVjU9st-9ZmQDof$QlI6uE+hGa<
%+Xj!\%0iq'AW6fQCF0(M(@s9_=fNAoEH9ET@eDGkb[.FN)8^3akC@^F@9I4XP%[[:R#QC&pPo7CXb3b,RB>Sd"bjZm\S,Xqo=^CE
%I\AYiN3>#CW]7uRQ8(HNP\8tV7=M\T@H+@\7?,OqD<`#*!61(:)SfJH<^X2t%QZ\Wlm>>9f^a@S)hOk\Fb9QE^j5!;QiFh6CYOj/
%7\]>Pndk=)+Su_\H#'^V-[V%"`bMj:>d2m/@oaN#_WhcTg0FW+H&>U4EI+G5mZA_R,6Q'G9QcIte%?F;;gH0)QS!/jEqQFsP'Ts]
%DD4`s6[AVa`5r^(8snnf5KN25k[p_.`tjB-+2i2p0Vt^$^t_!3L2(_D,1R&U_'+CJC#HB;.riqoEN?#Sp,IJ!cA,Jt$BlAB"mQKA
%8UIjCLN=)R(tUVVX=-oqXhr5^WcX",:259blXtY<]0Pq@flcuOgWfSBp$)>>n`):Kcd.&d]m9PNYFE_)c1R.qbC^!<'=_>2s#N6T
%H,Xf9p#tYjeP+Tje]E;j3IAFOW?HJi`J3-*r\k2q4([KtHuf&RI%r3[-OdWJ^YYKoI!*nQ8KD[rna,i5k%oJFci:+CYLf+"GF&7+
%D"HK-qYE[JI]MOrQ`"$To-/1%p@IFY=6lJ$ZbBaQ]]QEjj/PC_4nA:Bo(7<NrQY2u2RT:IDb:=anaq3MH2;o:oBQ51RafejV4N)i
%Rj$diV^9b$P8B\m6Uf-b+nD;S0sKa&DL\33gqnPoSr_@=oW;;HJXk"?2]j%/jpW;nLsgF(@]2+3Y]k#B&kBH)>+p\^#-GY5HfieW
%;`Wb_rmVb1=Ab`l>(r51U3)1dn$,1=7bP#XW@V`/Bs6q"N]J5Mo:=/%a]gUbSq*aneF`&^VUOQm`(S/FIWW>OH+&(X?T@C**:t$W
%q$RH*2sVJbO1r09q0$h"Fa^h]/\h&KI=IUm*.![TSd]RV6*ri4d`q,8d"EMPZAFm66Su;TK1#e]WhFf>Q9pWF7\HU@KR^";YXHuK
%iiMf3R*l<!QjY[*o$W=R+acL@$V%6_i;Sc$6p6]IL8e+NYcdXXf]1m!_E^_iMb$A(qps(1[Jj4S.]NoW.X0NO>!H<JTp5/iTN>S\
%EP`"nY]U@Qam^T2Rt*11Fibr./'^$Zs#Ofi]Jq"AB4Di,\uND<\$u]S-:upX&>@\;$:`;fZE1#=ocX+heZGcL=Qf#T#Adu4Vj0`,
%<,Z`Ap,-@@lW2=]WpC=W4"M1L4%ajW/''?*cUVmeV;`E+__o)Qf0T5f><p`h2WA*,C4gjCG38&oK@q+F2\t!jQmN0!.6,eO4j=gh
%)HeolLmEjC"<V.;1b,TuFFs[u<nXk..eB#D&X_1H$V%;%orO>!S>pRajjho,Kn4-+d+*LfF>3>qaM0``)!.XC.$7&eruY0^[2\X3
%],IJoG4OCj<cDKj`WQ?%TM!RsmPN[I#T&GINRWjI!a$0HQj>"iWDo8Y[=SJns*?fa<-h=L\b@skjQfjo.]NoW.X0MtcF+Bl`P;^O
%GlkgFA]p"&k8^i<,fCTGGMB8#ibKY*YOcnT^$9V"lNS"g>f=Qs.bTmA5e?aFYNH%@[3I#ZY(O'uO/06#N=G/8?-rX-XkXS)I=B-%
%k0uJ]0g)RQ=[eT5<TO_.X.t(kPU3l<R:oue87t9mQ\-AoDB,^T-2?cJ:arOo:\V"]g4Yi*Y&5qFS-I"8O[tfpY#3KUXVXVaE]*8k
%<dqb,)N\E:l;]=8F*<0j+OW89V)%d!PZbZj2Ikh8<m`Cs%&te$fNu6SpdiM2ZJ,J9\"dJ]Uj\tG(lFN@ll>+>*slrmU0\hoMbSVU
%n%9+X^Y(H>Tb.fDa9V#CO-LsW8G0,tN*Hg0LG<tH\\%OY*@Mg@e9SXA(_5MHXYG?)_tDiP@-$QQcRRYMW>ar3MkBV3a&-^oS*+sZ
%U(T,^UHoCSRS'$r.&h;Bh_XYBVX`#U%N\6fnSJde(q7727__buB-;a+L_`#n1IaPtNli%sd=@^^`cimiVOcLM%"u-DWDs/,+Si`n
%_8sa#U/b/1<)r@j]t-5i%4)0T)!MT%T&sI*Jr#KKor[&*,mpI5At%[]mH04@eR:?QC,gd_!H/HZ%//KC7o9#(DJ"j_$p'ZjZVX(\
%ilSKs8rY8Y.i;b=BIC10JD?9\TAp5IDJg2+U<T@2Eej&Ajrk.T!5a8U3)VHZj19N&4I>b)b=aGtVY,i2*"9+s5O0aT4G!ha;Y8<)
%Bl2Q]MZ#4S(jQB4ZlMd-iTN=V$I[dJ-l-.Y:/cplE9i9jLcjF,=9Xs5U2Gb2-X@@>G6euYU#K8X`Cn(dMh8kT6c9?7`"+!kF9iq;
%aPiaM%j(%ri(ou8?N"NCK%Pr%a@;g;k=,-+ca1.-,9SC2o$!m.jT02m.f[KcDg4$ZJ)7TZq=.nFT4Lm+o35+P^\kThXP3&H4:P*$
%gAXIA\FbhHEd&V,:s@)=:UEsC`aXWuc;mV@6"-FS,dlR[044CJdohbu&21s-?AL;_*?+*7@1WSNcI,6"ANJHfAM"o'lBHh70[*tV
%I=*sURNJ&HMi@<,Bb=/p0Z09qEh6DNLQEnM`'TnDU(=d:38T78=V;_K8h?A-I+j<DpKgQK#5!%lg49_jRZbJ-J/'LK(o2DHmRP/_
%?;N,TQ"13IVXDgEho`Q]AUDum)*#[&"@b"87ce?7j3'#*L'dO_;c_?H1_i":L:!Ah3u.4li[u'W(4g*lUmW+6r>6s*CS$l4i:Na)
%G-EES9ugI10Ek6q#.*_\^\rFqe2:fjN(_7?:5/*U`n7PlSd(-J+(n4+<%tRr(0'N`:t1jMbc:DP93qT=9lso'dEu6,DM=R%<3C\I
%6kN\p[mk?a.f"[BaYSs$T2NfRmo6so+/)p:3)Gpg/"9VL[!Eohnk7<I?R,+QK1G$J$O/ta/#^ks3oVh\=n>roq*@KA>7^[L+8<L)
%1K_YXn;\'s'?/58ljMfGT2rat+,%aW6IaT]J-=b,A*$[spGfl*HXR7tg0Ubq\->r!r;uL]E6p#06q!XC)@1L1-:i9KYVN7/Sblgb
%OU^JCe7s;^BfDQG:"n@/4#'a_5,[49a2>"UhG7Omr=!ar!mC?ePi<PNn`aM;dqm7T]C-14_^E#+%Yh(9TINuHjQKn9Ku$,F_0DeU
%@AO&']Y]f#,*jjTl3*^p-s1Tq(oo7"f!Yo9X/aU9#Ms*G#&X+E[rW6c8<XAWCsT%h4=m9-]P"Hd)>G!Xq[3Z-KgYjV!WW-cE/2QN
%U$m6H'3N'g\hrTiB^%!#4p4Y[KK)C]$m[o'+cbZ%=%IFoXe#k<l.Ut$h0AGPdnWRlfO5[k"@9r`f>X"V[&H<<XhZ-j=&njmQo+en
%2Iht"Eid4/X&Kq&/ra3d.jsD(Lb#TJ8B<g?QS+X^I]d>tD$Dk_F5,H[TTnV>['aTP^0[?HI^*]G7n4i']Hs#Y&tq`G4/;JU$N4gg
%]231=]UBqX%Xp-b-fg@4,=X_IMRZ`TE:6<M.i>mVq<4:n3+'kj[AL4HW,Qab^f]Lcn%ou[/:!abd0tl0\WTrhfi$AFc)s/)alE*N
%5k@E*AsNBXdD7\^p*1U#MX3mrT<6-\[U%'VnT5=ZWid'R2gO)_,qDsc`:uH;jp<B+/X\>X.(E2]Y>ISj2Efm4"(e"M)Y'8nXhkqh
%k=Rn<BP/WlS6K;YR&:7$=NKEf4DcpEr5+ekcWF;B.77m](X>*bopitGc6AMl@9[dAY528Yr"e3LUWTLOJd_!ZA@pE9$78M#=72>%
%o%b$>23eO/d`'B2K-(Ph"guL'e8/?c1F?FoMH3Sc:fTNb]mA@8g;P.Q^;n[T6"A*XEB>_6n;3HK#)g""Mnc<VaM[\hn[*g/(`-C1
%lAUYb=9T.f9HA+68h6_('MQ.Z`a1EIc5/,kN=+^_`Q80kR5XP\/P%^;Ed$fmArM.CX'%lV3E>+pnu]%VGM.0pgWl@lL_m4LQ`YuY
%Y(`4EKHJ-+pTR9hJ7lHCct7?DOIOMRbr;-L6ce.Fgd%T&G+Q5gaTf*3FC-0N@9uM-Z[jHCj64<&1M&*YH#Gb1UaSJ8Q=3E'S/Z?=
%WPZ.LX?_2b<18(YgaPZ5O?@&q2.5c=9W6LD_TJs[FRFe#&]3>lQ!1l[.XuApr"L,EfPfYk7j-g<pH>mF^N6'D%<BR$FFKB2XhMTt
%4Hu2i=[!!-O"=&?WYSU>g874C;_K+U@Uj_\$KE&S2P"$_qhSfiVj((dqn<8neM^^6>D8>F<U&9Dn$>aG0j/b!a;p9c_M5s]jrlSH
%%j^LkbM^-Sk[-==0-'[%%f5q/(ck=r%XlAb$N!a(E2B6N`tC!A>\q5!fs8%CrfT*VUhkQ[m$aPSdeHPj&e1#q9;tl-QS+8)@'Bc[
%DZ$4A=3.^n?0R;>j-PX(;.WR(3Oes9_u<VE..`Q%G?X$+]e-J1'.PpUDfbo(b&1ee)4=mlD,*CS6kOl?>:LB-V2Mej4<e]Vp@:hT
%*%A^;2]39"HsNc*"KOCPhq[^L#QC]]=E]B-&k#5oS]e7V'qd5rkAj<'$_>Rdc4u;/)l>s]d6t=]f\oP9_k_BoY/"GL:H[0=PpRQ3
%i47@6$RY<'MDe=CB2pt$rI.*51o289IXEbi!"J54$r/OC!S7d7f>QX"D>ser,X1?a_,W2IlHGR.%\ocO`>+ECZ,eO5N?]9S@p_-(
%m,D3l.]TSL.d)QD:Y_R7@P5SQ,0aJr/f$F]$WH:8>bRMjWFY#<<XL0+/n_n`.&HVS4,"%$U;b(QUMmU-@aQ%`"OHg,Y@-@!Y%Equ
%``.q=]D!<<^L^9TE(R]]6+h.s]PoV'+Qg7jL%:!]ff_b&+)L![)<44Jo.fAK-P(#eNNVer'YpN7-h:so9%sra&kk$A`ci=_Lr*rc
%Le49V7FkL#ajUqRLs%DH.i_L:4M0)M5qP4kAM[;W<n.m]AW/%-gV#R#LhjZ69&]^jl,/o.ZJfbumf@NSImC4[Bs+@SPK\Z]g8EY`
%"U>c>b*p[@;G!i&9O8_")-grL'roNgjH+8R"q9@f;qN3A>FKQN_=EcP_b-WC'eJBef`K]9bgiehb",Ah[sMK,po[0@I8*rD:i&*b
%>96*mr]oK?]8-/-"8n>@IECE]A8&`mA^4`:5BI\P.AW%!5LE2kg^8(#9[_]"`+`ZoW4<_ibV;Lr\^@O>&T6s_:0Pjal%JAE.B&KQ
%9jL#6"NmR+<p#GS(Y*(4KH%L%NQ"lq7G#c/q[MClY$pOW!%s-jcluihBZP7jr!7%Ec;t'>+<4B^$H0)!;7.`aZ;EGmC?cMOjVI#[
%eE&=5cnqo*ZT,&AQcfrP="5VMap_-+[s-^QHPF:80G?FE7N%XE8llW6\^YtWElXfZB`bP4bOOX?M!J;uldRA>b@R"IC6+lV1cqi)
%9\FgEjYFb,PmWDA1.0R9mCf,?4UPZXEat3hb(sO2"a+JrnjCNgA+It6r2;"(!jQ*<#tJ#^n8B"a7a\(E/sY8H:]hnOXUQi%YqMCd
%G,s+g"?Y(i]",6C':D?VjW[09i:dXGga[":mBIacHB3bUf3'ds#Ap,!lrWM!6%bt&Y#D5@/sdU%.'E8O6WL+lfEUp&i_CV>/6B%_
%2D_AE\\3>"aR<HF/m5V8=gTeaZ7]:ahYZC+YaGBqcV>!*pihY4hjV^Vd>rcAro)NH\_2E-i`G;Mr+5O]jn0R!ADnW=SQ\1&r%nLO
%SqS!VV)_l^[^lD(ZOD6PI/S*WrUp"<s5Y8Oo^_\OkKRaiH&3<@q'gg$H?m2LI<0PE=hT9,oa;<n<$1nrP:uru*V+]D'"!r~>
%AI9_PrivateDataEnd
